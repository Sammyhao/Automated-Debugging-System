 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I got a heap runtime error. I suspect that it is a compiler bug when it use move too excessively. A simplified version of the code is  if I swap the newrow(row) line out of the inner most loop, it is then fine like below, vector<vector>result{{1,2,3}};  no compiler bug here. you keep a reference on an element of the vector, then you extend this vector, which can lead to reallocation. This reference becomes invalid.  From cppreference on "If the new size() is greater than capacity() then all iterators and references (including the past-the-end iterator) are invalidated."  Thanks. I should but I failed to realize that the push_back can of course invalidate memory potentially. Thanks all for the quick answers!  1 Answer 1  Here, the comment I made initially about your code:  you keep a reference on an element of the vector, then you extend this vector, which can lead to reallocation. This reference becomes invalid  Another comment gives the link that explains this behaviour.  Below is a minimal example to illustrate explicitly the same situation.  We can see that after extending the vector, the whole storage is elsewhere on the heap (elements have been moved) but the reference still refers to the previous address of the element at index 2.  Thanks. the checkmark is too shallow in color to me; I didn't find it the first a few times. Thanks again for the help!  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  