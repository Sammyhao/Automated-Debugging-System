 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Often when solving a recursive or dynamic programming problem, I find myself drawing a recursion tree to help simplify the question for me. However, for some questions which are complicated I have access to the solution but no idea how to draw the tree.  I was wondering if I could generate the same kind of tree in a mainstream high level language like Python, Java, or C++? The tree could just have the nodes as the function name and parameters like in the image.  Are you asking how to write a program that generates a tree, or are you asking for an existing such a program?  @Petr If somebody had a program that generates a recursion tree that would be great, I could read the source and figure it out from there. If not, pointers on where to start would be helpful.  2 Answers 2  I’ve made a simple python package called recursion-visualiser which you can install via pip that helps you to easily trace function calls for any arbitary recursive function and save tree as gif and png image by simply adding a decorator to your function.  Let's draw the tree for recursive Fibonacci function. Here is the recursive code:  Now let's modify the code to draw recursion tree. First let's draw a very minimalist example  The output file is saved as fibonacci.gif and fibonacci.png. Here is how output animation looks: Also the final image of recursion tree:  We can also make it better using node color and other properties:  This is more compact than the requested image, where repeated calls with the same value are represented by one node, and N edges between nodes u,v if there are N calls from fib(u) to fib(v).  To get a tree one has to maintain unique IDs for each call. Here is an example for that:  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  