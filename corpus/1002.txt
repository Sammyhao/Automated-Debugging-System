 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  The method below loops through a given , storing both the frequencies of the numbers found in the array along with each different appearing number into a .  After looping, the would look something like this (num=frequency):  Following this, the method creates a , representing designated x & y coords for the size and frequency of each integer. The x axis represents the size of the number, and the y axis represents the number's frequency in the .  The output of the code is like so:  Now the problem I'm having is that I can't seem to figure out how to plot an asterisk at the corresponding x & y coords where they are needed. I want the graph to look like this instead:  What I need is a proper if statement checking if the current coordinate being printed is that of the proper column and row, and if not, then print an empty space. As of now, all the program does is fill in everything with empty spaces. I've tried messing around with the code a lot, but it mostly just ended with bugs and exceptions.  prints four asterisks that are out of place, and the other way around throws a null pointer!  3 Answers 3  Should work by inserting something like this before printing:  If you really want this in the setup loop (which I wouldn't do because it seems less readable), you can do something like this:  The reason for your OOB exceptions is probably that the graph array is smaller than your numbers; typical reasons:  off by one errors  coordinate mixups  insufficient array size  Note that the code fragments don't mirror the y coordinates as doing so when printing seems easier than mirroring them in all other places.  Edit: To fix the size, change the code to  Or keep track of the size in ine of the earlier loops.  First of all you won't be able to display your indices that are too big if you use a small array for display.  First, you figure out the maximum X value (), and the maximum Y value ().  Then you create a 2D array to store the graph, with space for the axes. Since the minimum Y value is , that means rows plus one row for the axis. Since the minimum X value is , that means columns plus one column for the axis.  Then you fill the graph with spaces, and "draw" the border.  Finally, you add a according to the key () and value () in the , with adequate offsets.  To make it easier, build the graph with the axes at index 0 in the arrays.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  