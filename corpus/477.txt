 Find H-Index for sorted citations using Binary Search  Given an array citations[] consisting of N integers in non-increasing order, representing citations, the task is to find the H-index.  H-Index is usually assigned to the researcher denoting the contributions made in terms of no of papers and citations. H-index(H) is the largest value such that the researcher has at least H papers cited at least H times.  Examples:  Input: citations[] = {5, 3, 3, 0, 0} Output: 3 Explanation: There are atleast 3 papers (5, 3, 3) with atleast 3 citations Input: citations[] = {5, 4, 2, 1, 1} Output: 2 Explanation: There are atleast 2 papers (5, 4, 2) with atleast 2 citations.  Naive Approach: A simple solution is to iterate through the papers from left to right and increment the H-index while citationsi is greater than or equal to index.  Time Complexity: O(N)  Efficient Approach: The idea is to use binary search to optimize the above approach. The H-index can lie in the range from 0 to N. To check if a given value is possible or not, check if citations[value] is greater than or equal to value.  Initialize the search range for the Binary search as 0 to N.  Find the middle element of the range.  Check if the middle element of the citation is less than the index. If so, then update the left range to middle element.  Otherwise, check if the middle element of the citation is greater than the index. If so, then update the right range to the middle element.  Otherwise, the given index is the H-index of the Citations.  Below is the implementation of the above approach:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  