 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I've been stuck on this problem for a pretty Long while. I always get "Time limit exceeded" when I submit the code. My solution is to input the items of the array then determine the largest number in the array and diplay it along with the elements following it and so on. How can I make my algorithm more efficient?  You're searching through the array twice. Spend a few minutes thinking about what returns.  Looks like your link is broken and according to my firewall it launches a malicious attack. That is the end of my helpful mood. Please fix it without detour via a hiding/shortening service.  @Yunnosch Effectively. I should have said ... that the answer was considered helpful by OP.  @Damien Sorry for nitpicking, but that misunderstanding is widely spread, especially among new users who did not take the tour (hint, hint, bassel27), and causes confusion and sometimes frustration.  1 Answer 1  A O(n) solution is obtained by iteratively calculating the position of the max element until a given index .  3,85944 gold badges1313 silver badges1818 bronze badges  4  Isn't your solution's time complexity O(n^2) too? It has a for loop nested inside the while(n!=0) loop. Am I wrong?  No, it is O(n). There are 2 loops indeed, but the size of the outer loop is decreasing as much as the the size of the inner loop. At each iteration of the inner loop, a number is written, and there a numbers to write. So is the complexity.  I don't quite understand you honestly. The while loop is executed n times and the nested for loop is executed (n-index) times for each n time. I think the time complexity will be O(n*(n-index)) which is O(n^2) for the sake of simplicity. What did I get wrong?  If the outer while loop is executed n times, then the inner loop is executed 1 time, as it would correspond to . Try to execute this algorithm manually.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  