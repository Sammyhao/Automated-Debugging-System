 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm new to C++ and I'm now learning about pointers. I'm trying to understand this program:  The value of a char pointer (like ) is the location of the character that it is pointing to. If you increase by one (using ) then it points to the location of the next character.  Not sure why you but use . Typically in code you would do this:  44.2k44 gold badges7777 silver badges105105 bronze badges  6  Omg, Did I change the value of text variable by increase the pointer? I tried this and and I printf first variable, and worked! char *text = "hello world"; char *first = text;  @KaanKölköy Yes the value of a char pointer is the location of the character that it is pointing to, increase and it points to the next character.  Well, thanks. So, Is there a way to print pointer variable after increase the pointer? I gave value of text to another variable and after that increased the pointer and finally printed that another variable.  No - typically in c++ you would never ever use char* = "whatever". You would never ever use a for counting characters in a string.  First of all - don't use char-string in c++! Use std::string.  Your while loop continues until it reach zero which is the string termination, so %s is just an empty string. The '<' and '>' is still printed even if the string is empty.  Your text pointer start as the following chars:  After the first loop, text points to:  After second loop, text points to:  And so on.  The while-loop continues until text points to '\0' which is just an empty string, i.e. "".  In that case.... tell your teacher that c++ is not c - in any decent company you'll get sacked for using char arrays for string in c++  And BTW - don't use pointers in c++. In most cases you don't have to. In most cases it is a design error - so reconsider the design instead. If you really, really need pointers you should consider unique_ptr and shared_ptr.  We didn't use char array for work with strings. We did it to learn pointers. If you can tell a better way, I can tell it to my teacher. Me too said it to teacher, but she wanting to teach us.  @Kaan It's an entirely antiquated approach to teaching C++ but, unfortunately, extremely commonplace. Just run with it then buy yourself a modern C++ book after the course completes.  is a pointer to a . So when you increment the pointer you make it to point to the next element. The end of a string in C is delimited by the null character. So you are incrementing the pointer until it points to the null character. After that, when you call it doesn't print anything because it prints characters until reaches the null character but it is already at the null character. This could be a quick fix:  After the loop pointer points to the terminating zero of the string literal because it is increased in the loop.  Also function is declared in header And string literals in C++ have types of constant arrays (Though in C they have types of non-constant arrays. Nevertheless in the both languages you may not change string literals)  You can rewrite the program either like  Or like  Also it is better instead of C function printf to use standard C++ stream operators.  248k1818 gold badges161161 silver badges285285 bronze badges  1  "Also it is better instead of C function printf to use standard C++ stream operators." Why?  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  