 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  6 Answers 6  In C, (in most cases) and these equals a or character pointer.  So you can do:  This will point the unassigned pointer to point to the literal bytes allocated in the other 5 lines of your post.  To make a string literal, it is also simpler to do this:  Alternatively (though you're not allowed to modify the characters in this one):  The compiler will automatically allocate the length of the literal on the right side of the with a proper NULL terminated C string and will point to the literal.  31.4k1212 gold badges5151 silver badges7171 bronze badges  1  just some suggestions: change to in the first line and make it clear that mostly. Not so when using sizeof or certain other language features.  If you just want a copy of the pointer, you can use:  but that means both point to the same underlying data - change one and it affects both.  If you want independent strings, there's a good chance your system will have , in which case you can use:  For printing out strings in a formatted fashion, look at the family although, for a simple string like this going to standard output, may be good enough (and likely more efficient).  When you assign a value to a pointer - it's a pointer, not a string. By assigning as above, you won't miraculously have two copies of the same string, you'll have two pointers ( and ) pointing to the same string.  If what you want is a copy - you need to allocate memory (using ) and then actually copy the values (using if it's a null-terminated string, or a loop otherwise).  14.1k77 gold badges4040 silver badges7777 bronze badges  2  Some would say that, if you use or , then you couldn't possibly be using C++ - you're stuck in purgatory awaiting full conversion :-)  67011 gold badge99 silver badges2121 bronze badges  3  There's a buffer overflow waiting to happen. Always use , and make sure tempMonth points to properly allocated memory.  I didn't downvote you but I think your allocation should be for . is the size of the pointer.  Fixed and upvoted. You know, you don't have to leave your answers as they are if you want to change them (I think you can edit your own posts at any rep level).  Post as a guest  Not the answer you're looking for? Browse other questions tagged c or ask your own question.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  