 Add two numbers represented by Stacks  Given two numbers N1 and N2 represented by two stacks, such that their most significant digits are present at the bottom of the stack, the task is to calculate and return the sum of the two numbers in the form of a stack.  Examples:  Input: N1={5, 8, 7, 4}, N2={2, 1, 3} Output: {6, 0, 8, 7} Explanation: Step 1: Popped element from N1(= 4) + Popped element from N2(= 3) = {7} and rem=0. Step 2: Popped element from N1(= 7) + Popped element from N2(= 1) = {7, 8} and rem=0. Step 3: Popped element from N1(= 8) + Popped element from N2(= 2) = {7, 8, 0} and rem=1. Step 4: Popped element from N1(= 5) = {7, 8, 0, 6} On reverse the stack, the desired arrangement {6,0,8,7} is obtained. Input: N1={6,4,9,5,7}, N2={213} Output:{6, 5, 0, 0, 5}  Create a new stack, res to store the sum of the two stacks.  Initialize variables rem and sum to store the carry generated and the sum of top elements respectively.  Keep popping the top elements of both the stacks and push the sum % 10 to res and update rem as sum/10.  Repeat the above step until the stacks are empty. If rem is greater than 0, insert rem into the stack.  Reverse the res stack so that the most significant digit present at the bottom of the res stack.  Below is the implementation of the resultant approach:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  