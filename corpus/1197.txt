 Sorting without comparison of elements  Given an array with integer elements in small range, sort the array. We need to write a non-comparison based sorting algorithm with following assumptions about input.  All the entries in the array are integers.  The difference between the maximum value and the minimum value in the array is less than or equal to 10^6.  We are not allowed to use comparison based sorting algorithms like QuickSort, MergeSort, etc. Since elements are small, we use array elements as index. We store element counts in a count array. Once we have count array, we traverse the count array and print every present element its count times.  C++  Java  Python3  C#  Javascript  Output  What is time complexity? Time complexity of above algorithm is O(n + (max-min))  Is above algorithm stable? The above implementation is not stable as we do not care about order of same elements while sorting.  How to make above algorithm stable? The stable version of above algorithm is called Counting Sort. In counting sort, we store sums of all smaller or equal values in c[i] so that c[i] store actual position of i in sorted array. After filling c[], we traverse input array again, place every element at its position and decrement count.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  