 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I see in the code of the Typescript compiler, an implementation of "HashTable" (in the files src/compiler/core/hashTable.ts).  Do you know is there a way I can use it directly in my Typescript project ?  4 Answers 4  You can implement a very simple hashtable where the key is a string by defining an interface  It can only be keyed on a string or a number though.  Would the process be more difficult/verbose if we had to key on a more complex object rather than a string or a number? You'd think TypeScript would ship with a built-in dictionary data structure...  Well, typescript doesn't ship with anything, it's just compile-time checking. So we are at the mercy of javascript.  I get socked with people trying to reinvent the wheel.  Typescript is a superset of Javascript, meaning that any Javascript works as well.  One thing to beaware is the fact that the implementation of Map here lets you set the same key multiple times, where it overrides the old value.  One function I've made and use to avoid this is the following:  I pass it a map I define previously by doing something like:  or  And than pass a key and a value that must respect the map key and value types. Otherwise Typescript compiler will throw an error.  Download the file "hashTable.ts" and put it right next to your file. Then at the top of your file do:  PS: I would recommend having a look at a lib I authored. Here is a dictionary sample:  224k5151 gold badges407407 silver badges475475 bronze badges  2  Is this still the best solution for type hashtables? Or do they have something similar in the core typescript now? Thanks.  @DavidThielen sorry for the late notice : TypeScript does not ship with a standard library (like the BCL for .net).  According to this blog post, TypeScript defines a interface which seems similar to a  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  