 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am implementing an iterator for a Queue data type, but the iterator is being initialized as a const inside of the class implementation for some reason. I cannot figure out why the constructor is causing the iterator to return itself as a const.  Any feedback as to what the intricasies of the C++ language that may be causing my problem could be, would be very helpful.  The Error I am receiving from Eclipse which seems to be coming from my begin() method is:  Interface:  Implementation (I've included only a section of my Iterator code):  is marked as , hence the used in the function is as well. So in turn, the compiler gives the error that it cannot convert from a const to non-const.  Understandable. But I'm taking this for a class, and I am supposed to implement the function this way, so is there any way to implement the Iterator / begin function correctly, so that I can pass a reference to itself to the Iterator?  1 Answer 1  The error is because is marked as , hence the used in the function is as well. So in turn, the compiler gives the error that it cannot convert from a const to non-const.  Given that the function signatures are fixed in this case, to resolve the error, added will help solve the issue.  You could add to the constructor signature  And make the member as well  Adding the where required to ensure that members and functions remain as required is known as being correct.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  