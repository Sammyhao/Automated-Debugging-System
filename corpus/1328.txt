 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm getting a runtime error on LeetCode, but this works fine on my Linux system in 0.046 user time for largest testcase. The output matches exactly the expected output on LeetCode. My solution uses a hashmap and a doubly linked list. The hashmap stores an iterator to the linked list node (in addition to the key->value pair) so that the list can be updated O(1) instead of O(n). Got it to work for several testcases, but I get a runtime error on testcase with cache size 512 and 2019 instructions.  but I get a runtime error on testcase with cache size 512 and 2019 instructions. -- So get the test case, read it in, run your code, debug.  @YSC All it's saying is "Status: Runtime Error" with no other usable information.  @PaulMcKenzie I did exactly that on a local machine and got Leetcode's expected output exactly on my local machine (they were good enough to provide that to me), but getting that runtime error when I attempt to submit this as a solution.  1 Answer 1  There is a problem with your function. When you access the cache you have to invalidate the entry and update your iterators. You do that with your function but never update the corresponding entry in your . Therefore a runtime error occurs because you then access an iterator which has already been invalidated by your function.  Looking at the following snippet:  The returns an iterator, but you never update the iterator in your map, so this should be :  Excellent explanation, Samer. Thank you. I had assumed (incorrectly) that the get operation iterators were being updated in the addq function.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  