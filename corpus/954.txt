 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am looking at the non-recursive DFS and BFS of a general graph. Besides the fact that the former uses a stack instead of a queue, the only difference is that it "delays checking whether a vertex has been discovered until the vertex is popped from the stack rather than making this check before pushing the vertex." Why is this "visited" check order different? Or put it another way, can we change BFS to non-recursive DFS by simply replacing queue in BFS with stack?  I checked all posts I can find such as this and this, but none clarifies this question.  1 Answer 1  The DFS algorithm you show from wikipedia has a bug (well, at least a serious inefficiency) in it -- it will reinsert back into S nodes which have already been visited. The BFS one is more sensibly designed, and you could change it to have a stack.  7,2331010 gold badges3636 silver badges6060 bronze badges  1  1  Just double check. So if I replace the queue in BFS with stack, I have a non-recursive DFS?  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  