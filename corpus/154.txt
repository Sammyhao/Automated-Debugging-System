 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am sorry, I asked a question about the same topic before, but my problem concerns another aspect of the one described there (How to iterate a boost...).  Take a look at the following code:  Well, as I got told told in the question I mentioned, there is the possibility to use iterators on in Boost, but I do not know what type it is, and what methods or properties I can use.  Well, I assume that it must be another or something representing another xml hierarchy to be browsed again (if I want) but documentation about this is very bad. I do not know why, but in boost docs I cannot find nothing good, just something about a macro to browse nodes, but this approach is one I would really like to avoid.  So getting to my question here: Once getting the iterator on a , how can I access node name, value, parameters (a node in a xml file)? Thankyou  3 Answers 3  15.5k55 gold badges5959 silver badges106106 bronze badges  2  Hi, I just rejected an anonymous edit on this post (as it changes your code). You may want to check it out to see if it should be incorporated into your answer.  I agree with Andry, and find the documentation of property_tree to be extremely minimal at the least. I needed ptree for loading identical objects with different settings, and had trouble figuring out what the iterator iterates over, what type it returns, and whether or not it will remain on the objects level, or go through every node BFS-like. Finally, I managed to get my code working for a case similar to the following:  settings file:  First, I added a constructor for my object, which can initialize on a ptree. Note that I'm using the get with default option, to prevent exception on failed get()'s:  Finally the following code loads both objects, and places them in a map:  So, to answer my own questions:  The iterator iterates over the settings file without descending into lower levels. Running the above code you will find that the loop iterates twice - one time for each object in the XML file.  The iterator returns a value_type object which resembles a pair, and has the and accessors. is an std::string holding the parent node (in my case "object1", "object2"), and is a , which can be used to parse the fields of the object.  9,1321010 gold badges5757 silver badges9494 bronze badges  1  Thank you bavaza... your answer explained a better approach... I liked it. Thank you  You should have the prior knowledge on the input property file.  Boost property tree is not a general document parser. It will do parsing and give access to the data, but must locate it manually.  I don't know there are method to navigate whole document, but if you only need the properties of your own file you can do it with very simple code.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  