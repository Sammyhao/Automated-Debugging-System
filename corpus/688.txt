 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  This is my code snippet for DFS with out recursion in python:  This is how my node looks like: class edge: #def init():  How do I keep track of levels of each node as I've to implement depth limited search without recursion?  1 Answer 1  Your current algorithm has no way of counting levels since you are not keeping track of enough information in the algorithm.  As you say, keeping track of levels is far easier when doing recursion. The difference between recursion and interation is not that huge. You exchange a function call for a loop and some minor restructuring of your code to compensate for the loop.  You should still be able to figure out your current depth even if you have an iterative algorithm. If you would start with the recursive version and work your way towards an iterative solution while keeping the depth knowledge, then i think you'd solve it.  This feels like school work to me so i will not give you the solution. I hope you understand.  One hint could be to hold not only the path in your queue but also the depth, for example as a tuple.  "This feels like school work to me so i will not give you the solution." Just wanted to thank you for that. I'm banging my head on the table on this same problem for school and in a moment of weakness decided to search SO for a solution, but I will go back and redouble my efforts.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  