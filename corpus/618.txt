 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I would like to know if the STL in c++ has contiguous memory - or is the memory assigned to the heap?  @Xeo: I don't think we're thinking of the same meaning for the word "stack". :P I'm talking about the CPU stack, not just anything that looks like a stack. But actually, I've been thinking of making something that allocates in a stack-like fashion. Is the purpose of your allocator to provide efficient allocation when they occur in a stack-like fashion? If so, would you mind sharing it? :D Writing allocators is a pain...  Is there some specific reason you care. Maybe we can help more if you explain why you want to know.  2 Answers 2  Since is a dynamic container, the memory for its elements is dynamically allocated (whatever that means (it depends on a configurable allocator)!).  Moreover, is a node-based container, so each element goes into a distinct, separate allocation (so as to permit maximal iterator and reference non-invalidation). Elements are almost certainly not contiguous in memory, and probably scattered about in a way that reflects how you added them.  Practically, a map will be implemented as some type of balanced tree in order to achieve logarithmic lookup, insertion and deletion times.  (If you want a data structure with contiguous storage and logarithmic lookup time, consider a sorted vector.)  440k8787 gold badges834834 silver badges10451045 bronze badges  4  All true, unless of course you use an allocator that goes out of its way to make the items contiguous in memory, or you get very lucky. :)  @abarnert: They may easily be contiguous with a that takes a memory buffer as input to allocate from, but they may not be in sort order inside the memory.  @Xeo: There's probably some node overhead in each node, meaning that the actual data is probably never contiguous.  It is more than likely implementation-specific, and you can certainly change the allocator of any STL container, but this is not for the faint of heart and you would need to look at the documentation for the standard library you are using.  At any rate, map is usually implemented as a red-black tree and tree nodes are on the heap.  (Tree nodes, if I understand correctly, contain instances of value_type, which are key/value pairs of your map).  Note that stack is a bad storage idea for any container as stack should be considered a scarce resource.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  