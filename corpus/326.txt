 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm currently working on an assignment to implement Prim's and Dijkstra's algorithms with graphs, but I got hung up trying to implement some basic graph functions based on this header:  (Note that I can't change the structs or function headers as they were specified this way in my assignment.)  I'm having trouble getting to work correctly.  My code for it so far:  My problem is that when I try to print all the edges (by moving to a point in and then cycling through that s next's like a linked-list) I find that every node in is (if I'm traversing it correctly). I'm not sure if my function isn't actually connecting the new s to the original graph or if I'm severely misunderstanding how is supposed to be used.  I'm assuming works as a pointer to an array of pointers, which are essentially all heads of their own linked lists (because the number of nodes in is set based on the number of vertexes in the graph, and I'm assuming the edges are added as "nexts" to each of those base nodes)  This is my professors implementation of the function if it helps:  Note that I'm basing my understanding of on how he's used the variable in the loop.  *Edit - added some code as suggested in the comments to  Also, I've noticed the program crashes after calling it a few times:  Based on some output statements it seems to crash right before , I'm not sure what's causing that.  In , you should do: before your while loop, because (and thus ) could be , so would contain a random value.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  