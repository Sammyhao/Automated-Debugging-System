 Diagonal Traversal of Binary Tree  Consider lines of slope -1 passing between nodes. Given a Binary Tree, print all diagonal elements in a binary tree belonging to the same line.  The idea is to use a map. We use different slope distances and use them as key in the map. Value in the map is a vector (or dynamic array) of nodes. We traverse the tree to store values in the map. Once map is built, we print the contents of it.  Below is the implementation of the above idea.  C++  Java  Python  Output  The time complexity of this solution is O( N logN ) and the space complexity is O( N )  We can solve the same problem using queue and iterative algorithm.  Python3  C++14  Output  The time complexity of this solution is O( N logN ) and the space complexity is O( N )  Approach 2 : Using Queue.  Every node will help to generate the next diagonal. We will push the element in the queue only when its left is available. We will process the node and move to its right.  Code:  C++  Java  Output  Time Complexity: O(N), because we are visiting nodes once.  Space Complexity: O(N), because we are using queue.  This article is contributed by Aditya Goel. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  