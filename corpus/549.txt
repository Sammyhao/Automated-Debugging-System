 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have a basic hash table implementation and when I run it, all is fine but valgrind says that I have lost some memory.  I think it may be due to the way I'm allocating memory to my keys pointer. Here is my code for the table:  The emalloc function just uses malloc and checks whether it allocated memory properly. Also, in my insert function, I emalloc the size of key. But key is a pointer, so shouldn't that give me the size of the pointer not of the word?  29511 gold badge66 silver badges1414 bronze badges  2  Valgrind probably tells you to re-run it with to learn where the leaked memory was allocated. Do that.  1 Answer 1  "I think it may be due to the way I'm allocating memory to my keys pointer."  Actually, you're allocating the keys pointer correctly. Its the lack of ing it that seems to be your downfall:  60.6k1010 gold badges7070 silver badges130130 bronze badges  4  Hey thanks for that, completely missed it. In my for loop, I'm not too sure why I allocate it with sizeof key rather than sizeof *key. Doesn't sizeof *key give the size of the actual char array?  @Paldan your allocation is correct as-is. It says "give me memory capable of holding number of items of the size of the thing my member holds". Note: would also have worked.  Hey thanks, I realize that the part you mentioned is right, but I'm more confused about the part in the infinite for loop in the insert function (I should have been more specific).  @Paldan yeah, ok. I see what you mean now. That for-loop should be only running up to capacity, and if reached, expand the table, rehome the current content by sending it through the hash function, then repeat the chaining process. Pretty sure thats part of your assignment, but you're correct in pointing out that infinite loop can eventually exceed your chain if left unchecked and you keep piling in data. It should be addressed, and your intuition it isn't complete yet is spot-on.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  