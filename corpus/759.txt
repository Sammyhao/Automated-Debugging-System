 Insert(k) – Keep probing until an empty slot is found. Once an empty slot is found, insert k.  Search(k) – Keep probing until slot’s key doesn’t become equal to k or an empty slot is reached.  Delete(k) – Delete operation is interesting. If we simply delete a key, then search may fail. So slots of deleted keys are marked specially as “deleted”.  Here, to mark a node deleted we have used dummy node with key and value -1. Insert can insert an item in a deleted slot, but search doesn’t stop at a deleted slot. The entire process ensures that for any key, we get an integer position within the size of the Hash Table to insert the corresponding value. So the process is simple, user gives a (key, value) pair set as input and based on the value generated by hash function an index is generated to where the value corresponding to the particular key is stored. So whenever we need to fetch a value corresponding to a key that is just O(1).  Code –  CPP  Output –  This article is contributed by Chhavi. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  