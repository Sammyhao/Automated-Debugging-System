 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I've implemented a Trie tree using a JS Map. Each entry is a TrieBlock defined as follow:  Why flattening the trie in a Map ? Just for easing the serialization process. OK, there's an over cost for storing UIDs : these are 8-hex-digits UIDs (like 'a2b4c6d8' is), but I'hope it can speed uo acccess, since Map is time-constant complexity.  My question is : how to pretty print all prefixes for debugging purposes ? I tried to use a DFS (Deep-First Search) algorithm but it's tricky  EDIT:  By runinng that in console :  Whith stack length, symbol and foef flag value are.  But the proper answer would be more likely:  EDIT: (2)  I will provide sooner a serialization algorithm that one wants to be run with a custom callback function for serializing user-defined data.  I don't think it makes any sense to implement a Trie tree with a Map, since you could just use a Map in the first place.  What have you tried? Show some code and describe what you expected and what you got instead.  please refer to this repo: github / hefeust / ecmasy project. I'v tried to store 4,750+ bus stops names (total 52k of cumulated strings lengths) and it allocates 8,500+ blocks in the trie tree underlying map !  I meant your source code where you've tried to solve the problem and a description of the problem(s) with that attempt. Also please provide a Minimal, Complete, and Verifiable example.  1 Answer 1  this DFS gives the correct output, liken an opened folders tree windows does, but in console. Commits in repo github > hefeust > ecmasy come sooner.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  