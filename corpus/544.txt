 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  This is my code for a hash table which stores string values.To use Linear probing in my "insert" function, I need to check whether the pointer is NULL at that specific hash value. I Haven't completed my insert function yet, but I am stuck because when I check for if(the_hash_table[n]==NULL) inside the insert function, it does not enter the branch. Before hashing the value if I print "the_hash_table[1]" it prints "faz", but after that step when I print it, it prints some weird characters. Where have I gone wrong?  1 Answer 1  You define an automatic variable, as an array of pointers. You allocate some memory and put the pointer to that memory in your array. You immediately overwrite that pointer (and the other elements of ) with null pointers.  Then you return a pointer to the local array, but the array no longer exists once the function exits. It is always wrong to return a pointer to an automatic variable from the function it's defined in.  What you should do is:  So, is a local variable that points to the allocated memory. You return its value, which is the address of the allocated memory. Then in you would not .  Also, in your function there is no point copying the string: just read the characters from . Even if there was a point in copying it, the buffer that you create in order to do so is 1 byte too small, it needs to be because the length returned by does not include the 0 byte that terminates the string.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  