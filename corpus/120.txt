 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  So I am trying to make a binary sort algorithm for my c++ class, but I keep getting a segmentation fault when my binarySearch function runs. No matter how hard me and my roommate look at it, we cant find the issue. Any help would be greatly appreciated.  After fixing the segmentation fault, I noticed I must have an error somewhere in my logic because the program keeps outputting that the key was unable to be found even though it exists in the array.  Yeah, they did actually. I still ended up with a few logical errors, but I think that's more of a me problem haha.  4 Answers 4  Your code works actually, if the element you are searching for is in the array. However, it does not catch incorrect input.  When calling the function, make sure that:  and are between 0 and (array length - 1)  eg: if the array has 10 elements, first and last must be between 0 and 9.  If the element you are searching for is not in the array, then the recursion does never terminate, you can fix that by adding the following to the head of :  Not a major concern, but to prevent overflow it is usual to rewrite as It also seems that you will never hit the line (the first two conditionals take care of all possible orderings)  An implementation (for strictly increasing, or decreasing array) could look like that  Thanks for the feedback! Did you notice what my logic mistake was by any chance? I'm not seeing it yet I keep getting incorrect output.  Make sure . I think the crash is because you don't find the element in the array.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  