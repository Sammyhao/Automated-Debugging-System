 Writing C/C++ code efficiently in Competitive programming  First of all you need to know about Template, Macros and Vectors before moving on the next phase!  Templates are the foundation of generic programming, which involve writing code in a way that is independent of any particular type.  A Macro is a fragment of code which has been given a name. Whenever the name is used, it is replaced by the contents of the macro.  Vectors are same as dynamic arrays with the ability to resize itself automatically when an element is inserted or deleted, with their storage being handled automatically by the container.  So we can use these powerful tools for writing our code in a effective way. Some of the cool tricks that may be used in Competitive programming are given as follows:  Using Range based for loop: This is very cool feature in C++11 and would be considered best if you want to iterate from begins to end. This code shows how to use ranged for loops to iterate through an array and a vector:  CPP  Output:  Initializer list: This type is used to access the values in a C++ initialization list. Here the objects of this type are automatically constructed by the compiler from initialization list declarations, which is a list of comma-separated elements enclosed in braces.  CPP  Output:  Assigning Maximum or Minimum value: This one is useful to avoid extra effort in writing max() or min() function.  CPP  Output:  Fast Input/Output in C/C++: In Competitive programming, you must read Input/Output as fast as possible to save valuable time.  C  Using Macros as for loop: Perhaps, it would not be good to use such macros as it would reduce the readability of code but for writing fast code you can take that risk!  CPP  Output  Using “bits/stdc++.h”: Instead of adding tons of #include lines, just use #include<bits/stdc++.h> The files includes all the header files you’ll need in competitive programming, saving a lot of your time.  Containers: Using various containers like vector, list, map etc enables one to use the pre-defined functions and reduces the size of code considerably (more often than not)  Fast cin and cout: If you use cin and cout for I/O, just add the following line just after the main().  auto: Using auto to declare datatypes can save lot of time during programming contests. When a variable is defined as auto, compiler determines its type during compile-time.  Libraries and pre-defined functions: Using builtin functions such as __gcd(A,B), swap, _builtin_popcount(R), _builtin_clz(R) etc wherever that can be applied. Try to learn different functions available in algorithm library of C++.They are useful most of the times in programs  Ultimately, by using these smart tricks you can easily write code in a minimum amount of time and words. This article is contributed by Shubham Bansal. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  