 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Why do I get Runtime Error when comparison function in std::sort always return true?  My guess is infinite recursion since your comparison operator is not deterministic.  @NathanOliver It doesn't do strict-weak ordering and therefore we get UB. Alternatively I guess you could say it leads to a non-deterministic sort because it depends on how many comparisons and the order of them and the implementation of the sort itself.  @Borgleader Thanks man. That was what I was looking for. For some reason I was drawing a blank.  2 Answers 2  The comparison function must meet the requirements of Compare concept. One of the requirements is:  If comp(a,b)==true then comp(b,a)==false  Your function violates this requirement, so the program has undefined behaviour.  204k1111 gold badges156156 silver badges278278 bronze badges  1  In the case of Visual Studio, a debug build will do this check (and force a runtime error), but I'm not sure if a release build does this check.  You write qsort by taking an item at random, then separating all the input into "bigger" and "smaller" piles. Then you do the same to both of the piles. It only works if you more or less halve each pile on each step. If the comparison function always returns true, everything goes into the "bigger" pile, and thus the recursion never stops until the stack is exhausted and the computer reports an error.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  