 C Program For Swapping Nodes In A Linked List Without Swapping Data  Last Updated : 27 Dec, 2021  Given a linked list and two keys in it, swap nodes for two given keys. Nodes should be swapped by changing links. Swapping data of nodes may be expensive in many situations when data contains many fields.  It may be assumed that all keys in the linked list are distinct.  Examples:  This may look a simple problem, but is an interesting question as it has the following cases to be handled.  x and y may or may not be adjacent.  Either x or y may be a head node.  Either x or y may be the last node.  x and/or y may not be present in the linked list.  How to write a clean working code that handles all the above possibilities.  The idea is to first search x and y in the given linked list. If any of them is not present, then return. While searching for x and y, keep track of current and previous pointers. First change next of previous pointers, then change next of current pointers.  Below is the implementation of the above approach.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  