 Arrays.binarySearch() in Java with examples | Set 1  Arrays.binarySearch() method searches the specified array of the given data type for the specified value using the binary search algorithm. The array must be sorted as by the Arrays.sort() method prior to making this call. If it is not sorted, the results are undefined. If the array contains multiple elements with the specified value, there is no guarantee which one will be found. Let us glide through the illustration provided below as follows.  Illustration:  It is the simplest and most efficient method to find an element in a sorted array in Java  Syntax:  Remember: Here datatype can be any of the primitive data types such as byte, char, double, int, float, short, long, and even object as well.  Parameters:  The array to be searched  The value to be searched for  Return Type: index of the search key, if it is contained in the array; otherwise, (-(insertion point) â€“ 1). The insertion point is defined as the point at which the key would be inserted into the array: the index of the first element greater than the key, or a.length if all elements in the array are less than the specified key. Note that this guarantees that the return value will be >= 0 if and only if the key is found.  There are certain important points to be kept in mind as follows:  If the input list is not sorted, the results are undefined.  If there are duplicates, there is no guarantee which one will be found.  As above we already have discussed that we can operate this algorithm either Arrays.binarysearch() vs Collections.binarysearch(). Arrays.binarysearch() works for arrays which can be of primitive data type also. Collections.binarysearch() works for objects Collections like ArrayList and LinkedList.  Example 1:  Java  Output  There are variants of this method in which we can also specify the range of array to search in. We will be discussing that as well as searching in an Object array in further posts.  Example 2:  Java  Output  This article is contributed by Shikhar. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  