 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have a problem with . I'm using it to map some list of pairs under a specific index:  It's used in Dijkstra algorithm. The main problem is that map sorts keys in alphabetical order, like this:  But I would like to sort it in a different way:  Is there any solution to this? I read about making my own comparing class, but I have no idea how to do this. Or maybe there's some other way to solve it?  4 Answers 4  You have to provide your own comparison functor, which must be passed as 3rd template parameter when instantiating the map. For example:  Instances of this class is callable (hence "functor") with two string parameters, and should return true or false based in a strict weak ordering logic.  Then instantiate the map using the functor type:  Now the map will use your comparison logic internally to define the ordering of its elements.  214k2929 gold badges373373 silver badges458458 bronze badges  3  Ok, I got it, but how can I compare strings for differences? I mean, how can I find a digit inside string?  @user2342783 That's a completely different question. You should ask that in a new question  @user2342783 that's a different question. But you can iterate over the elements of a string (each of which is a ), and do things like call std::isdigit on them.  Like others have said, you need to implement a custom comparer...  And use it...  Normal comparison operators use . My above also uses it, but with a custom comparer plugged in. The custom comparer uses to do the comparison you want.  15.9k22 gold badges3030 silver badges4949 bronze badges  1  5  Although your statement is correct, it is not helpful on its own. At least write down a minimal example just like the others. Also, cplusplus.com is not the docs.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  