 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I want have a vector of Waypoint* objects that are sorted so that the waypoint with the lowest distance is at the top of the queue.  Here is my compare class:  And here is how I'm initializing the queue:  Whenever I update the distance of a waypoint, my queue seems to not reorder correctly. Like for this example, shouldn't the Waypoint object with the smallest distance value be at the back (top) (index 10) of the queue? Here is an image of some debugging of the queue, I've noted what I think is wrong:  I think it may have something to do with my shaky understanding of pq's, or that I'm initializing all the distances to HUGE_VAL.  1,85811 gold badge1212 silver badges1313 bronze badges  3  1  is signed or unsigned? Floating point or integer? Why is a class and not just a function?  I fear you are using this for what looks like a graph based search. That's not really what a is meant for.  1 Answer 1  Whenever I update the distance of a waypoint, my queue seems to not reorder correctly.  No, it won't. The queue doesn't reorder itself if an element changes; doing so will just break the ordering. You'll need to remove and reinsert any element that changes in a way that affects the ordering.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  