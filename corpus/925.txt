 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have created an application to send e-mails to more than one user but I am facing a problem when dealing with a large number of recipients.  could you add a command that Queue was trying to call please. Something is failing in your scripts and we would need to know more to help you out.  @VladVladimirHercules its work fine with number of queues (who are at first). But then these errors appear. You can review the image above.  I was update is how command was called in your failed_jobs table. What you sent us is an error, I am after the actually command call. Also, did that error include any other information?  The timeout and tries is set for an individual job, so when your job is queued that job has, based on your code, 100 tries to execute.  @VladVladimirHercules The question has been updated under the payload section,please check  3 Answers 3  You set a in your job, but this timeout is larger than the value in which you have defined in the this config.  The --timeout value should always be at least several seconds shorter than your retry_after configuration value. This will ensure that a worker processing a given job is always killed before the job is retried. If your --timeout option is longer than your retry_after configuration value, your jobs may be processed twice.  You could define a new connection for long running jobs, and set this connection on the job (dispatch to specific connection), instead of using the .  1,44811 gold badge66 silver badges1010 bronze badges  1  Unfortunately I have made the retry_after value larger than timeout value. But the same problem appears.  The command, that runs your queue worker needs --tries= and --timeout= to set the out limits your queue worker to allow.  This makes sure that your commands cannot go beyond the limits of your defined workers.  You can use the job properties to achieve timeout or tries, below. And use queue configuration file to set a default.  Unfortunately I did this but it didn't work, you can notice that I did it inside the class ESender  Probably not your solution but your .env file says connection database, but you posted queue.php focuses on redis?.. What are you actually using.. did you try to switch? You have the same issue with both drivers?  Are you aware that your throttle / release will increase the number of attempts as well... see github.com/laravel/ideas/issues/1381 Doesn't make much sense, but it does increase the attempts..  I changed QUEUE_CONNECTION and QUEUE_DRIVER for the purpose of testing, but I am already working on redis. On the whole, the operation did not succeed on both  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  