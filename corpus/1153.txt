 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm writing a simple implementation of a Bag in Java. I am implementing and writing my own Iterator. So I'm racking my brain; I am trying to add elements to the linked list. I have a working implementation (the commented out code in the function). However, I do not understand why the following code does not work:  So, given that the list is empty and the current head is initialized but has no item or next: I assign item to the current item, create a new node, set it to the current's next and change the current (head) to the node I just created. Adding two items to the list, I printed out the objects for posterity:  It looks clearly, to me at least, that the next is getting set with a new node each time just fine. I get all four elements added to the bag, but the item is lost and returns null for each index. The toArray() function shows  I'm sure it's something blindingly simple. Below is the entire implementation.  2,60244 gold badges2121 silver badges2828 bronze badges  1  1  also, rather than downvoting the post (super awesome move) maybe offer some explanation  3 Answers 3  The item values aren't lost. The problem is that you lose track of the head of the linked list. Your variable keeps track of the tail already, and since your method starts at , the loop never executes because there are no elements after the tail element of the list.  Consequently, you just end up with an array of default-initialized values, i.e. .  To fix this, you need another instance variable to keep track of the head of the list, and this is what you'll use in your method.  Blindingly simple, almost enough to want to remove the post. Thank you - my head was going to explode over the simple logic of the list, wondering what I could possibly be missing.  From what I can see, the reason it's not acting as a Linked List is because you are not retaining a reference to the first element added. Rather you retain a reference to the last () element added.  You can resolve this by adding a class field reference the first element added  Then in your method, set to the you create. Then when you construct your ListIterator, pass as the parameter.  You can change to showing like this:  Then add the class field to your class.  Additionally, I'm not sure why is a static class, plus a number of other changes I won't get into now, but I guess the class is incomplete at present.  The problem is with your logic written in the method. Whenever adding the new data to Bag, your root node is changing and pointing to the last node of your Bag. Since the next to last node is null, that's why the iterator is not returning anything. Refer to this link for the exact solution.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  