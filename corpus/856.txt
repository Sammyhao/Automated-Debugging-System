 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have a Question about implementing a dfs/ topological sorting in JS.  My question is about the logic of the recursive call (function topSortHelper(...)). we start from a vertex, we first print it and then recursively call topSortHelper(...) for its adjacent vertices, We don’t print the vertex immediately, we first recursively call topological sorting for all its adjacent vertices, then push it to a stack.  Could someone explains me why during this reccursive call in the example, below , instead of passing an adjacent vertex (not visited), we instead pass the Boolean value "visited[w]" ?  (PS : This script can be found in the book Data Structures & algorithms with Javascript, Michael Mc Millian, page 155);  Are you sure it's not a typo? Obviously the recursive calls should keep the argument typings.  1 Answer 1  topSortHelper is a depth-first-search, the first parameter should be a vertex id instead of boolean visited[w], it may be a typo:  Change the line " this.topSortHelper(visited[w], visited, stack);" to " this.topSortHelper(w, visited, stack);"  If you are still having problem with the top sort implementation, I have implemented a working version of top sort in my graph library hosted at github, you can take a look at its implementation :)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  