 Construct BST from given preorder traversal | Set 1  Given preorder traversal of a binary search tree, construct the BST.  For example, if the given traversal is {10, 5, 1, 7, 40, 50}, then the output should be the root of the following tree.  Method 1 ( O(n2) time complexity ) The first element of preorder traversal is always root. We first construct the root. Then we find the index of the first element which is greater than the root. Let the index be ‘i’. The values between root and ‘i’ will be part of the left subtree, and the values between ‘i'(inclusive) and ‘n-1’ will be part of the right subtree. Divide given pre[] at index “i” and recur for left and right sub-trees.  For example in {10, 5, 1, 7, 40, 50}, 10 is the first element, so we make it root. Now we look for the first element greater than 10, we find 40. So we know the structure of BST is as following.  We recursively follow above steps for subarrays {5, 1, 7} and {40, 50}, and get the complete tree.  C++  C  Java  Python  C#  Output  Time Complexity: O(n2)  Method 2 ( O(n) time complexity ) The idea used here is inspired by method 3 of this post. The trick is to set a range {min .. max} for every node. Initialize the range as {INT_MIN .. INT_MAX}. The first node will definitely be in range, so create a root node. To construct the left subtree, set the range as {INT_MIN …root->data}. If a value is in the range {INT_MIN .. root->data}, the values are part of the left subtree. To construct the right subtree, set the range as {root->data..max .. INT_MAX}.  Below is the implementation of the above idea:  C++  C  Java  Python  C#  Output  Time Complexity: O(n)  We will soon publish a O(n) iterative solution as a separate post. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.  Method 3 ( O(n2) time complexity ):  Simply do that just by using the recursion concept and iterating through the array of the given elements like below.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  