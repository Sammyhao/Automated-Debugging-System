 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Desciption : Given a binary tree, find its maximum depth. The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.  Here is my solution  But it throws .  Then I change it to this ,it runs well and accepted  But I don't think they have any differences . Please help me to understad where I had made the mistake . Thanks for your guide, cheers!  1,50811 gold badge1010 silver badges2121 bronze badges  2  Add a println statement to your method and you will see the difference between the two approaches.  1 Answer 1  Here you are calling the maxDepth method 4 times which is not efficient.  Calculations for root.left and root.right are duplicated recursion calls which are not necessary. Try to think and optimize your solution by reducing the number of method calls and this will make your code execute within much faster.  Your second code snippet involves only 2 recursive method calls, making it a better performing solution.  it is useful ,could you tell me which is . faster 'Math.max()' method or 'Ternary Operator'  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  