 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have a collection of string paths like ["x1/x2/x3","x1/x2/x4","x1/x5"] in a list. I need to construct a tree-like structure from this list which can be iterated to get a pretty printed tree. like this  Any ideas/suggestions? I believe that the problem can be attacked first by processing the list of strings EDIT: The correct answer chosen was an elegant implementation, other suggestions were good too.  1,08922 gold badges88 silver badges1515 bronze badges  1  Maybe you will be interested to read my current working implementation that will solve your (and mine) problem :) Take a look: stackoverflow.com/a/10935115/737636  Just split each path by its delimiter and then add them to a tree structure one by one. i.e. if does not exist create this node, if it does exist go to it and check if there is a child and so on...  Make an empty tree (which has a root node - I assume there could be a path like "x7/x8/x9").  Take the first string, add x1 to the root node, then x2 to x1, then x3 to x2.  Take the second string, see that x1 and x2 are already there, add x4 to x2.  Create an Object Node which contains a parent (Node) and a List of children (Node).  First split the string using ",". For every splitted string you split the string using "/". Search for the first node identifier (e.g x1) in the root list. If you can find it, use the node to find the next node identifier (e.g. x2).  If you can not find a node, add the node to the last node you was able to find in the existing lists.  After you have created the list structure, you can print the list to the screen. I would make it recursive.  Make your tree for every string in array. Just split path for '/' , check whether the node exists in your tree or not, if it exists then move on... otherwise create a new node and add this node in childrens of parent node.  This is way how I am doing tree from path (folders) structure. Maybe should help someone with basic logic.  Your answer isn't very informative; maybe you can explain the logic if you want to help others.  This question isn't new; you could let us know why you prefer this solution, rather than the accepted answer and provide a brief description of your solution's logic.  Ah, okay. I tried this solutions, but they were quite overcomplicated and I think I am bringing more easier solution.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  