 C++ Program For Deleting A Node In A Doubly Linked List  Write a function to delete a given node in a doubly-linked list. Original Doubly Linked List  Approach: The deletion of a node in a doubly-linked list can be divided into three main categories:  After the deletion of the head node.  After the deletion of the middle node.  After the deletion of the last node.  All three mentioned cases can be handled in two steps if the pointer of the node to be deleted and the head pointer is known.  If the node to be deleted is the head node then make the next node as head.  If a node is deleted, connect the next and previous node of the deleted node.  Algorithm  Let the node to be deleted be del.  If node to be deleted is head node, then change the head pointer to next current head.  Set next of previous to del, if previous to del exists.  Set prev of next to del, if next to del exists.  C++  Output:  Complexity Analysis:  Time Complexity: O(1). Since traversal of the linked list is not required so the time complexity is constant.  Space Complexity: O(1). As no extra space is required, so the space complexity is constant.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  