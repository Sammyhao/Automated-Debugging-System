 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have a question about my Code. "delete_single_node" does not work as it should. My procedure (to delete a node) is to find the node in the "head" tree, save the child nodes temporary, delete the node and all child nodes (in "head" tree) and merge the "head" tree with the temporary saved child nodes to a new correct binary tree. I would like to stay with this procedure but I can't find my mistake.  I also recommend adding more comments in the code about some of the less obvious parts. Like in the function, why are you calling itself recursively twice? Things like that, and other non-obvious parts needs comments. Not only for us to understand now, but for yourself in the future as well.  I know how to debug, but I am new to C. To specify the problem, when I safe the node values in temp1, why the "deletenode" method removes also nodes from temp1? Isn't it saved on a different place now and away from the "p" node and child nodes?  The problem is probably that you save pointers instead of actually duplicating the sub-tree. I'm also a little worried about the use of (and ) as a pointer to local variables (that will go out of scope once the function returns).  Ok, thank you, how I actually duplicate the sub-tree? I mean temp1 isn't a pointer or am I wrong?  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  