 Find N-1 pairs (X, Y) from given array such that X and Y are different and X modulo Y is not preset in array  Last Updated : 29 Dec, 2021  Given an array Arr[] of size N consisting of N pairwise distinct positive integers. The task is to find N – 1 different pair of positive integers X, Y that satisfy the following conditions :  X ≠ Y  X, Y both belong to the array.  X mod Y does not belong to the array.  Note: It is proved that N-1 such pairs always exists.  Examples:  Input: N = 4 , Arr [ ] = { 2 , 3 ,4 ,5 } Output: (5 , 2) , (4 , 2) , (3 , 2) Explanation: 4 – 1 = 3, hence 3 such pairs printed. In the first pair 5 and 2 both belongs to the array, 5 not equals to 2 , 5 mod 2 does not belongs to the array. Same is applicable for all the printed pairs.  Input: N = 2, Arr [ ] = { 1 , 3 } Output: 3 , 1 Explanation: 2 – 1 = 1. Hence only one such pair exists. That is 3 , 1.  Approach: The above problem can be solved using the Greedy method. In this approach never look for all the possible cases. Instead, look for the part or amount that we need. Follow the below steps to solve this problem:  If Arr[i] is not equal to min_element, then print Arr[i], min_element as the pair.  This approach is based on the following observation:  Say X is the minimum element in the given array. The value Arr[i] % X will always be less than X and no element in array is less than X  Below is the implementation of the above approach:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  