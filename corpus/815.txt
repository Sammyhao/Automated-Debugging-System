 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have created a queue containing objects which I would like to iterate through in the order that they were placed within the queue (First object placed in queue, 2nd object placed in queue, 3rd object...)  I saw a way of doing this online but I'm not sure if this will guarantee that objects in the queue will be visited in the correct order?  3 Answers 3  Implement your queue as a LinkedList. Then you can iterate over your objects in order they were inserted. You have to declare the type of object being insert into the queue so you won't get any errors. You can keep it as object and specify it as a queue of objects then your code above would work. See below.  For example guarantees that iterations will return elements in FIFO (insertion) order. This is because it implements the interface.  But generally speaking it is not necessarily the case for other types of Queues.  Queues typically, but do not necessarily, order elements in a FIFO (first-in-first-out) manner. Among the exceptions are priority queues, which order elements according to a supplied comparator, or the elements' natural ordering, and LIFO queues (or stacks) which order the elements LIFO (last-in-first-out).  It also adds:  Every Queue implementation must specify its ordering properties.  So you simply need to check the javadoc of the specific queue you are using and you should find your answer.  305k7272 gold badges635635 silver badges752752 bronze badges  7  I have defined my queue as follows: . Would this work the way I intended if I were to use the above code? As it isn't a . Thanks  – user2268507  Jun 3 '13 at 10:46  LinkedList also implements Deque, which is FIFO. So your iteration order will correspond to the insertion order (if you insert 1 then 2, you will read 1 then 2 when iterating).  Am sorry if my comment appeared aggressive, that wasn't the intention.I just feel your answer should have included an actual implementation.  I think its better to use ArrayList in this case. Please try that. Why you want to use queue only?  If you need a FIFO (first in first out) data structure, then a queue is the appropriate choice over an ArrayList. The reason an ArrayList may not be an appropriate data structure to use is because another developer (or even yourself if you forgot that you needed FIFO) could easily write code to start removing items from the middle of the ArrayList which would compromise the FIFO data structure that was originally required. You could obviously use an ArrayList as a FIFO data structure but that would have to be enforced by the developer and not the data type which was selected.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  