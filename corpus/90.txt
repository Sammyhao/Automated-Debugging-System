 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm trying to figure out if there is a problem. I think it might be inside the while loop  I meant, what is the question? is something not working right? did you try compiling and running it?  More to the point, you never asked a question. Regardless, I have absolutely no doubt that is wrong. is a pointer-to-pointer (to , but that isn't really relevant right now), so will be always. Pretty sure will be entering this picture instead, assuming your pointer array is indeed tha wide across all rows.  If you're not sure what's going on, a good first step to fixing it is to step through the code in a debugger.  1 Answer 1  Okay, since you didn't attach your error log or test case output consider the below implementation  Some points  This is C++, why not use etc that handle stuff like memory for you instead? (if this is not what you want you haven't indicated so)  They key idead behind a BFS is  Look at all the neighbors of the current node, start processing the neighbors of the neighbors  only process a node if you haven't before  The way you are doing it nothing is next to anything. The matrix only has . Did you meant to change this at some point?  Your size calculations are wrong, they operate only on the pointers!  You don;t have a valid termination criterion. What are you searching for with BFS? You also need to know when to stop the search. and report what happened  Used cpp's std containers instead  Removed usage of  provided a very basic test case in  Running the code I shared above for a graph like this  Suggested possible improvements  Abstract the functionality better, right now is a god class  Don't gather input for inputs in the adjacency matrix where column = row  Extrapolate values of the matrix based on previous values, eg: if 1 is next to 2 then you know that 2 is next to 1  handle input getting better, I have forgotten the clean way to stuff  If you insist on pointers to arrays all you ned to do is change the constructor and invocations.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  