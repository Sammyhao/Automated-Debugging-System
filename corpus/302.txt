 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am trying to implement a queue class using linked implementation that has the functions enqueue, dequeue, and length. To my understand of queues, when first implemented the queue points to head and tail nodes which initially points to None. As items are added to the queue, a node points to the item, the head node remains unchanged, and the tail node points to the new item.  I've tried to implement this with the following code in python but it doesn't seem to be working. I'm not sure if my logic is wrong, or it's the coding that's wrong, or both?  Where are and defined? Also, I don't think you need to declare an instance of your class inside of your class methods  2 Answers 2  I'd avoid declaring an instance of a class inside the definition of a class. Declaring is asking for trouble, in my mind, because that could lead to declarations of , and ... You get the idea. Instead, I would maybe separate things out a bit. Also, notice that you didn't declare or , even though you called them in your methods.  Perhaps declare two classes, one for Nodes, and the other for a Queue built out of Nodes? That would simplify things a bit.  Here's how I would build a Queue in Python, credit my own:  Note that this is all unnecessary for production code, as you could just use a , for example, from the collections module  Another approach could be to implement the queue as two stacks:  But I agree with the other answers that for any serious project, the standard library and its module should be preferred.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  