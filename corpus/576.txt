 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I want to ask about what are the interest of use heap structure with prim's algorithm ? As in the assignment: "Since the heap structure you implement will be used for a Prim’s algorithm" Thank you !  It's a little hard to understand your question, but it seems to be "why is a heap relevant to Prim's algorithm?" This isn't a question that's suitable for stackoverflow, where more detailed questions are expected. At the moment it's not clear if you've looked at the details of Prim's algorithm and concluded that no heap datastructure is applicable, or if you've just directly copied a line of your homework here without investigating it yourself. For example, the wikipedia page on Prim's mentions heaps.  2 Answers 2  Prim`s Algorithm is similar to graph traversal technique : BFS, (rather Its better to say it uses BFS). A queue is needed in BFS.  Normal queue data structure asneeded by simple BFS is first in first out. For Prim`s this behavior of queue needs to be modified.  Instead of first in first out, the data structure needs to pick minimum valued element from the elements it holds. The operations needed by Prim's algorithm for the underlying data structure must support  new insertions  modifications to the value of element already put in the data structure.  Pick (and remove) minimum of the items already contained in the data structure.  These operations could be efficiently be implemented by Min-Heap. For simplicity binary heap is used and for more efficiency Fibonacci heap may be used.  You need some form of queue for Prim's algorithm. You could use a simple set and search for next element each time. Another approach is to have a list and insert all new elements in the right place.  A heap is very fast for the operations Prim's algorithm uses on a queue.  For instance, you can insert a new element into a Fibonacci heap (special kind of heap) in constant time.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  