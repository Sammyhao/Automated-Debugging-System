 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I was solving a dynamic programming problem. The problem is to decompose an integer into sum of square numbers, using terms as few as possible. A standard DP problem and I come up with a program:  }  I test it a little bit and the code works. Below are some test results:  Then I try to replace the dp array using dynamic array. The reason to do so is that in some OJ sites, the stack space is limited.  Specifically, what I did is to change line 3 to  and add  before returning the result.  However, my code does not work any more after the change. The change does not affect the algorithm itself. I guess the memory of the dynamic array I created was destroyed in the for loop. But I could not understand where exactly the problem came.  @paul R, std::vector<int> will definitely work. I just couldn't understand why changing to dynamic array will fail the whole program.  As a side note, your original is not standard C++ when is not a constant expression (supported in C99 and as a compiler extension in some C++ compilers).  1 Answer 1  The problem is exactly in the line where you define your array: This means you create a pointer to integer value, e.g. , initialized to which is not what you want. To create an array you need to use the brackets instead.  If you problem is solved you should accept this answer so that we lower the number of unanswered Q/A.  done. sorry, I am a newbie here so it take me a while to figure out how to accept your answer.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  