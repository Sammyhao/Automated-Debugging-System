 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have a tree structure composed of nodes. Each node each has an id and an std::map of references to all of it's child nodes.  An example tree is shown below  I want to do a Level order traversal (breadth first traversal) and print out the id of every node. i.e, print all of the names of the nodes under root, then print all of the names of the nodes under the first node under root, then the ones under the second node under root, etc. I want to be able to do this using a for loop and iterators, as shown below:  I have attempted to define an algorithm inside the node class that will achieve this. This algorithm is shown below:  However this function only traverses root and then exits the for loop. What is the correct algorithm to achieve what I want?  1,35644 gold badges2222 silver badges4343 bronze badges  13  May be not your primary problem, but you're leaking memory because of these lines:  You have UB in - if the if fails then you do not return any value. Turn on your compiler warnings and fix them.  @πάνταῥεῖ and @Quimby this is just a minimal working example of the problem I have. In my tree structure I do not use the unless it will return a value. In the actual code this is designed differently. Same with the memory leak  @Blue7 "this is just a minimal working example of the problem I have" No it isn't. Just read minimal reproducible example (again), how to provide that.  1 Answer 1  You can't use map's iterator, since you have a different map in each node. You'll have to define your own iterator class, that can keep track of which node it is currently iterating over and change to the next node when it gets to the end of the map for that node.  Your function is close, but will skip the first iterator in . It will also run into Undefined Behavior when it reaches the last Node (or any Node with no entries in its map) because you'll increment the iterator.  There is also Undefined Behavior once the traversal moves to one of the subNodes, since you'll then be comparing iterators from different containers.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  