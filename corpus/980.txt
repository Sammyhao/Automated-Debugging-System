 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have a class that creates a multiply linked list. Each node can have several (or one or no) children. The node has a pointer to its latest child node, and each child node has a pointer to it previous sibling. So I can walk the entire tree by taking each latest child, and then each of its siblings, in turn. This function walks the three successfully, but doesn't do anything useful:  Now, what I really want to do is to pass some kind of argument so that a member function can be executed at each node. Here's something that won't compile, but I hope it gets as what I am wanting:  So, fcn could be, for instance, just the class , so I can get all info on all the nodes quickly. Or it might be which would determine whether the node needs a new child and, if so, create it. I would like the user to be able to pick this without relying on some kind of flag. For instance, what I don't want is something like:  5,75588 gold badges4242 silver badges9696 bronze badges  6  Functions are first-class objects. So it should just work. Don't do because that won't be defined.  Yeah, I would just make it a module-level function. . I'm pretty radical about keeping classes succinct, though, and this could definitely be a method.  @juanpa.arrivillaga Would very much appreciate an example if it's not too much trouble. Thanks.  @bob.sacamento I've added an example using a method. The class just wraps a list, but it should get the point across.  1 Answer 1  The problem is that you are using but that isn't defined. Just use . Here is a contrived example:  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  