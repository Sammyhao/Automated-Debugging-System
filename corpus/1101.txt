 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am writing code for an assignment in my college C++ class, the program is meant to create a dynamically allocated array using a class. I am getting a debug assertion failed error when my objects go out of scope, because I am double deleting the pointer to the newly created array. I have no idea where this happens because I only use delete[] twice in the entire class. Here is my source: #include  Have you tried running it in the debugger? Put breakpoints on the two places you call and debug.  @heavyd I have run it through the debugger, the problem arises when the destructor is called and attempts to delete an already deleted dynamically allocated array. And as for the copy constructor, when I try to use const IntArray &, it won't let me use pointer notation or another other notation that I know how to use.  When you have a reference to an object (ie. ) you can just use the dot notation. The reason I mention that the copy constructor is wrong, is that when you're constructing and , you're not actually calling the constructor you think you are (put a breakpoint there, you'll see its never hit).  I try using dot notation and it says 'object has type qualifiers that are not compatible with the member function object type is: const IntArray'  1 Answer 1  Thanks to @heavyd I realized that the error arose from an improper construction of the class due to a logic error in my class definition. The problem was in the way I was copying data to the new class (improperly) and the way that my copy constructor worked, as well as the return type of one of my member functions.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  