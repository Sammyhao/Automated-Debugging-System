 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have an assignment which asks me to create a fortune telling application basically. What I need to do is, first create a deck of cards, and then shuffle it, and the shuffling proccess must be recursively and without any loop according to the assignment. The deck also must be a queue data structure.  I have a card struct, which has two char variables, one of them holds the type of the card, such as D for diamonds, or H for hearts, and the other variable is the number of the card, such as 4 or J or K. I created a queue for cards, which is called deck, and I initialized the deck with a basic loop, First 13 elements of the queue are Diamonds, and the next 13 elements are Clubs and so on.  The problem is about shuffling the deck. My deck must be a queue, but if there is a solution with an array for example, I can use that array for shuffling and then transfer the array into the queue. But currently I have no idea about how to do it, neither with an array nor with a queue, a pseudo-code would be amazing for me.  I did all my research but there is nothing about shuffling with recursion and now I am out of ideas, I don't expect a full solution of the program, I just need some basic ideas about shuffling with recursion.  I don't know how to shuffle some objects in a linked list or in an array or in a queue with recursion, which the assignment asks.  1 Answer 1  1) Take the front element, chose randomly another element, swap them.  2) shuffle the remaining array (without the front element).  3) recursion stops when the current position is at the end of the array  After you setup a deck and initialize it, you can call  p.s: this is not "ideal" C++14 code, as we could use advanced features, but this is simply a hint for how to shuffle an array using recursion.  @Jarod42 when dealing with students and assignments, I try to use minimum or basic features because you cannot tell where they are in the course. Otherwise I would simply use . I want only to hint the recursion idea. :)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  