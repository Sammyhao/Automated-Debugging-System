 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  In Java, uses a RB-tree to store entries, allowing for in-order iteration using , while guaranteeing insertion and lookup in log(N) time.  TreeMap also provides methods to find upper and lower bounds for a given key: , , and . However, the return value of those is a instance and won't directly allow one to visit neighbouring entries. I wanted to visit would-be neighbours of an hypothetical entry given its key.  Is there a way to get an iterator from a TreeMap entry or do what I'm trying to do?  Being more accustomed to C++'s class, I'm at a loss here...  NOTE I'm open to a solution using a container library other than java.util's as long as it has a sorted map container with some reasonable time complexity guarantees.  1 Answer 1  That's almost what I'm looking for; however, considering that I want to get both the entries that are immediately before and immediately after a given key, I would have to call both methods, meaning two lookups, which seems like a waste of CPU cycles.  OK, sorry I misunderstood your answer, you obviously meant . That would work but still requires 2 lookups.  Another solution - made your own iterator of the TreeMap for your needs, but it's not an easy task  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  