 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  So this is my first java program, but I've done c++ for a few years. I wrote what I think should work, but in fact it does not. So I had a stipulation of having to write a method for this call:  where value is an int. I wanted to write it recursively, for obvious reasons, so I had to do a work around:  The code looks a little confusing with overloaded functions. Assuming member variables 'left' and 'right' to be the left child and right child of the BSTree respectively, you can try implementing it in the following way:  36311 gold badge33 silver badges1010 bronze badges  1  3  what if the node passed in is null? We would still need to set the root node first  Can we just rename the second method- insertRec to insert and while passing parameters from the main method, pass the value to be inserted to this insert method instead of creating 2 different methods ?  You can use standard (wrapper for primitive int) object instead of creating a new object type . On latest java Integer/int auto-boxing is supported. Hence your method can take in argument too (ensure it is not null).  EDIT: Pls ignore above comment. I did not understand your real question. You will have to overload . I think you are right.  but where is temp when you ?? With your current implementation temp is lost if root is not null.  I think you want something like  and  i.e. To insert the new Node (temp) to either the left or the right subtree.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  