 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm implementing combsort. I'd like to create fixed-size array on the stack, but it shows . When I change it to be on the heap (Rust by Example says to allocate in the heap we must use ), it still shows .  The output:  Or  I know that my stack size is not enough, the same as C++ when creating a non-heap array that is too big inside a function, but this code is using heap but still shows stack overflow. What's really wrong with this code?  21.8k2626 gold badges113113 silver badges203203 bronze badges  1  I should shamelessly plug a crate I built to solve this particular issue: crates.io/crates/arr - I was wrestling with a clean solution to this problem for a long time.  2 Answers 2  As far as I can tell, it seems like that code is still trying to allocate the array on the stack first, and then move it into the box after.  It works for me if I switch to in place of like this:  Checking out the LLVM IR for a smaller example shows this: , so I believe you are correct - the array is allocated on the stack first.  In the future, the syntax will be stabilized. When it is, it will support this large allocation, as no function call to will be needed, thus the array will never be placed on the stack. For example:  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  