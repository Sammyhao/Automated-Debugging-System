 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am using boost graph library. I need to serialize a graph object and read it out later. But I found my program can't work properly with XML archiver. It always throws exception saying:  XML start/end tag mismatch - position.  I did not define a tag named in my serialization code. I don't know how to solve it. Here is a demo of the problem.  I'm wondering why you implement this in C++. Usually, performance would be the decree. I'd note that the use of multi-index containers as edge properties as well as XML serialization would run counter to such goals. I'm pretty sure the average Python solution would be faster than this contrived datastructure.  C++ is the only programming language I learned in university. I will find better solutions in other languages. Which library do you recommend for graph and multi-index container representation in Python?  @breadbread1984 Also for future reference, you should post a minimal version of the code here, not link to an external site where you delete the code later - it destroys the effectiveness of this site and makes the question incomplete  @EiyrioüvonKauyf I recovered the bits from my source control. The comments are garbled but that's how my editors showed them from the start. I did refactor the function a bit to make it clearer what code did what.  thanks for that @sehe, i assume the comments were probably UTF-8 edit: nevermind seems they were in a weird encoding  1 Answer 1  start small, build incrementally and test at each step.  In case of unexpected failure:  eliminate causes (divide and conquer).  Had you done this, you'd have quickly found that even  followed by  would have shown the exact same problem without even any data. The problem is derives from a , which breaks the serialization implementation for it.  Note: how the error is not actually with a closing element (W3C's well-formedness check would have told you that too)  Now, to fix the SSCCE just remove the inheritance:  I've done the same for your graph sample. It worked (as far as the tests exercised it at all):  340k4545 gold badges424424 silver badges582582 bronze badges  5  Thanks for the penetrating reply. The problem has been solved. I have to say the usage of the serialization library is tricky to new users. There are so many subtle things needs attention.  I used inheritance to avoid circular dependent. But I already found ways to prevent that problem. This problem had been given me headache for a long time. Really thanks for the valuable reply!  I spent considerable amounts of time dissecting your huge sample and finding not only the cause, but also explaining it and how you could have located it yourself. (I even solved it for your particular code base). I'd like to think that counts as both "this answer is useful" (upvote) and "best answer to the question" (accept). Please consider the linked meta-question: meta.stackexchange.com/questions/5234/…  ^ @breadbread1984 consider selecting a best answer to help others find the solution to this question  @sehe, sorry for the late acceptance. I didnt notice the mark. :-P I will pay attention to this next time.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  