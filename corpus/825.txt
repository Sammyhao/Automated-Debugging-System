 The idea is to move down to leftmost node using left pointer. While moving down, push root and root’s right child to stack. Once we reach leftmost node, print it if it doesn’t have a right child. If it has a right child, then change root so that the right child is processed before.  Following is detailed algorithm.  Let us consider the following tree  Following are the steps to print postorder traversal of the above tree using one stack.  C  Java  Python3  C#  Javascript  Output  Method 2: Push directly root node two times while traversing to the left. While popping if you find stack top() is same as root then go for root->right else print root.  Java  Python3  C#  Javascript  Output  This article is compiled by Aashish Barnwal. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  