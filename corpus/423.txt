 Difference between Stack and Tree  Last Updated : 14 Dec, 2020  Stack: A Stack is a linear data structure in which elements can be inserted and deleted only from one side of the list, called the top. Insertion is called push operation and deletion is called pop operation in case of the stack. The order of insertion and deletion may be LIFO(Last In First Out) i.e., the element inserted latest to the stack will also be inserted first. In stack, the track of the last element present in the list is tracked with a pointer called top. Below is the diagrammatic representation of the same:  Tree: A Tree tree is a finite set of one or more nodes such that:  There is a specially designated node called root.  The remaining nodes are partitioned into N>=0 disjoint sets T1, T2, T3, …, TN, where T1, T2, T3, …, TN is called the subtree of the root.  Each node has a specific parent and may or may not have a child node. Each node contains a value and references to the children. It’s a kind of graph data structure but does not have cycles and is fully connected. The concept of a tree is represented in the below diagram:  Below is the tabular difference between the Stack and Tree:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  