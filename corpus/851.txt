 Java Program to Search an Element in a Linked List  LinkedList is a linear data structure where the elements are not stored in contiguous memory locations. Every element is a separate object known as a node with a data part and an address part. The elements are linked using pointers or references. Linked Lists are preferred over arrays in case of deletions and insertions as they take O(1) time for the respective operations.  When the linked list is provided to us directly, we can use a for loop to traverse through the list and find the element. In case, if we are not allowed to use pre-built libraries, we need to create our very own linked list and search for the element.  Examples:  The following are the two methods with which we can search for an element in a Linked List.  Method 1: When we are allowed to use in-built libraries  First, a Linked list is initialized.  A for loop is used to traverse through the elements present in the Linked List.  Below is the implementation of the above approach:  Java  Output  Time Complexity: O(n) where n is the number of elements present in the linked list.  Method 2: When we are not allowed to use in-built libraries  First, create a generic node class.  Create a LinkedList class and initialize the head node to null.  Create the required add and search functions.  Use the search method to find the element.  Below is the implementation of the above approach:  Java  Output  Time Complexity: O(n) where n is the number of elements present in the linked list.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  