 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  The container always sorts keys based on their value. Is it possible to make it sort, for example, on the number of bits set upon declaration?  I have a function for counting set bits:  But I do not know how to apply it when declaring the map:  I've tried to put it as a third parameter in the declaration , but with no luck.  25.4k4747 gold badges138138 silver badges224224 bronze badges  2  If it's a normal function you also have to pass it to the constructor as a function pointer.  Btw, gcc has a nice set of builtins, one of which returns the number of bits set in an integer.  3 Answers 3  You need to wrap your function in a binary operator, like this:  Now you can use in a declaration:  Here is a demo on ideone. It correctly orders 128 ahead of 3, because 3 has two bits set, while 128 has only one.  @jthill Correct. I copy-pasted the OP's code, and modified it to remove constants. I posted the code as an example, with the understanding that nobody would use this code without modifications.  Since C++11, you can also use a lambda expression instead of defining a comparison function. If you combine this with std::bitset::count instead of using your own counting function, then the code becomes rather short:  Note: Similar to the solution by Sergey, I'm assuming 32-bit integers for the sake of clarity. Please adapt the code to your needs.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  