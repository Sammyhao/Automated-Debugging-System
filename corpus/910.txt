 Longest subsequence such that difference between adjacent elements is K  Last Updated : 20 Dec, 2021  Given an array arr[] of size N and an integer K, the task is to find the longest subsequence such that the difference between adjacents is K.  Example:  Input: arr[]={1, 2, 3, 4, 5, 3, 2}, K=1 Output: 6 Explanation: The longest subsequence with the difference between the adjacent elements as 1 is: {1, 2, 3, 4, 3, 2}  Approach: The given problem can be solved using Dynamic Programming. The idea is to store the length of the longest subsequence having a difference K between adjacents ending after including the current element. Create an unordered map mp where mp[i] represents the maximum length of subsequence which includes integer i. So, the relation to get the maximum length subsequence can be written as:  mp[i] = 1 + max(mp[i â€“ K], mp[i + K])  The maximum integer stores in the map mp is the required answer. Below is the implementation of the above approach:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  