 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  and the constructor are created at classone.cpp  At main.cpp I created ClassOne Array of Size 10  Next is i recorded several value to the object  What i want to achieve is do a sort that can rearrange this array by valueData highest ascending form so.. it will be  then then ..  but the issue if i use bubble sort , i tried google and find some, they are sorting by e.g  but i wanna sort by class array object. and re-arrange the value together , how do i achieve this.  72122 gold badges1010 silver badges1919 bronze badges  1  so many down vote on my question.. i am new to C++ . and dont really know how to proceed.  6 Answers 6  If you're willing to define a comparison operator globally, you don't even need the lambda:  Or you could make the comparator a member function. Or you could give the comparator function a custom name and pass that as the third argument of . This might be a good idea in the case where the comparison is specific to your situation and not "natural":  The last version is useful if you don't have C++11 support (for lambdas, as in the first case), or if you want to reuse the comparator in multiple different situations.  440k8787 gold badges834834 silver badges10451045 bronze badges  10  I not sure how to apply sort to my object.. i tried your example but got some errors..  @baokychen: I had misspelled the class name. Refresh the page and try again. It should work.  And so it is. Make the comparison function either a static member or a friend of the class.  @baokychen: If you don't understand the concept of public and private members, then you are getting ahead of yourself. You should really have the basics of classes out of the way before you try to do anything like sorting objects.  @baokychen: Yes, I understand what you're trying to do, and I understand that you are not sure how to get going. I'm saying that you need to learn to crawl before you can walk. Where crawl="a basic understanding of how classes work", and walk="sorting class objects". What you need is a basic beginner's book. Here's a list: stackoverflow.com/questions/388242/…  @baokychen just as above. You don't have a cone object, you have an array of objects called `cone??.  For consistency and clarity, I suggest using the address-of operator to form function pointers, instead of the implicit conversion from function to function pointer.  You can make a struct that implements the method that in the header uses to sort iterated items.  then all you have to do is to make an array of this struct and sort it using the sort function  Look at your Bubble sort source. At some point, it will be comparing one to another, probably with either the less than operator (<) or the greater than operator (>). That's where the sort function determines the relative order of those two items. By repeating that comparison many times, the sort function is able to determine the total order of the collection.  You need to replace that operation with your own comparison function. A function that takes two objects of your class, and returns true if the first should be considered less than the second, false if the second should be considered less than the first, and false if they should be considered equivalent.  You must define a comparison operator for your class. How you determine whether one object is less than another isn't clear from your question.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  