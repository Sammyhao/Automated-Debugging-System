 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm a second year computer science student currently working in Java and we recently started generics. I have an assignment where I've been given a list of sorting algorithms that use generics and am tasked with using them to sort a list of Integers (not primitive ints). As the sort classes use generics that extend Comparable I thought there would be no problems simply handing them the Integer array but the build output keeps coming up with incompatible types.  The relevant code is below;  portion of Main program  And the SelectionSort algorithm which is provided and expected to be used as-is  The problem I'm having is in declaring SelectionSort, which returns an error that the constructor cannot be applied to the given type. From what I've read in my searches here and elsewhere this kind of problem is usually encountered when using ints, but I don't understand why it isn't working with Integers. Any insight on the problem would be greatly appreciated as I'm still coming to terms with the concept of generics. Many thanks in advance!  5 Answers 5  You were trying to pass arguments into a constructor that didn't exist, when you want to pass them into the method instead.  Here I'm using the default (no-arg) constructor to instantiate a new , assigning it to a variable , then calling on that instance with the arguments.  Also note that if you just need the instance to call , you can skip the assignment:  Your class is generic. You should specify the type parameter when you declare and instantiate one of them:  In Java 7, you can rely on type inference to shorten this a bit:  226k4848 gold badges380380 silver badges500500 bronze badges  5  Ahh, of course! I completely forgot that was necessary! But even with those changes the problem still persists. The build output is:  @JorC The SelectionSort class only has a default constructor. Your the list and data size go into a method call sort.  That did it. I can't believe I overlooked something so trivial. Fixed it up and it's running fine. Thanks everyone for the help!  @JorC - Glad it's fixed. From the looks of it, you could make do with a generic method (not bothering with a generic class).  @TedHopp I was thinking the same thing, but it looks like the OP may be required to implement the interface.  your SelectionSort has a parameterized type (sometype which implements comparable). implements .  31.2k1616 gold badges9595 silver badges152152 bronze badges  1  I've noticed that generics beginners tend to attribute to generics all compiler error messages related in an way to types. That makes it easy to miss simple things like this one.  In addition to the generics issue already covered, I think the code confuses the constructor and the sort method. Change the failing line to:  The code does not show a SelectionSort constructor, only a sort method which expects the parameters that were being passed to the constructor. The error message is consistent with SelectionSort only having a parameterless constructor supplied by default by the compiler.  25.1k22 gold badges3535 silver badges6868 bronze badges  1  Paul Bellora saw the same problem as I did, and posted his answer just before mine.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  