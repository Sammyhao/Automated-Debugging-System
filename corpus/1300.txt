 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm creating an implementation of a set in Java using separate chaining with a hash table. Currently, I am just trying to add 100 random integers to the table, and then use a self-built iterator in my own implementation of toString to print the table contents. I have confirmed with the debugger that my 100 ints get added to the table, but I am confused as to where my code goes wrong with printing.  The current output I get from my toString is just a single int inside curly braces, like so: {59, }.  I have gone through the debugger a few times step by step and cannot figure out of the issue is with my iterator, toString, or a combination of both. Here is the class below:  }  If someone could point out if I'm doing something wrong here that could be causing me issues, I would appreciate it. I have a feeling I am not using my iterator implementation correctly, but that doesn't necessarily mean my iterator is correct either. Thanks.  2 Answers 2  What happens with an iterator is that its usage looks like:  and as it stands, returns false before has the chance to look for it.  Your method will need to do all the work of finding the next entry, if there is one.  You should not be doing anything in but returning a value and possibly pointing to the next potential one. should simply return if that points to a value. If it returns and someone calls , that is their problem, not yours. And no need to call in your method. Again, that's up to the user. should just check the appropriate variables to make certain the next value is available. Presently, your is returning null immediately.  It also appears that everywhere you call , the second argument is null. Remember that multiple could hash to the same bucket. So the buckets need to contain all of those . One way to do this would be with a linked list but as far as I can tell, it doesn't appear that you are doing that.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  