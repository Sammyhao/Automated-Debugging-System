 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  So I have a program here that's supposed to do the very simple job of searching through an Array of 100 integers to find a specific key. The function in this program is supposed to be recursive, so I have to call the function from within itself. The program compiles fine, but for some reason only returns the first element , in the array no matter what search key you put in. What am I not seeing? Thanks.  I'm taking the correct approach by declaring as , right?  ~Thanks a lot, you guys were quick and a HUGE help. =)  1,72833 gold badges2828 silver badges7777 bronze badges  6  No, a index is almost certainly a bad idea. It's effectively a global variable which never gets reset.  No. It should be passed as a value parameter. Also, your function has no determinate return value on the tail-recurson resolution, so this stands no chance of working as is.  Surprisingly your code runs fine and gives correct results for me.  – user995502  Apr 1 '13 at 14:37  1  @stardust_ the behavior is undefined, since the function is being exited without a .  Technically he doesn't have to return index there. Since it is static right now. As long as there is no code after that statement.  I'm taking the correct approach by declaring as , right?  No. Rather, should be an argument to the recursive function.  Due to the state, the function is hard to test and is not thread-safe. Furthermore, it inadvertently keeps state between invocations, meaning that if you were to call it a second time, it wouldn't work (since would still have the old value).  You can also change your search function to the following without using static local variable .  The only change is that you are passing the starting index into the search function.  When doing this type of search recursively, you must propagate the index you're currently at in your array.  The way you're doing it, there's a global variable, which is the same in every call to your function because of the static keyword.  The index should rather be a parameter, and each time you call the function recursively, you pass index+1 as a parameter.  Also, you must return the value of the recursive calls, otherwise it just does nothing and doesn't store/process the returned value.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  