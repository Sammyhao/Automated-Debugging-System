 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  This is my first question on stackoverflow, and I am earnestly open to feedback on how/where/when to ask better questions and how to contribute to stackoverflow better.  Background: My ultimate goal is to graph projected equipment usage by date at various test labs.  I have identical equipment in use at several labs, and I'm creating a sheet that will show me a future projection of equipment usage at each lab.  What I'm Starting With: I have an Excel document with several worksheets, each containing information on what equipment will be used at which test house during what period of time.  My Goal: To create a graph of equipment usage for each test lab. The graph will show how many of each piece of equipment are in use for a given date. My intention is to have a chart series for each type of equipment with Date as the X-axis and the number of pieces of that equipment in use on the Y-axis.  What I've Done So Far: I have written code that loops through all my information sheets and creates a vba collection of every unique test lab name and a separate vba collection of every unique piece of equipment I want to track. This code also finds the first date and last date any piece of equipment is used.  Help Request: Because I essentially have three "dimensions" - Test Lab, Piece of Equipment, and Equipment Use Date - I had planned to use a 3D array to aggregate all my data and provide the source for my usage graphs. This array would have equipment as one dimension, date as the second, and test lab as the third.  However, as I've considered this implementation, it seems rather clumsy. It will hold all my data, but, as far as I can see, I can't refer to the elements of the array by keys or labels. I would have to create separate 2D arrays to hold index labels for each dimension of the 3D array.  Is there a 3D data structure in Excel VBA that supports index keys for each dimension?  Failed Searches and Attempts: I first tried to create a unique array to hold equipment and usage date, each array named for a unique test lab. I learned from this post that I am not able to dynamically create and name an undefined number of new arrays within a sub: Naming an array using a variable.  I then looked into whether I could use the collections I had already created to somehow function as labels for the array indices, but it seems that I'm not able to find the collection index by the key. I would have to loop through the collection to find the index every time I want to reference an element in the 3D array: Retrieve the index of an object stored in a collection using its key (VBA).  you might look along the lines of structures or classes in vba. They are a way to keep multiple pieces of related information together, which you can create a list or collection of. check out this article to see if this is what you are after. stackoverflow.com/questions/12414168/…  You can consider using nested or . External holds lab IDs as keys and each item is another that holds equipment IDs as keys and dates as items.  Thanks, all, for your comments! I'm attempting to create a custom data type as modeled in Jeremy's suggested article with scripting.dictionaries contained within the type as Victor K and HackSlash suggested. How should I show the solution when I get it working? Would I answer my own question?  2 Answers 2  If you need to call out a collection by key, that collection should instead be declared as a dictionary.  It is much more powerful than a collection. I hope that helps.  I implemented information from all the comments and answers I received. Thank you Jeremy, Victor K, and HackSlash!  Here's the solution that worked for me in a nutshell: An array of a user-defined data type containing arrays of a user-defined data type containing scripting dictionaries, i.e. an array of arrays of dictionaries. I also created reference dictionaries for use in retrieving data. (See working example below)  First, in order to use scripting dictionaries in VBA, go to Tools > References and check the box next to "Microsoft Scripting Runtime." I learned this here: Does VBA have Dictionary Structure?. I also learned that this setting is included if the sheet is distributed (others won't have to enter VBA and check the box before they can use your sheet): http://www.snb-vba.eu/VBA_Dictionary_en.html.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  