 Design a Queue data structure to get minimum or maximum in O(1) time  Problem: Design a Data Structure a SpecialQueue which supports following operations enque, deque, getMin() or getMax() where getMin() operation takes O(1) time. Example:  Approach: The idea is to use Doubly ended Queue to store in increasing order if the structure is to return the minimum element and store in decreasing order if the structure is to return the maximum element. The operations of the Data Structure is defined as follows:  Enque  Insert the element into the queue structure.  If the size of the Deque structure is empty that is the size of the Deque is 0. Then, Insert the element from the back.  Otherwise, If there are some elements in the Deque structure then pop the elements out from the Deque until the back of the Deque is greater than the current element and then finally insert the element from back.  Deque  If the first element of the Deque is equal to the front element of the queue then pop the elements out from the Queue and the Deque at the same time.  Otherwise, Pop the element from the front of the queue to maintain the order of the elements.  Get Minimum  Return the front element of the Deque to get the minimum element of the current element of the queue. Below is the implementation of the above approach:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  