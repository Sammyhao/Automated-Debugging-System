 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm trying to debug a part of a program that peeks at a queue object from a queue class I implemented myself, so I'm trying to iterate over it and print out all the elements to see what's wrong without altering the queue. How can I do this?  It misses some code. constructor should be in a class. There, it cannot compile fine.  To maximize your compatibility with the Java language and libraries, have your class implement , and define a class.  2 Answers 2  You're using a linked-list to implement your queue. You can iterate over it just like you would iterate over any linked-list.  Edit: If your use case needs returning the iterator then ideally you should implement the Iterable interface. That solution is already mentioned in one other answer. For the sake of extending this answer to your use case I'm providing the below code. It would work, but its NOT an "Object-Oriented" way of doing it.  Thank you. But now it says I need to use a method that returns an Iterator, so something like public Iterator iterate(). What should I add as a return statement? Do I return (Iterator) iterator? Or do I return null or what?  You need to implement in your queue, as shown below, so that your queue can be iterated the same as arrays and other Java collections.  Note that the way you have declared your class, is a generic type parameter, not the class . This is actually a good thing as it means you can use your class with any data type. To make it clear that is a type parameter, you should replace every occurrence of with a class variable name comprised of a single uppercase letter such as .  Alternatively, if you want to always be a queue of objects, you should change the class declaration to:  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  