 N Queen Problem | Backtracking-3  We have discussed Knight’s tour and Rat in a Maze problems in Set 1 and Set 2 respectively. Let us discuss N Queen as another example problem that can be solved using Backtracking.  The N Queen is the problem of placing N chess queens on an N×N chessboard so that no two queens attack each other. For example, following is a solution for 4 Queen problem.  The expected output is a binary matrix which has 1s for the blocks where queens are placed. For example, following is the output matrix for above 4 queen solution.  Naive Algorithm Generate all possible configurations of queens on board and print a configuration that satisfies the given constraints.  Backtracking Algorithm The idea is to place queens one by one in different columns, starting from the leftmost column. When we place a queen in a column, we check for clashes with already placed queens. In the current column, if we find a row for which there is no clash, we mark this row and column as part of the solution. If we do not find such a row due to clashes then we backtrack and return false.  Implementation of Backtracking solution  C/C++  Java  Python3  C#  Output: The 1 values indicate placements of queens  Optimization in is_safe() function The idea is not to check every element in right and left diagonal instead use property of diagonals: 1.The sum of i and j is constant and unique for each right diagonal where i is the row of element and j is the column of element. 2.The difference of i and j is constant and unique for each left diagonal where i and j are row and column of element respectively.  Implementation of Backtracking solution(with optimization)  C/C++  Java  Python3  Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  