 The recursive implementation of DFS is already discussed: previous post. Solution:  Approach: Depth-first search is an algorithm for traversing or searching tree or graph data structures. The algorithm starts at the root node (selecting some arbitrary node as the root node in the case of a graph) and explores as far as possible along each branch before backtracking. So the basic idea is to start from the root or any arbitrary node and mark the node and move to the adjacent unmarked node and continue this loop until there is no unmarked adjacent node. Then backtrack and check for other unmarked nodes and traverse them. Finally print the nodes in the path. The only difference between iterative DFS and recursive DFS is that the recursive stack is replaced by a stack of nodes.  Algorithm:  Created a stack of nodes and visited array.  Insert the root in the stack.  Run a loop till the stack is not empty.  Pop the element from the stack and print the element.  For every adjacent and unvisited node of current node, mark the node and insert it in the stack.  Implementation of Iterative DFS: This is similar to BFS, the only difference is queue is replaced by stack.  C++  Java  Python3  C#  Javascript  Output:  Complexity Analysis:  Time complexity: O(V + E), where V is the number of vertices and E is the number of edges in the graph.  Space Complexity: O(V). Since an extra visited array is needed of size V.  Modification of the above Solution: Note that the above implementation prints only vertices that are reachable from a given vertex. For example, if the edges 0-3 and 0-2 are removed, then the above program would only print 0. To print all vertices of a graph, call DFS for every unvisited vertex.  Implementation:  C++  Java  Python3  C#  Javascript  Output:  Like recursive traversal, the time complexity of iterative implementation is O(V + E).  This article is contributed by Shivam. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  