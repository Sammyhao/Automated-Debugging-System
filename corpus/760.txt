 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I've tried to implement hash table using vector. My table size will be defined in the constructor, for example lets say table size is 31, to create hash table I do followings:  Is this your real code? I can spot at least 2 mistakes (a missing closing parenthesis and you misspelled entries)  @Borgleader nope I've just write some part of it for simplication. sorry for typos  @TheGost Check if ? I don't understand how you plan on implementing a hash table with a vector though. What will you do for 2 distinct entries that hash to the same index?  linear or quadratic probing ? I did not show that part of the code ,please just help me what I asked @Praetorian  3 Answers 3  Each cell in your hashtable comes with a bit of extra packaging.  If your hash allows deletions you need a state such that a cell can be marked as "deleted". This enables your search to continue looking even if it encounters this cell which has no actual value in it.  So a cell can have 3 states, occupied, empty and deleted.  You might also wish to store the hash-value in the cell. This is useful when you come to resize the table as you don't need to rehash all the entries.  In addition it can be an optimal first-comparison because comparing two numbers is likely to be quicker than comparing two objects.  These are considerations if this is an exercise, or if you find that / is not adequate for your purpose or if those are not available to you.  For practical purpose, at least try using those first.  7,45099 gold badges3636 silver badges5555 bronze badges  2  no, if there is an entry I'll use linear probing collision resolution strategy so there cannot be more than one entry at the same place  so it is look like you need to use default value as empty value (if empty string is not good for this)  the simple implementation of hash table uses vector of pointers to actual entries:  to find a value operator uses a hash function to find an index in the hash table for the key:  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  