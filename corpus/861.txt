 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I've recently got into functional programming and Java 8 lambdas. I have an array of ints and I want to sort it in an ascending order.  The way I am trying to do this with lambda is as follows:  1,03544 gold badges1616 silver badges3535 bronze badges  1  4  Streams do not offer a way to sort an array, they allow to process the elements in a sorted order. The original array is not modified and in your case, since there is no actual operation, nothing will happens at all. To sort an array, use that’ll work for and .  3 Answers 3  Here, we're entering with two 's but are returning a boolean expression ()  You actually just need the first part of it  Since you seem to be using an array of objects (because an doesn't have a method) you better be using a simple , it will simplify your life because the will than be sorted in their natural order.  Returns a stream consisting of the elements of this stream in sorted order.  20.5k99 gold badges4343 silver badges8282 bronze badges  7  That was my original approach. But even doing it this way, it still gives me the "Integer.Compare(x, y)" cannot be applied to <lambda expression> , <lambda expression>  @Kobek May you please post the full code? With the , it'll help reproduce the problem.  Both of these are incomplete; because there is no terminal operation, neither does anything. You want a at the end (or similar.)  Since the result is the sorted array returned by you should assign the result to a variable (in the first case, assigning it to the existing would be fine, in the second, the result is where the source is )…  Should be used for processing the array in a specific order. It can be used to sort arrays as explained in other answers but it will generate a new sorted array.  In case of very big sized data this will not be efficient.  If you want to do in-place sorting, you can use Collections.sort()  Or in the case of objects of type A and sorting based on field P  where getP() is the method that gets the field P value.  57811 gold badge44 silver badges2020 bronze badges  1  How to sort a raw array like with a lambda that has multiple lines (various if elses). Something like this:  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  