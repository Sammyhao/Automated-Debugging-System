 Graph implementation using STL for competitive programming | Set 1 (DFS of Unweighted and Undirected)  We have introduced Graph basics in Graph and its representations. In this post, a different STL-based representation is used that can be helpful to quickly implement graphs using vectors. The implementation is for the adjacency list representation of the graph. Following is an example undirected and unweighted graph with 5 vertices.  Below is an adjacency list representation of the graph.  We use vectors in STL to implement graphs using adjacency list representation.  vector: A sequence container. Here we use it to store adjacency lists of all vertices. We use vertex numbers as the index in this vector.  The idea is to represent a graph as an array of vectors such that every vector represents the adjacency list of a vertex. Below is a complete STL-based C++ program for DFS Traversal.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  