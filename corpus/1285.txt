 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Here's the situation. I have two javascript strings as follows:  I'm trying to see if dsName starts with replacementString, with the following code:  indexOf is returning -1!! How is this possible? I can put a breakpoint in Chrome script debugging right before that line and paste "dsName.indexOf(replacementString)" into the console and see that it is indeed returning -1.  Now just to prove I'm not crazy I can from that same breakpoint print out dsName and it does in fact equal "Test 1" and replacementString does equal "Test ". Here is an actual screenshot from the Chrome debugging console:  So as you can see, if I paste in the literal string, it works as expected, but if I use the variable, it doesn't work. I've even tried String(replacementString) and replacementString.toString() to see if maybe it was a type issue, but it does the same thing.  It's like it works if the parameter for indexOf is a literal string, but not if it's a string variable.  Am I going crazy, is there a something stupid I'm missing? Or is this possibly a bug in Chrome?  It is a possibility that there is a non-printable character in one of you strings. Its works  2 Answers 2  It looks like some of the characters that look like spaces are not actually simple spaces. Try this to see what the string really contains:  You can replace non-breaking spaces by regular ones like this:  So it appears you might be right: replacementString.charCodeAt(4) = 160 and dsName.charCodeAt(4) = 32...  Need to figure out what is causing that... So it looks like the char in replacement string is a non-breaking space...  Is your value perhaps posted from a browser or taken from a DOM node? You could replace all non breaking spaces by regular ones using String.fromCharCode(160).  Kudos to Wolfgang for getting me on the right path to figuring this out, but it turned out to be something completely unexpected and different...  I was pulling the value of replacementText from a which had a style of . I guess when nowrap is turned on, it returns spaces as non-breaking (ASCII code 160) and not as regular spaces.  What do you guys think? Is this a "duh you've should have known" or a "wow, that is something I've never run into before"?  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  