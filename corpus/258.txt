 Convert character array to string in C++  This article shows how to convert a character array to a string in C++. The std::string in c++ has a lot of inbuilt functions which makes implementation much easier than handling a character array. Hence, it would often be easier to work if we convert a character array to string. Examples:  Method 1: Approach:  Get the character array and its size.  Create an empty string.  Iterate through the character array.  As you iterate keep on concatenating the characters we encounter in the character array to the string.  Return the string.  Below is the implementation of the above approach.  C++  Method 2: The std::string has an inbuilt constructor which does the work for us. This constructor takes in a null-terminated character sequence as it’s input. However, we can use this method only at the time of string declaration and it cannot be used again for the same string because it uses a constructor which is only called when we declare a string. Approach:  Get the character array and its size.  Declare a string (i.e, an object of the string class) and while doing so give the character array as its parameter for its constructor.  Use the syntax: string string_name(character_array_name);  Return the string.  Below is the implementation of the above approach.  C++  Method 3: Another way to do so would be to use an overloaded ‘=’ operator which is also available in the C++ std::string. Approach:  Get the character array and its size.  Declare a string.  Use the overloaded ‘=’ operator to assign the characters in the character array to the string.  Return the string.  Below is the implementation of the above approach.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  