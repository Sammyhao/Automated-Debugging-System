 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  can someone plz tell me why tis error occurs and how to rectify it?  the program is finding the word ladder (length of the shortest chain to reach the target word) . i.e Given a dictionary, and two words ‘start’ and ‘target’ (both of same length). Find length of the smallest chain from ‘start’ to ‘target’ if it exists, such that adjacent words in the chain only differ by one character and each word in the chain is a valid word i.e., it exists in the dictionary. It may be assumed that the ‘target’ word exists in dictionary and length of all dictionary words is same.  but even if i use for(auto it = graph.begin(); it != graph.end(); it++) , the same runtime error is coming.  i linked that answer for a reason, and you would do well to read the selected answer. What you're doing is still wrong. Look closely at the proper example of how to perform iterator based enumeration with potential container item erasure in the selected answer of the question I posted. There should be no increment-statement in the for-loop construct. there will be an erase or an increment within the body of the loop. Better still, recode it as a and mimic the linked behavior.  1 Answer 1  However, it misses another issue - you don't have to edit the graph in that loop.  (There should probably be some error handling as well.)  Basically: If you are changing a sequence while you are iterating over it you have to take extra pre-cautions and cannot use C++11 style, but the best option is to not modify it at that time - the second option is to use iterators and take special care.  The OP's code finds multiple "adjacent" strings, and queues all of them. Your code only uses the last (or first with the break) it finds. depending on the order the OP's example goes into the set, it won't find the depth.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  