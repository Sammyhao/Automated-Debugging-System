 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I was trying to implementing dfs to print paths from starting node . I followed algorithm from Coremen 's book . Here is my code : DFS  it seems printing values from stacks creates problem . please correct me where i did mistake , Thanks in advance .  In order to make sure the input is not the problem, replace it with hard-coded values. Also, please clean up your code and remove everything that isn't necessary to reproduce the problem.  2 Answers 2  There is mistake in the print_path function. Your for-loop termination condition checks result(stack)'s size which decrements each loop-iteration by pop calling.  Your print_path function should look like something like this:  Additionally consider this DFS implementation:  used is global bool array indicating i'th vertex is visited or not. We have no need to color vertexes. We have to know is it already visited or not.  We run DFS on some vertex. If it's visited we do nothing. Else we mark this vertex as visited. And then go deeper running DFS on each vertex adjacent current vertex.  Here's how I would implement DFS in C++. First some observations:  I'll use adjacency lists (s) rather than an adjacency matrix.  s aren't owned by their neighbors. They're assumed to be owned by a parent object.  So, without further ado:  A nice thing about this implementation is that, in order to get BFS, you only need to replace with , and leave the rest of the code exactly as is.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  