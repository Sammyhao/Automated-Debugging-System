 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have written a program that inserts integer values into binary search tree. It seems to work fine but when I modify the same to accept a character array instead of an integer, I get unexpected results. Here is my complete code:  Output :  karan sameer palak jagdish naman umang chandu  Expected:  chandu jagdish karan naman palak sameer umang  A question like this has already been asked before but that had some compilation error. My code is not throwing any error but there seems to be some logical flaw!  2 Answers 2  In addition to rachitmanit's answer, I felt like you are writing in C, not C++.  In case you are writing in C++, I recommend using . It can be compared conveniently with , , etc.  Old C's only allocates memory, and doesn't construct object (i.e. doesn't call constructor). It should be:  is usually , which is an integer, not a pointer. I definitely recommend using .  Usually, pointer arguments might be and you should check if it is. I recommend using reference, where you don't have to:  Should be .  And don't forget to deallocate the memory. Your program allocates memory and doesn't deallocate it, which will cause memory leak. should deallocate the memory when destroyed:  Thanx a lot..!! Actually i did tried using strings instead of character array.. But there was a segmentation fault and i couldn't resolve it so i decided to use character array!!  Again, doesn't call any constructor, and so doesn't call member 's constructor. Probably that's why you got segmentation fault.  In case of integers, your "data" is actually a value. While here "node->data" is the address of the first block of data[] array. Remember node->data[0] is a value. You are comparing addresses here not the actual "Value".  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  