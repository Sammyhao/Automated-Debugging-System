 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  This is my wrong answer. I tried to merge the to . I first make two listnode to reference the and . The manipulate with and .  This is one of the right answer, What's the difference?  - you get wrong answer or memory limit exceeded? If you get the later, are you getting it evreytime?  What is ? Is it your own list implementation? Java already has list implementations - and .  2 Answers 2  OutOfMemoryError occurs when your program occupies memory without un-referencing it, thus leaving no chance to the Garbage Collector to free it. In a matter of little time, no memory remains available for the JVM and then it cannot continue executing the program, and then throws this error.  The difference beteen your program and the "good" alternative is that the latter uses a temporary collection to store the result. Your program, instead, stores the results in one of the very input collections. So, if in each iteration you are adding items to the same collection from which you are reading, the reading will never end. That's why it's safer to use a different collection to store the results.  8,27022 gold badges1717 silver badges4242 bronze badges  1  The "correct" solution does not use a temporary collection, only a single extra dummy node. The algorithms in the two versions are essentially the same.  Are you really getting memory limit exceeded? I don't see how that's possible, you don't allocate any memory.  There are a few errors though. For example, what if l1.val == l2.val? Both t1 and t2 will point to l2.  Try running the code with random lists, that may uncover further problems in it.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  