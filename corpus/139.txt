 Binary Search Tree | Set 3 (Iterative Delete)  Given a binary search tree and a node of the binary search tree, the task is to delete the node from the Binary Search tree Iteratiely. Here are the three cases that arise while performing a delete operation on a BST:  1. Case 1: Node to be deleted is a leaf node. Directly delete the node from the tree.  2. Case 2: Node to be deleted is an internal node with two children. Copy the contents of the inorder successor of the node to be deleted and delete the inorder successor. The inorder successor can be found by finding the minimum element in the right subtree of the node. inorderSuccessor(10) = 11.  3. Case 3: Node to be deleted is an internal node with one child. For this case, delete the node and move its child up to take its place.  The intuition behind deleting the inorder successor in Case 2 is that the inorder successor of a node with two children will always be greater than all elements in the left sub-tree of the of the node since it is the smallest node in the right sub-tree of the node and the inorder successor of the node will always be smaller than all other nodes in the right sub-tree of the node.  This preserves the BST property of all nodes in the left sub-tree of a given node are smaller than the given node and all nodes in the right sub-tree of the given node are greater than the given node.  Below is the implementation of the above approach:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  