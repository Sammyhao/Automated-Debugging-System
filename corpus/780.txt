 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  You're overriding every next array element with a previous value. You should probably reverse your loop and move from the end of the array, shifting all elements forward until you find the right spot, i.e.:  Add some explanations to your code: what programming language used, what benefits are there.  completely unclear how an insert function should work without knowing the number of fields already occupied?  To be honest, the array in question is not really sorted like this: . It is a "zero tailed" array: . So to insert a value into that array it needs to know how many elements occupied are. In case when you provide this value into a method it would have O(log n) complexity. Otherwise, it needs to implement counting inside the inserting method.  An alternative way to do what you need with O(log n) complexity for a really sorted array:  two flaws: an already existing value is not inserted and the solution busts with for values greater 9…  You can use the Arrays or Collections binarySearch function to get the position to insert the new value at, you will need to shift all elements from this position (if any) to the right  You could use the arrays.sort() functionality to insert a value into a new array then sort it. It solves the issue in a roundabout way. For example  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  