 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have an ordered array list. And in my resize function I create a new array and assign it the values of the old array and then I delete the old array using . This causes an error at run-time whenever the resize function comes into play. dbgheap.c is called. Has anyone ever seen this before?  Here is my code:  //size and g_size are given its value by the user at the start of the program.  You're likely overwriting the bounds of your array, and the checking isn't performed until releasing the memory to the heap. You should show how you're populating the array, and try to reduce this to a sscce.org  Ok, Im populating the array with an ordered push at the users discretion... Il edit the push function into my code :)  And when debugging runtime errors - use a debugger (gdb for instance). It just makes everything so much easier.  2 Answers 2  There may be some other issue here, but the most obvious thing I can see is this:  If happens to be zero, you will eventually do this:  This problem will show immediately (when is zero - you haven't shown your constructor, but I do hope that you initialised everything).  Changing to in the loop may solve all your troubles.  Conceptually, you ought to agree with this logic. There is no point moving the item before forward to when you are just about to replace it with the new item.  [edit] Now that you have posted your constructor:  This will initialise your array with the size instead of , because of how the comma operator works. Read this: How does the Comma Operator work  I did that... unfortunatly no joy... Yes everything is inistialised in the constructor. I will edit it in...  @Becca I should give you a warning that it's not a good idea to resize only when . This code could be easily broken if you are not careful. It's safer to test .  Your code in the constructor should only take one parameter which is the size of the array.  Not to gripe, but why did this become the accepted answer when it was posted after I had determined that to be the problem and my answer had been accepted?  Because you have way more reputation than Pendo. lol. Like me, the OP probably like reading the shorter answer first. So, I'm assuming he saw both posts at the same time and chose to read the shorter answer first.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  