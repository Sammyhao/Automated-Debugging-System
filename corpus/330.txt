 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have a CSC assignment that I am near complete with. However, I cannot understand how I am supposed to do the last part of the assignment. I will link my code below, as well as the assignment prompt. I will also explain how far I've gotten and what I've tried.  Prompt:  Ask the user for the filename of the file that contains the graph information (example: graph_1.txt).  Read in the number of vertices from the file and store in a variable. You will use this variable to create your matrix object and then your list object.  Read each pair of vertices from the file that makes each edge and then add that edge to the matrix. Then add that edge to the adjacency list as well.  Print the adjacency matrix.  Print the adjacency list.  (I am here)  Create a stack object to use in the DFS algorithm.  You may also want to dynamically create a Boolean array (I called mine visited) which is the size of the number of vertices to keep track of which vertices have been visited.  Use the stack to implement the Depth-First-Search algorithm. Your solution may either be recursive, or not.  Print out the vertex when you push it to the stack (meaning it has been visited).  Code:  GraphMatrix.h (This is my class to hold the vertices and edges read from the file.)  Stack.h  Main.cpp (This is where most everything is done. I also have a GraphList class, but that is irrelevant to this problem.)  I am unsure of how I am supposed to implement the stack class with the GraphMatrix class and then do the DFS algorithm with that. If anyone could please guide me in the right direction here, I would greatly appreciate it!  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  