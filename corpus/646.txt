 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I sometimes had such a difficult situation in debugging. I have a Java HashMap which contains many entries, and the program doesn't work as expected because it says the map doesn't contain a particular entry, but that entry is supposed to be in the map. However, I can't debug into the map. In Eclipse I can see the internals of the Map in variables, but given so many entries it's hard to eye-scan all the entries in the map to see whether that entry is in the map or not.  Is there a better way to debug this type of situation? For you for your insight and thoughts.  8,9111919 gold badges7676 silver badges148148 bronze badges  1  1  +1 to the question and answer. But on a tangent relating to your actual problem, have you overridden and for the key?  3 Answers 3  Most debuggers allow you to evaluate an expression while sitting in a debug breakpoint, and Eclipse is no exception (see Eclipse help - Evaluating expressions). Just evaluate to see if the entry is in the map.  Another option is that most debuggers show the value of an object in the Variables view. If the map doesn't have too many entries, you should be able to see all of the entries of the map there.  77.5k1515 gold badges155155 silver badges186186 bronze badges  2  Yes, when map.get(key) returns null I want to make sure it really doens't contain the key. Sometimes I just try to see each elements in the map.  @user697911: Well, first off, doesn't mean the map doesn't contain the key; it could be mapping to explicitly. But by definition, a map that returns false for does not have the key, no matter what the internals are.  One can attach java source code for debugging. Then one can debug into the map. Or try the expression evaluation within the debugger.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  