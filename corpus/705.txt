 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I make a graph using a list of adjacency-based multivariable list. I have sold all certain functions that create a data structure, but I can not realize the search of all possible routes between two points ((. I thought a lot, but could not figure out how to get all the ways, not just one. I know i have to use BFS, but i cant come up nothing(  it is BFS i tryed to make((. I know its not so good :(  It seems that your title is misleading. Your question is about the search on the graph, not deleting an edge, right?  You can use DFS instead of BFS, each time you reach the wanted vertex save that path, each path will be unique.  Do you want all paths or all mutually exclusive paths? Because if you search for all paths, you might end up many overlapping routes.  1 Answer 1  If your graph does contain local groups of vertices not connected by any edge, this algorithm will fail to visit all. In that case, instead of you should iterate over all nodes and call . Already visited root nodes will be skipped anyways. After the search, don't forget to reset the flag for all vertices!  EDIT:  As Михаил pointed out, this will only find one path. To find all possible paths: Every time you reach the target vertex you can save the route (you can keep a stack that gets passed on every recursive call, and vertices (or edges) added, popped like this:  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  