 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am working on an input system as part of a tutorial I am watching, and much to my google searching, I find only one method online for handling input via a switch statement in your application loop.  I can't find examples where the tutorial really takes in mod keys like shift, alt and ctrl. I found enough that I can properly pull what the current mods are but I can not find a convenient way to achieve what I would like to do.  My plan was to have an input class that is part of an application class. The input can be passed to the window and game objects so that way I have a single input state system for the entire program. I wanted register callback functions from within the game or the window as necessary, and the only way I know how is via . I thought I could have a sort of situation. However, since I need to account for modding of the key, is there a way to generate a unique key value combined of scancode and mods, for example , and ?  Right now my solution I think is a bit hacked as I would need to have a unique set for each modifier combination.  Current Registration (minus implementation of inserting the key/func pair into the map), but I would essentially need an individual map for each block below. Is there a better way to manage this?  Currently:  Intellisense error is:  Error: no instance of overloaded function "std::map<_Kty,_Ty,_Pr,_Alloc>::insert [with _Kty=key,_Ty=std::function,_Pr=std::less,_Alloc=std::allocator>>]" matches the argument list argument types are:( std::pair>)  object type is: std::map, std::less, std::allocator>>>  1,80111 gold badge2222 silver badges4545 bronze badges  3  What type is used to store and ? Can you have them occupy different bits of a (e.g. )and then use 's standard less-than comparator to store all the combinations in the same map?  If so it'd be pretty easy to wrap an interface around the map that just translated (mod, sym) -> long before doing anything with the map.  I guess according to SDL's page that the sym value is an integer but all it says is that it is a standard enum. The mod value is Uint16 and there seems to be less than 256 so it's possible.  1 Answer 1  Or, map the set of active / pressed keys to functions;  You need some class then, which is capable of holding every pressed key (including meta keys).  15.4k22 gold badges3333 silver badges6161 bronze badges  3  Is it possible to combine this with what I am currently trying. Where I define a operator< for the struct which just holds the pressed keys code and mods as separate variables? I tried to do this, but to reassign keys using [] then it keeps complaining I need to define some [] operator. I could use the normal insert function into the ordered map, but apparently that doesn't let me reassign the functions later.  What exactly is the error message (compile time, right?) ? Is lookup using find working?  I think I solved it. I had a forward decleration of struct key when I declared my struct in the class. The problem is that it wasn't part of Input and my struct is a public member of input. So I can either make the struct a non member struct or forward declare struct from within the class.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  