 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I can not figure out where I'm having my problem with my heap sort. The program takes a filename from the command line, imports the words into a vector then that vector is turned into a vector pair of where string is the word and int is the count of how many instances of that word are in the file.  The is then sorted by either the string (value or v) or by int (key or k). My sorting by Key works fine however sort by value is off. I suspect I'm missing an if statement in max_heapify when sorting by value. Here's my code:  main.cpp  readwords.h  readwords.cpp  15711 gold badge33 silver badges1212 bronze badges  1  6  I think if you want this question answered, you should do some work on this program. Remove all the stuff that is working (i.e. remove the timing code, the file reading code and the sorting by key code) and just post a smaller program that isn't working. Personally I'm not prepared to examine a program that big for bugs. You may also find that by cutting out the working code you discover what the problem is for yourself.  2 Answers 2  The vector is then sorted by either the string (value or v) or by int (key or k).  That description doesn't match the code, sorting with a parameter of sorts by the first component only, which is the , and sorting with as parameter takes both components into account.  I think it's a rather bad idea to pass a to determine the sorting criterion, it should be a comparator function, so you need only one implementation in .  My sorting by Key works fine however sort by value is off. I suspect I'm missing an if statement in max_heapify when sorting by value.  The problem is that a heap sort needs a total ordering or it won't sort properly.  Your conditions  check whether both components of (resp. ) are at least as large as the corresponding component of , resulting in the product partial ordering, two general pairs are not comparable, and in that case, your doesn't do anything.  Example, for , and in the positions , in whichever order, your sets to .  If your sorting by is meant to sort based on the component first, and in case of a tie, take the component into account, you'd need to distinguish the cases and equality (for too, of course). For example  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  