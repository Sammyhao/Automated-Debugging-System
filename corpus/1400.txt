 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Can someone help look at my code, please? Thank you so much for your help. The input stack is [5, 2, 1, 9, 0, 10], my codes gave output stack [0, 9, 1, 2, 5, 10], 9 is not in the right position.  This doesn't seem like a sorting algorithm at all. In the loop inside , you're pushing the same element back on to the stack and never looking through the stack at the rest of the elements.  This alrorithm is incredibly inefficient. It took over 6 seconds just to sort a Stack with only 10000 items. Try sorting with the other solution found here blog.pengyifan.com/sort-a-stack-in-ascending-order-in-on-log-n and 10000 items sort in about 100ms. Just an FYI, first sign of an inefficient sorting algorithm is a nested loop like the while/while loops you have here, which are O(n^2). You can have multiple sequential while loops that aren't nested and still keep with at least an O(n) solution  This is a code that I came up with yesterday night after an hour of brainstorming. When I was solving a version of this problem, I had a restriction that at most only one additional stack can be used. This is an intense recursive solution to this problem. I've used 2 private methods to get me the stuff that I required from the stack. I really love the way that recursion worked here. Basically the version that I was solving required to sort a stack in ascending/descending order by using at most one additional stack. Note that no other data structures should be used.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  