 void pointer in C / C++  A void pointer is a pointer that has no associated data type with it. A void pointer can hold address of any type and can be typcasted to any type.  Advantages of void pointers: 1) malloc() and calloc() return void * type and this allows these functions to be used to allocate memory of any data type (just because of void *)  Note that the above program compiles in C, but doesn’t compile in C++. In C++, we must explicitly typecast return value of malloc to (int *).  Some Interesting Facts: 1) void pointers cannot be dereferenced. For example the following program doesn’t compile.  Output:  The following program compiles and runs fine.  Output:  2) The C standard doesn’t allow pointer arithmetic with void pointers. However, in GNU C it is allowed by considering the size of void is 1. For example the following program compiles and runs fine in gcc.  Output:  Note that the above program may not work in other compilers.  Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  