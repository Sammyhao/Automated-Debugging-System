 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have two queries which split comma separated list into rows and insert into table variable.  For first query I have used custom function which is:  USER defined Function for Spilt.  Query 1 :  Query 2 :  Query Plan of Both Query  Why 37% and using STRING_SPLIT Its 63% . but if i only compare select statement then query cost of STRING_SPLIT is 1%.  1 Answer 1  If you will check only the part of the query that include the select query, then you will get that using STRING_SPLIT gives much better performance according too execution plan (EP). the result will be 99% vs 1%.  But when we use the data that returned by the STRING_SPLIT function (for example "select... into" or like in your case "insert...select'), then you might notice that the server uses "table spool (Eager Spool)" which make the difference. This operator takes the rows and stores them in a hidden temporary object stored in the tempdb database (the idea of using this logic is that the spooled data can be reused later in the execution plan). The "eager" spool takes ALL rows from the previously operator at one time, which means that this is "blocking operator".  By the way, If you will SET STATISTICS IO ON, then you will see the differences ;-)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  