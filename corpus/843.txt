 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  if I use a for-each loop on a linked list in java, is it guaranteed that I will iterate on the elements in the order in which they appear in the list?  6 Answers 6  I found 5 main ways to iterate over a Linked List in Java (including the Java 8 way):  One thing should be pointed out is that the running time of For Loop or While Loop is O(n square) because operation takes O(n) time(see this for details). The other 3 ways take linear time and performs better.  For iteration just using linkedList.forEach(e -> System.out.println(e)); would also work.  Question about the Iterator solution. Is this creating a new memory structure which copies all the elements of the LinkedList, or does it create a new memory structure that contains references (pointers?) to the value for each element in the LinkedList? Why is this faster than using the get(i) solution? Is it because the get(i) has to traverse the tree, at least partially, linkedList.size() times to get the address for the next element?" (it'd be linkedList.size()*(linkedList.size()+1)/2 times, right?)  An ordered collection (also known as a sequence). The user of this interface has precise control over where in the list each element is inserted. The user can access elements by their integer index (position in the list), and search for elements in the list.  iterator() Returns an iterator over the elements in this list in proper sequence.  As the definition of Linkedlist says, it is a sequence and you are guaranteed to get the elements in order.  Don't use linkedList.get(i), especially inside a sequential loop since it defeats the purpose of having a linked list and will be inefficient code.  Each java.util.List implementation is required to preserve the order so either you are using ArrayList, LinkedList, Vector, etc. each of them are ordered collections and each of them preserve the order of insertion (see http://download.oracle.com/javase/1.4.2/docs/api/java/util/List.html)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  