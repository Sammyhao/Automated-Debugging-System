 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am trying to use a hashtable so I can select a specific object stored in an array/object. However, I am having a problem looping through an object.  As you can see in which uses object to store the data, I am getting when looping through the object .  What is the correct way for looping through ?  EDIT  What happens if instead of just , I make pin[6] = an object and I want to loop through the all their properties? Actual code snippet of what I'm doing...  The above returns undefined, and if I do instead, I get the value of . Sorry I'm getting confused!  I managed to get it to work with but why does the above not work?  54.8k136136 gold badges426426 silver badges746746 bronze badges  5  2  You are adding members at indexes 6, 7 and 8 but iterating from 0 to 2. A better strategy would be to iterate from to and test if the members exists before attempting to use it.  @c69—arrays are objects, ;-) The OP's problem is trying to access non existent properties.  @RobG yes, that's why i upvoted your comment )) but he is trying to access non-existent properties exactly because he is not understanding what he is doing.  What happens if instead of just , I make pin[6] = an object and I want to loop through the all their property ? Updated original post.  to get a list of properties, and loop through it, or  Use a in conjunction with (to exclude inherit properties) to loop through the properties.  The problem of your third test case is that it reads the values of keys 0, 1 and 2 (instead of 6, 7, 8).  835k112112 gold badges11231123 silver badges12401240 bronze badges  2  I used your method and it works the way I want it, but I don't understand why using does not work as desired... Updated Original post...  Because you were using to count the number of items, not to find out their names. Once you found out there were three items, you look at items named 0, 1 and 2 but the items were called 6, 7 and 8.  @c69 is still suboptimum because it's less performant then . is an expensive call  The begins with 6 up to 8, but the for loop loops from 0 up to 3 (the length of the object). You need to loop from 6 up to . Something like this:  40.1k1515 gold badges100100 silver badges111111 bronze badges  1  That would be better if you added before attempting to use the member to weed out the nonexistent ones.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  