 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I have generated a heap dump from my java application which has been running for some days with the tool -> this results in a large binary heap dump file.  How can I perform memory analysis of this heap dump within IntellIJ IDEA?  I know that there are tools for Eclipse and Netbeans but I would rather use IDEA if possible.  The basic results of the analysis would tell me the number of instances of each object in memory, per-class, to allow me to be able to start debugging memory leaks.  7 Answers 7  The best thing out there is Memory Analyzer (MAT), IntelliJ does not have any bundled heap dump analyzer.  No, MAT is written using Eclipse's framework so I can't see it being very easy to plug into IntelliJ. However, to be honest running MAT as a standalone app is probably better.  I would like to update the answers above to 2018 and say to use both VisualVM and Eclipse MAT.  How to use:  VisualVM is used for live monitoring and dump heap. You can also analyze the heap dumps there with great power, however MAT have more capabilities (such as automatic analysis to find leaks) and therefore, I read the VisualVM dump output (.hprof file) into MAT.  Get VisualVM:  You also need to download the plugin for Intellij:  Then you'll see in intellij another 2 new orange icons:  Once you run your app with an orange one, in VisualVM you'll see your process on the left, and data on the right. Sit some time and learn this tool, it is very powerful:  Get Eclipse's Memory Analysis Tool (MAT) as a standalone:  Okay, thanks. This plugin seems to require me to run the java process locally - is that correct? I want to export the heap dump from a server, copy it to my local machine and analyze it here.  This plugin only starts VisualVM and opens desired application in it. It has nothing to do with your case. You can start VisualVM manually and open the dump.  There also exists a 'JVM Debugger Memory View' found in the plugin repository, which could be useful.  You can just run "Java VisualVM" which is located at  This will open a GUI, use the "File" menu -> "Load..." then choose your *.hprof file  Please rephrase, use some formatting (stackoverflow.com/editing-help#comment-formatting) and add some explanation. Also, you probably do not want to discuss your name, even if you do not like the name of your account.  E.g. (though I do not know the language very well) I am guess that the "done!!!" is not part of the proposed solution. Consider putting that on a different (preferrably with extended explanation). Then format the part which actually is code with the appropriate formatting.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  