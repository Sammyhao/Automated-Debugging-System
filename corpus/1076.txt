 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  the function is supposed to find the value searched and return how many times that certain value was in the linked list.  how can I turn the first method, which uses a while loop, into something that does the same thing but uses recursion?  Looks like you are most of the way there, but I don't think you want to return immediately when you find a match. Instead, keep going until null and have each iteration return the number found so far.  3 Answers 3  For starters instead of the return type it is better to use an unsigned type like for example  You can use the following approach. Define two methods. The first one is a public non-static method defined like  The second one is a private static method with two parameters defined like  @LearningCode You can define the static method and use it though it is more natural to define two methods as I showed in my answer.  In order to use recursion, you will need to change the signature of your find function (or add a new function with the different signature) to take a node pointer as a parameter:  Then, when you traverse the list, you pass to the function. Once you hit the end of the list, with a value, the stack unrolls.  A key aspect of recursion as that the function or method being used only has to process a single node of your container. It then calls itself with the next node to be processed until there are no more nodes. In order to make this work, that function needs the node to process as a parameter, which is where your current code runs into problems.  Keep in mind that the elegance and simplicity of recursion is not free. Every call that a method makes to itself eats up stack, so a sufficiently large container can result in a crash if the stack for your process is depleted.  @LearningCode if you changes the function signature of your method to include a pointer to a node, you could use the function described in Vlad's answer directly. His second method, made public, does the trick.  how can I turn the first method, which uses a while loop, into something that does the same thing but uses recursion?  The following would be closer to what you want. You really should provide an [MCVE] ... the lack of which forces many guesses and assumptions about your code.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  