 Binary Search In JavaScript  Binary Search is searching technique which works on Divide and Conquer approach. It used to search any element in a sorted array. As compared to linear, binary search is much faster with Time Complexity of O(logN) whereas linear search algorithm works in O(N) time complexity. In this article, implement of Binary Search in Javascript using both iterative and recursive ways are discussed. Given a sorted array of numbers. The task is to search a given element in the array using Binary search. Examples:  BASE CONDITION: If starting index is greater than ending index return false.  Compute the middle index.  Compare the middle element with number x. If equal return true.  If greater, call the same function with ending index = middle-1 and repeat step 1.  If smaller, call the same function with starting index = middle+1 and repeat step 1.  Below is the implementation of Binary Search(Recursive Approach) in JavaScript:  javascript  Output:  Time Complexity: O(logN) Auxiliary Space: O(1)  Iterative Approach : In this iterative approach instead of recursion, we will use a while loop and the loop will run until it hits the base condition i.e start becomes greater than end. Below is the implementation of Binary Search(Iterative Approach) in JavaScript:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  