 Difference between an Iterator and ListIterator in Java  Iterators are used in Collection framework in Java to retrieve elements one by one. It can be applied to any Collection object. By using Iterator, we can perform both read and remove operations. Iterator must be used whenever we want to enumerate elements in all Collection framework implemented interfaces like Set, List, Queue, Deque and also in all implemented classes of Map interface. Iterator is the only cursor available for entire collection framework.  Iterator object can be created by calling iterator() method present in Collection interface.  ListIterator It is only applicable for List collection implemented classes like arraylist, linkedlist etc. It provides bi-directional iteration. ListIterator must be used when we want to enumerate elements of List. This cursor has more functionality(methods) than iterator.  ListIterator object can be created by calling listIterator() method present in List interface.  Differences between Iterator and ListIterator:  Iterator can traverse only in forward direction whereas ListIterator traverses both in forward and backward directions.  Example:  Output:  ListIterator can help to replace an element whereas Iterator cannot.  Example:  Table showing Difference between Iterator and ListIterator  Iterator  ListIterator  Can traverse elements present in Collection only in the forward direction.  Can traverse elements present in Collection both in forward and backward directions.  Helps to traverse Map, List and Set.  Can only traverse List and not the other two.  Indexes cannot be obtained by using Iterator.  It has methods like nextIndex() and previousIndex() to obtain indexes of elements at any time while traversing List.  Cannot modify or replace elements present in Collection  We can modify or replace elements with the help of set(E e)  Cannot add elements and it throws ConcurrentModificationException.  Can easily add elements to a collection at any time.  Certain methods of Iterator are next(), remove() and hasNext().  Certain methods of ListIterator are next(), previous(), hasNext(), hasPrevious(), add(E e).  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  