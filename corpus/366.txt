 DelayQueue Class in Java with Example  Last Updated : 20 May, 2021  The DelayQueue class is a member of the Java Collections Framework. It belongs to java.util.concurrent package. DelayQueue implements the BlockingQueue interface. DelayQueue is a specialized Priority Queue that orders elements based on their delay time. It means that only those elements can be taken from the queue whose time has expired. DelayQueue head contains the element that has expired in the least time. If no delay has expired, then there is no head and the poll will return null. DelayQueue accepts only those elements that belong to a class of type Delayed or those implement java.util.concurrent.Delayed interface. The DelayQueue blocks the elements internally until a certain delay has expired. DelayQueue implements the getDelay(TimeUnit.NANOSECONDS) method to return the remaining delay time. The TimeUnit instance passed to the getDelay() method is an Enum that tells which time unit the delay should be returned in. The TimeUnit enum can take DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS. This queue does not permit null elements. This class and its iterator implement all of the optional methods of the Collection and Iterator interfaces. The Iterator provided in method iterator() is not guaranteed to traverse the elements of the DelayQueue in any particular order.  // Declaration of Delayed interface  public interface Delayed extends Comparable<Delayed>  {  /**  * Returns the remaining delay associated with this object, in the  public class DelayQueue<E extends Delayed> extends AbstractQueue<E> implements BlockingQueue<E>  Here, E is the type of element maintained by this collection.  Constructors of DelayQueue  To construct a DelayQueue, we need to import it from java.util.concurrent.DelayQueue.  1. DelayQueue(): This constructor is used to construct an empty DelayQueue.  DelayQueue<E> dq = new DelayQueue<E>();  2. DelayQueue(Collection<E> c): This constructor is used to construct a DelayQueue with the elements of the Collection of Delayed instances passed as the parameter.  DelayQueue<E> dq = new DelayQueue(Collection<E> c);  Below is a sample program to illustrate DelayQueue in Java:  Java  Output:  Below is a sample program to illustrate DelayQueue methods in Java:  Java  Output:  Basic Operations  1. Adding Elements  The add(E e) method of DelayQueue class in Java is used to insert the given element into the delay queue and returns true if the element has been successfully inserted.  Java  Output  2. Removing Elements  The remove() method of DelayQueue class in Java is used to remove a single instance of the given object say obj from this DelayQueue if it is present. It returns true if the given element is removed successfully otherwise it returns false.  Java  Output  3. Accessing Elements  The peek() method of DelayQueue is used to retrieve the head of the DelayQueue, but does not remove it, as in the case of the poll() method where the head is removed from the DelayQueue.  Java  Output  4. Traversing  The iterator() method of DelayQueue is used to return an iterator over all the elements in the DelayQueue.  Java  Output  Methods of DelayQueue  Methods declared in class java.util.AbstractQueue  Methods declared in class java.util.AbstractCollection  Methods declared in interface java.util.concurrent.BlockingQueue  Methods declared in interface java.util.Collection  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  