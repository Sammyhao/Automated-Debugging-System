 Difference between an array and a tree  An array is a collection of homogeneous(same type) data items stored in contiguous memory locations. For example, if an array is of type “int”, it can only store integer elements and cannot allow the elements of other types such as double, float, char, etc.  The array is a linear data structure in which elements are stored at contiguous memory locations.  In array, we store elements of the same datatype together.  It has index-based addressing as elements are stored at contiguous memory locations.  Index starts from 0 and goes up to (N – 1) where N is the number of elements in the array.  As the arrays allow random access of elements in O(1). It makes accessing elements by position faster.  The biggest disadvantage of an array is that its size cannot be increased.  Below is the general representation of the array:  Tree:  The tree represents the nodes connected by edges. The binary tree or binary search tree specifically. A binary tree is a special data structure used for data storage purposes. A binary tree has a special condition that each node can have a maximum of two children. A binary tree has the benefits of both an ordered array and a linked list as search is as quick as in a sorted array and insertion or deletion operations are as fast as in a linked list.  A tree is a group of nodes starting from the root node.  Every node has a specific parent and may or may not have multiple child nodes.  Each node contains a value and references to the children.  It’s a kind of graph data structure but does not have cycles and is fully connected.  The best example to visualize the tree data structure is to visualize a natural rooted tree.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  