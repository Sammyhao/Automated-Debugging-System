 Collections.binarySearch() in Java with Examples  java.util.Collections.binarySearch() method is a java.util.Collections class method that returns position of an object in a sorted list.  The method throws ClassCastException if elements of list are not comparable using the specified comparator, or the search key is not comparable with the elements. Searching an int key in a list sorted in ascending order:  Java  Output :  Searching an int key in a list sorted in descending order.  Java  Output :  Searching in a list of user-defined class objects:  Java  Output :  Arrays.binarysearch() vs Collections.binarySearch() Arrays.binarysearch() works for arrays which can be of primitive data type also. Collections.binarysearch() works for objects Collections like ArrayList and LinkedList. Important Points:  If input list is not sorted, the results are undefined.  If there are duplicates, there is no guarantee which one will be found.  This method runs in log(n) time for a “random access” list like ArrayList. If the specified list does not implement the RandomAccess interface and is large, this method will do an iterator-based binary search that performs O(n) link traversals and O(log n) element comparisons.  Reference : https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#binarySearch(java.util.List,%20T) This article is contributed by Mohit Gupta. If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  