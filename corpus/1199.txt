 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  How are the user defined objects sorted in map and set? As far as I know, map/set are Sorted Associative Containers: the elements being inserted are sorted based on the key that it holds.  But map and set internally use to sort their elements.  2 Answers 2  uses a functor to sort elements. By default is it which uses . In your sample there is an user defined functor which will help to sort elements according to its keys in alphabetical order.  92.1k2323 gold badges131131 silver badges209209 bronze badges  6  So basically map uses a key to sort the values based on std::less which uses operator < correct ?  @ronan: Copied code from comment into question! But the code gets sorted by std::less<std::string> which uses the operator< which is defined in std::string to give a lexicographically less string (ie the same as you experiment when using char* and ltstr)  First of all is used by default and not . In your case, you are passing a custom comparison function by passing the third template parameter while creating the map object. While inserting each element to the map, this comparison functor is used to determine the relative ordering of the object in the map i.e. it is used to compare the keys. For example, when you do , map compares the the keys "january" and "february". Since we are doing a string compare, this comparison returns a value greater than 0. This value is used to determine the position of the key "february" in relation to "january".  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  