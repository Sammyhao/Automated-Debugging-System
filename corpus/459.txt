 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  The problem I am facing is the following: I have a function based on the BFS search algorithm that I use in a NxM grid, the mission of this function is to return the following Direction from a set of possible Directions = {Up, Down, Left , Right} (No diagonal moves!)to which a player has to move, so that in each "round / frame" where there is a type of item of a game (For example, in this specific case, a bazooka) is closer to the item. To address the problem, I have created a Map class made of where vector is from the standard library and Cell is what the grid is made of and has some consulting methods on what is in one of the NxM cells (if there is a building, an enemy, a Bazooka, etc.)  So, for implementing a solution for this, I made a struct TrackingBFS to reconstruct the path of the BFS search:  And this is the BFS search implementation:  The reconstruir_camino (recosntruct_path in english) implementation:  And direccion_contiguos (contiguous direction / relative direction in english) implementation:  So now in visited, we have the information to reconstruct the path, in fact I debuged it (it's kinda messy i know, sorry), in a visual way so this is what I got for a Player in origen = (7,10) and bazooka at position = (4,11):  [Imgur link of the Visual representation of the Matrix for reconstructing the path from origin to bazooka][1] To read this image, at the top and left there are the coordinates of every cell of the visited matrix, the ones with green font, are the ones that have been visited, and they store THE NEXT cell/vertex of the path, and the ones with (-1,-1) are the ones that have not been visited by the BFS algorithm and thus they don't have any previous node and are in white. So, NICE! It seems to work, at least the visited matrix.  My problem is when I debug the vector of edges/directions of the graph/grid, this is what I used in the example of the image:  And when I executed the program, this is the path that I got with debug_camino(): If you see the image attached you can see that that's almost the path but not quite yet. (4,12),(4,13),(4,14),(3,15),(3,16),(4,16),(5,16),(6,16),(7,15),(7,14),(7,13),(7,12),(7,11)  These ones bolded are not real (even valid because they are diagonal moves) reconstructions of the path and I don't really know WHY this is happening, but it's provoking my player to not following right path, and I want to fix the error and I'm kinda desperate because I don't really know where the error is and I've been trying for days :( ! I hope somebody can help me with this. Thanks for reading all this and sorry if the code is in some parts in Spanish or if it's not all that readable. [1]: https://i.stack.imgur.com/vZ2Go.png  1 Answer 1  Okay, I actually managed to fix this error, i was overwriting the i variable so that was causing the error.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  