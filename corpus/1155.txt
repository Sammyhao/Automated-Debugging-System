 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  6 Answers 6  The problem can be solved in O(n) by maintaining a double ended queue(deque). We iterate the element from left to right and ensure that the deque always holds the smallest lexicographic sequence upto that point. We should only pop off element if the current element is smaller than the elements in deque and the total elements in deque plus remaining to be processed are at least k.  But we can all the array elements with their and do the same process greedily using a single loop. Since we used sorting complexity still will be  43411 gold badge44 silver badges1717 bronze badges  2  This makes sense but isn't there a dynamic programming approach to this solution?  look here expected sequence size is fixed. And you want lex smallest of that size. Any dynamic programming approach i think is high complexity and basically ends up doing what the greedy approach does.  Ankit Joshi's answer works. But I think it can be done with just a vector itself, not using a deque as all the operations done are available in vector too. Also in Ankit Joshi's answer, the deque can contain extra elements, we have to manually pop off those elements before returning. Add these lines before returning.  It can be done with RMQ in O(n) + Klog(n). Construct an RMQ in O(n). Now find the sequence where every ith element will be the smallest no. from pos [x(i-1)+1 to n-(K-i)] (for i [1 to K] , where x0 = 0, xi is the position of the ith smallest element in the given array)  If I've understood the question right, here's a DP Algorithm that should work but it takes .  The last element of the array contains the solution.  This solution will never work. Selecting smallest four is not the intention. Selecting lexicographicaly smallest sequence is the intention. As Example: For input selecting is better than .  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  