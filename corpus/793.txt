 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  My program makes a frequency map of characters (which I store in , surprise surprise, a Map), I am trying to copy each element from this map into a Priority Queue so that I can have a sorted copy of these values (I plan to make further use of the Q, that's why am not sorting the map) , but whenever I try to copy these values , the program executes fine for the first two or three iterations and fails on the fourth citing an "Invalid heap" error.  I'm not sure how to proceed from here, so I am posting the code for the classes in question.  map_charFreqDistribution has already been populated, if I remove the line Q_freqDistribution.push(*currentChar); Then I can verify that the Map is indeed there.  Also , both the Q and the use charElement as the template type , its nothing except the character and its frequency, along with 2 pointers to facilitate tree generation (unused upto this point)  Adding the definition of charElement on request  Definition of Map and Queue  P.S.This may be a noob question, but Is there an easier way to post blocks of code , putting 4 spaces in front of huge code chunks doesn't seem all that efficient to me! Are pastebin links acceptable here ?  78922 gold badges1111 silver badges2727 bronze badges  11  How are types and defined? Creating a new , then passing in the object itself and not its pointer, and finally deleting the looks like a suspicious sequence.  If you never intend to use your default constructor, you don't have to define one. Just use the explicit constructor.  @eran I added the definitions to the main question. The new -> add -> delete thing seems to be JAVA hangover (the language I use at work) but essentially I need a new object to be created each iteration and added to the Queue. (Had a brainwave while typing this , should I not delete the variable as it is being held as a reference in the Queue)  @JaredFriese Thanks for the tip, this is a rough code draft, that method was added as a stub when the code was in an earlier draft, the comment was to remind me to remove it once I am done.  made the change where I no longer delete the object after pushing (I wasn't doing this in earlier drafts of the code either) , it still gives me the same error.  2 Answers 2  Your vector is reallocating and invalidating your pointers. You need to use a different data structure, or an index into the vector, instead of a raw pointer. When you insert elements into a vector, then pointers to the contents become invalid.  Completely throws people off because it's very traditional for people to have huge problems when using and directly, but there's actually no need for it whatsoever in this code, and everything is actually done by value.  You have two choices. Pick a structure (e.g. ) that does not invalidate pointers, or, allocate all charElements on the heap directly and use something like that cleans up for you.  In the above code, you create a new object, then push it, and then delete it. When you call delete, that object no longer exists -- not even in the queue. That's probably not what you want.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  