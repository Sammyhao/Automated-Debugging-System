 Implementation of Non-Preemptive Shortest Job First using Priority Queue  Last Updated : 01 Dec, 2021  Read here for Shortest Job First Scheduling algorithm for same arrival times. Shortest job first (SJF) or shortest job next, is a scheduling policy that selects the waiting process with the smallest execution time to execute next. In this article, we will implement the Shortest Job First Scheduling algorithm (SJF) using a priority queue, so that we can handle processes at different arrival time. Examples:  In this program, the task is to schedule the processes according to SJF scheduling algorithm, which states that the process with minimum burst time will be given priority, which can simply be implemented by sorting the burst time of the processes in ascending order. The problem arises when we have to handle the processes at different arrival time, then we simply can’t sort the processes according to burst time as we need to consider the arrival time of the process so that the processor doesn’t stay idle. Example: If a process with more burst time arrives before a process with less burst time, then we have to allow the processor time to the process that arrived first so that the processor doesn’t stay idle. Approach: To handle processes with a different arrival time in case of SJF scheduling:  First, sort the processes according to the arrival time.  Maintain a wait queue, which keeps the process with minimum burst time at the top.  Maintain the current run time, that is the sum of burst times of the executed processes.  A process enters the wait queue according to it’s arrival time if a new process has arrival time less than equal to the current running time, it is pushed in the wait queue.  A process is popped from the wait queue when it is to be executed. It’s burst time is added to the current run time, it’s arrival time is updated to -1 so that it doesn’t enter the wait queue again.  Below is the implementation of the above approach:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  