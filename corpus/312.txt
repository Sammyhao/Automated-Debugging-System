 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  On standard definitions, your 'union' output is wrong too--there should be no repeated elements.  2 Answers 2  Your implementation of is far too complicated: since your lists are sorted, all you need to do is to find mismatching elements. This requires one loop where in each iteration you move  both iterators if the element is in both sets, i.e. it isn't part of the difference  the iterator for the first list in which case you have an element which is in the first set but not in the second set  the iterator for the second list in which case you have an element which is in the second set but not in the first set  Your implementation of is likewise too complicated and also needs just one loop: it would just store the common value in the cases where no element is stored for . Finally, is, again, too complicated: it would store an element in every iteration, either the common one or the one skipped depending on which branch is taken. This would also yield a correct result.  Obviously, what you really want to use is  assuming you have given your lists and iterators a standard interface.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  