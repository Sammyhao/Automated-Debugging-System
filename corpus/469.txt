 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I want to implement a simple arithmetic expression tree data structure in c++, such that an expression tree object is initialised by: . Here is an example of how it should work:  Here is how my code looks so far:  However, I get this error when I compile the code:  I would appreciate it if someone would help me with this error and possibly provide some tips as to how I should implement this data structure. Btw, I'm very new to c++.  You need to add the template type when you instantiate the object: The next line requires a constructor that can take 2 diffirent types of operands.  2 Answers 2  You use member of pointer -> operator on member variables operand1 and operand2  You need two different types in template arguments to initialize object with different argument types.  Classes/constructors don't autodetect types like functions do. It means that you can not do a thing like . You have ether specify template arguments or use an additional template function to construct the object of ExprTree template class. See this answer.  The evaluates at runtime, so you will get a compilation error because you try to call the method str() and pass the same object to std::string  left of '->str' must point to class/struct/union/generic type  basically says that the left of operator must be a pointer (it is not). (It also say that it must point to a class or similar, not to an integer, for example).  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  