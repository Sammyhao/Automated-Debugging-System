 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Here's the full code. If in the main while inserting elements we run the loop for less than 30 times , it runs . Else it doesn't. Program crashes and give error " Time limit exceeded in online compilers ". I wanted to see the output of all 100 random elements inserted into the list of array. But the program crashes for unknown reason to me.  Here's the main  Here's the insert function  And here's the noobie hash function .  Here's the display one  PS: Please don't judge on my attempt towards hashing. Really a noob programmer. Thanks in advace .  "It works" or "it doesn't" are not useful statements. Please add the following to the post: What you are expecting to happen, and what actually happened  @JesperJuhl I tried some print statements in between to check where it breaks , it prints a few and then crashes.  1 Answer 1  Every time through the loop you set back to before going to the next. So you never get past the second element of the linked list, and it never finds the pointer.  Get rid of the line in the loop, it should just be done once before the loop.  Another problem is that array indexes are zero-based, so you shouldn't add when calculating the hash code.  642k5050 gold badges436436 silver badges542542 bronze badges  7  Another issue: a[100] =>index 0-99; return 1+(rand() %100) =>value: 1-100 ... q[100] would be an overflow.  @Barmar , did what you said and totally understand the logical error. But it still happens idk why. I've put print statements all throughout , it seems it crashes only when an element already exist and we're inserting in list with some elements. **EDIT:**Its Giving "Runtime Error" in online compilers . Though thanks for eye pointing the logical error !!  The problem only happens when a bucket has more than 2 elements in the linked list and you try to add to it. The loop never gets past the 2nd element when looking for the end of the list. So when you have a small number of items, you don't usually get long lists, and the program works.  @Barmar , What if we want to have items ? I do understand its stupid as hash functions are meant to spread data evenly. But out curiosity , what if I want to as I don't know why it's not getting past the 2nd ? Thanks again tho.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  