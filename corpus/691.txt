 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I register a function pointer that takes a string as parameter in the C++ dll that is used to send text back to the C# application. I tried to marshal the string parameter as IntPtr and BStr in addition to others. With the debug build I have no crash. With the release build the data are returned correctly (tested with log to a txt file). However, the C# program crashes with AccessViolationException.  C++:  C#:  Both work in Debug but crash in Release. Why? What is the solution to this problem? Thanks for your help!  The [UnmanagedFuinctionPointer] is not correct, the function pointer declaration in the C++ code does not specify __stdcall. So it is Cdecl. The MSVC++ compiler has a diagnostic for this in the Debug configuration, unclear why it doesn't fire. The other possible flaw is that it is not obvious that the C# code handles the delegate object for the setReceiveFunction() correctly. It must be protected against garbage collection, best done by storing it in a static field.  Thank you very much again for pointing me to the error. It was indeed the CallingConvention. StdCall however did not work. I changed the following:[UnmanagedFunctionPointer(CallingConvention.Cdecl)]. It must be Cdecl.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  