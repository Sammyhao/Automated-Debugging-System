 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm doing an exercise where I have to make a function that does Breadth-First Search and prints out the visited path. But my function wouldn't print anything. What am I doing wrong here?  Note: The matrix is alphabetical order and represents the connection between states.  My expected output: California Arizona Oregon Nevada Utah Idaho Washington  Your "expected output" appears to have seven values. What do you expect to happen by removing ten values from a queue that should contain only seven values?  1 Answer 1  While I won't offer a complete solution, I can help identify some of the issues the code exhibits.  Major issues  Since you have a cyclic graph, it's important to mark nodes as visited during the BFS else you'll wind up with an infinite loop (which is why nothing gets printed in your current implementation). Your queue could be an . When nodes are visited, add them to the set and write a conditional to avoid visiting them again.  The adjacency matrix doesn't appear correct. Since it's an undirected graph, I would anticipate that the matrix would be mirrored from top left to bottom right, but it's not. Also, there are no self-edges in the graph yet Nevada appears to have an edge to itself in the matrix.  There's no need to loop over the adjacency matrix--you can index into it by mapping digit indexes and string names appropriately. If you do need to loop, running to 10 is out of bounds on a 7x7 matrix.  Minor issues  There's no sense in arbitrarily restricting the matrix size. Although the assignment enforces this, it's a poor design choice because the code needs to be rewritten any time you want to use a different input graph.  A matrix seems like a slightly awkward data structure here because it introduces an extra layer of indirection to translate strings into integers and back. Although the project doesn't permit it, I'd prefer using a structure like:  Ideally, these would be objects with vector members instead of strings.  C++ offers and which are preferable to C arrays. I assume they haven't been introduced yet in your class or aren't permitted on the assignment, but if you're stuck, you can try writing the code using them, then re-introducing your instructor's constraints after you get it working. If nothing else, it'd be a learning experience.  Avoid .  Reserve uppercase variable names for class names. Objects and primitives should be lowercase.  Pseudocode for BFS  This assumes the preferred data structure above; it's up to you to convert to and from strings and adjacency matrix indexes as needed.  Since this is an assignment, I'll leave it at this and let you take another crack at the code. Good luck.  30.8k66 gold badges4949 silver badges5858 bronze badges  2  1  Thank you so much! This helps definitely. I am actually glad you didn't just give me the answer. I will go figure it out!!  I have to follow the instruction but I used a set to keep track of visited states and it worked like a charm!! :)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  