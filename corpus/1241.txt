 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Why am i getting TLE in java ? What kind of optimization does it need? Is there any problem with HashMap ?  2 Answers 2  I think that the only possible reason you get a TLE, is that you use a HashMap which uses a string as the key. So, you are wasting some time, when you try to access the HashMap, and the HashMap matches the string you entered to all the keys already in the HashMap. There is no need to use a HashMap. You can simply achieve all this with an array, with the index of the array as the key. I have changed from a HashMap to a array.  Something like this ::  In the loop I start by considering if there are only 2 monsters in the way, and use this solution in case there are 3 monsters, so on.  This significantly reduces the complexity of your program, since now you do not have to match strings. Moreover, here I have used the bottom-up approach here, you can definitely modify the above approach and use the top-bottom approach. Though I prefer bottom-up approach, since we do not make any recursive calls here, which I believe saves some time since we are not pushing and poping the function states from the stack.  EDIT ::  The top-bottom approach::  Here, I return in case there are no monsters, and return case I already have a solution which I computed before.  Your initial call to the function looks something like this (from the ) ::  We do not need the lower index in any case, so I removed it.  You can try any of the above approaches and you will get an AC, I believe. :D  I think that there is a much better and simpler approach to this. Let us say we have an array of positive integers. All we have to do is maximise the sum as said in the question. To do that  Find the maximum value in the array(as long as it is not -1)  Add it to , and change its value and the two adjacent(i+1 and i-1) to -1(so that they are not taken in consideration again).  Store the count of the -1s in the array and continue the loop till or .  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  