 Level of Each node in a Tree from source node (using BFS)  Given a tree with v vertices, find the level of each node in a tree from the source node. Examples:  Approach: BFS(Breadth-First Search) is a graph traversal technique where a node and its neighbours are visited first and then the neighbours of neighbours. In simple terms, it traverses level-wise from the source. First, it traverses level 1 nodes (direct neighbours of source node) and then level 2 nodes (neighbours of source node) and so on. The BFS can be used to determine the level of each node from a given source node. Algorithm:  Create the tree, a queue to store the nodes and insert the root or starting node in the queue. Create an extra array level of size v (number of vertices) and create a visited array.  Run a loop while size of queue is greater than 0.  Mark the current node as visited.  Pop one node from the queue and insert its childrens (if present) and update the size of the inserted node as level[child] = level[node] + 1.  Print all the node and its level.  Implementation:  C++  Java  Python3  C#  Javascript  Output:  Complexity Analysis:  Time Complexity: O(n). In BFS traversal every node is visited only once, so Time Complexity is O(n).  Space Complexity: O(n). The space is required to store the nodes in a queue.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  