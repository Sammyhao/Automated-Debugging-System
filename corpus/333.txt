 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  first post here, it is the first time I need to ask a question myself: I've searched for the answer but I couldn't find it.  I get the error "" in debug mode with Visual Studio 2013. The usual reason for this error is that in a for, the iterators do not point to the same object, or the end iterator gets invalid because of a reallocation during the loop, but here I don't see anything like that...  The error occurs in the copy constructor of my LogicFormula class:  The error is detected at the line:  I made a minimal main function that raises the error:  I hope I gave you everything, and sorry if my english is bad: I'm french.  EDIT: Sorry I forgot to give the function testLogic:  The call to the copy constructor is then made by the  Just for information, , , are enumerated types (declared with enum in the class LogicFormula), capital character things are just constants of these types (that work fine in the rest of the program) and is another class, but I don't think this is important, actually in this test the vector original.children is empty and is NULL... And the error is a runtime error, it compiles just fine...  Why don't you use the initialiser list and let the copy-constructor take care of it? Anyway, you use far too much dynamic allocation.  @PaulMcKenzie: Just use for the types. They seem to be tangential to any issue the OP has. Trouble is, there's no error then.  1 Answer 1  I executed your code (excluding some variables like ,) without any problem. Are you sure the code in is all you have?  The problem may be in this line:  Note that it is not . So the statement will use compiler generated for class instead of using the . The default will bit-wise copy the and instead of looping through the container. The in will be destroyed, so will be the and . So after assignment will have invalid members.  Another problem may be you are not initializing in the constructor. The return value of will be copied using the in which it will try to access .  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  