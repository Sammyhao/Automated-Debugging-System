 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm receiving a quite deep JSON object string from a service which I must parse to a JSON object and then map it to classes.  How can I transform a JSON string to object in Kotlin?  After that the mapping to the respective classes, I was using StdDeserializer from Jackson. The problem arises at the moment the object had properties that also had to be deserialized into classes. I was not able to get the object mapper, at least I didn't know how, inside another deserializer.  Preferably, natively, I'm trying to reduce the number of dependencies I need so if the answer is only for JSON manipulation and parsing it'd be enough.  2,71333 gold badges1616 silver badges2222 bronze badges  3  3  I haven't developed in Java. It's not an error I'm getting. I just don't know how to do effective parsing in Kotlin natively. All searches always lead to a framework. Java has an org.json.simple. Trusting the autocomplete features of the IDE, Kotlin doesn't.  The org.json.simple package isn't native to Java. I guess it's this library: github.com/fangyidong/json-simple. You could use it with Kotlin as well if you want (although the klaxon library that Jason Bourne suggested might be a better choice for Kotlin).  15 Answers 15  There is no question that the future of parsing in Kotlin will be with kotlinx.serialization. It is part of Kotlin libraries. Version kotlinx.serialization 1.0 is finally released  1,87511 gold badge1313 silver badges1212 bronze badges  8  3  The problem I have with this is that you can hardly use it with generics. At least I have not figured out how to do so. And I certainly don't want to use reflection.  KotlinX Serialization is still in experimental phase, so they introduce breaking changes in new releases. Also, it's not thread-safe, so your JSON might get corrupted if several threads try to use a single instance of (it's common). Furthermore, there are several open Github issues with the bug label. So, it's still risky for use in production I would say (unless you're willing to spend time on fixing potential issues and do not plan to update it frequently). The project is indeed interesting especially for Kotlin Multiplatform projects, but it's not stable yet.  I tried this today after two days of stuffing around with other libraries, and it works really well. Polymorphic support and documentation look good too, after collections it's the second thing I always test. Great package @Cedric!  if you are looking at doing multi-platform or want the best performance. you should use Kotlinx serialization below.  Without external library (on Android)  4,35511 gold badge2323 silver badges2727 bronze badges  5  4  So if this does not require any external libraries, that should mean org.json.JSONObject is part of the standard library right?  I guess it's an Android thing? I was looking for it in the Kotlin or Java standard library for the JVM.  The problem with Gson is that it disregards nullability. A property can easily be if it's missing from the JSON. Also, default values are not used at all.  @user3738870 did you find a better alternative? i am frustrated by this behavior of every parser i try  @anshsachdeva Yes, multiple ones, I found moshi the fastest and easiest to use. github.com/square/moshi  This method requires that class must have default constructor without any params. What if data class have params in constructor like below: .  @leimenghao You can do this in one line : val categories = SomeClass(param1 = foodJson.getJSONObject(i).getString("FoodName"),param2 = foodJson.getJSONObject(i).getInt("Weight"))  Works really well. Just to say, you can use instead of . It does the same, and it's quite more visual  I personally use the Jackson module for Kotlin that you can find here: jackson-module-kotlin.  As an example, here is the code to parse the JSON of the Path of Exile skilltree which is quite heavy (84k lines when formatted) :  Additionally, you can use the JSON to Kotlin data class plugin in intellij to generate the data classes for you.  Also you can use Android Studio plugin. File > Settings, select in left tree, press "Browse repositories...", search "JsonToKotlinClass", select it and click green button "Install".  After AS restart you can use it. You can create a class with . Another way is to press Alt + K.  You can use JSON to Kotlin Data class converter plugin in Android Studio for JSON mapping to POJO classes (kotlin data class). This plugin will annotate your Kotlin data class according to JSON.  Then you can use GSON converter to convert JSON to Kotlin.  GSON is a good choice for Android and Web platform to parse JSON in a Kotlin project. This library is developed by Google. https://github.com/google/gson  1. First add GSON to your project:  2. Now you need to convert your JSON to Kotlin Data class:  Copy your JSON and go to this(https://json2kt.com) website and paste your JSON to Input Json box. Write package(ex: com.example.appName) and Class name(ex: UserData) in proper box. This site will show live preview of your data class below and also you can download all classes at once in a zip file.  After downloading all classes extract zip file & place them into your project.  This uses like Elisha's answer. Meanwhile the project is past version 1.0 so the API has changed. Note that e.g. was renamed to . Also it is imported in gradle differently starting in Kotlin 1.4.0:  Example usage:  You can use nullable types () for both nullable and optional fields:  Kotlin's is a class that mainly holds data and has members, and other methods (e.g. destructuring declarations) automatically defined.  If you prefer parsing JSON to JavaScript-like constructs making use of Kotlin syntax, I recommend JSONKraken, of which I am the author.  Suggestions and opinions on the matter are much apreciated!  Kotin Seriazation  Kotlin specific library by Jetbrains for all supported platforms – Android, JVM, JavaScript, Native  After that you can manualy convert that model class to kotlin model class. with the help of above shortcut.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  