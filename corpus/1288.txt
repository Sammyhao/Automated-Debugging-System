 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm trying to unmarshal YAML entries that can be either a string or a list of key: value strings (a map as per Go). I cannot figure out how to get this done sadly. I know I can write my own unmarshaller but that seems to only work with structs.  I have the first part working:  But the entry causes an error now, obviously. How can I get it to recognise both lists and single string entries?  3,22644 gold badges3030 silver badges4949 bronze badges  4  That's not a map, that's a slice. A slice is a list, a map is a set of key-value pairs.  I'm not sure what part you're referring to, but the part I'm referring to is definitely a map (key value parts). -- . I guess you are referring to the entries part, which is a list. Basically my list can contain both maps and strings.  3 Answers 3  This has been answered in various ways before, but long story short it is easy unmarshall into an interface and then deal with both cases  Much simpler than what I was thinking (I was writing an unmarshaller). Thank you!  This is just a followup to the excellent @Benjamin Kadish answer above, but here's a somewhat more complete version and this uses yaml.v3, which makes it just a bit more obvious. Note that the type of the unmarshalled items is instead of in yaml v3.  As, go is static type language, you can't leave only a list item if you convert it to defined struct. It should be key value pair. E.g. () (if you want it empty.)  2,43511 gold badge1919 silver badges3333 bronze badges  2  This just isn't true, it just means the code parsing the yaml needs to be typed properly. The input format should not affect this beyond making it a bit more challenging to parse.  Yes, I thought, you want to convert to your struct. So, if struct is okay, then needs to change yaml :)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  