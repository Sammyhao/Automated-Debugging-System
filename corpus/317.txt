 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am creating a small program that is supposed to sort integers in an array in ascending order, but I am extremely stuck on the algorithm that I am supposed to use. I cannot iterate through the array, I must instead use a recursion function. I am allowed to have an auxiliary function that can find the smallest index in the array, which I have done successfully, but I am having the hardest time figuring out how to use that function to sort my array in the recursion function. Here is the code that I have so far, I understand that my sortIntegers function is way off.  @DixonD, I do not need to use any specific sorting algorithm except that it must utilize a recursion function to sort.  @andayn In this case, both Quick Sort and Merge Sort can be easily implemented via recursion.  Your smallestIndex function does not return the location of the smallest element, it returns the vale of the smallest element.  3 Answers 3  That's my solution based on yours. First of all returns the size of pointer. Second I return the index of the smallest item, not it's value, then I swap it with the first element in list. And then I call the sorting for the list starting with another element (the parameter), because I know that the list up to is already sorted.  3,05533 gold badges3131 silver badges3939 bronze badges  1  Ahh thank you very much, I was wondering how I could find which element in the array was the smallest so I could pass it onto the sortingIntegers function and the answer was so obvious but I couldn't see it. Thanks again.  To sort an array, find the smallest element and swap it to the first position. Then sort the rest of the array, until there is a single element left.  To find the smallest element in an array, take the smallest of -the first element and -the smallest element in the rest of the array, until there is a single element left.  You can use this snippet to sort an array using recursion. It's not difficult you need to think like this way if your array length is N recursion sort N - 1 length array and you have to sort only one element that is N or you can say the last element. I give you an example it will help you suppose you have to sort this array = [50, 40, 10, 30, 20] if recursion gives you array = [10,30,40,50,20] this array you just need to place 20 in a correct position to sort the array.  I wrote this code in java it's not implemented using c++ you can easily convert this logic using any programming language.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  