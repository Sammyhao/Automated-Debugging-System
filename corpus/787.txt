 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  For debugging, I need to see the content of a map ( or ), which the Eclipse CDT debugger does not give me in a readable form, e.g.  What is the best way to inspect the content of a map while debugging?  Do I have to go back to debugging with print-statements? If yes, how would a concise macro or function look like that prints the content of any map as a string?  2 Answers 2  Do I have to go back to debugging with print-statements? If yes, how would a concise macro or function look like that prints the content of any map as a string?  I don't know if you do or not - I don't use Eclipse, but printing a map is very easy:  Then you can just use . Note though that in a large code base there's a chance that someone else will have had the same "bright" idea, so you might want to put your helper function in your own namespace, or give it a more localised name. Things like the choice of surrounding and and separators are arbitrary and may not suit all users - some may want automatic string quoting/escaping etc., so putting this in a global namespace would be dubious at the best of times, and in this case it might even be reserved for possible inclusion in a future C++ Standard or something - after all, it's kind of liking adding your own names into the namespace. Check the Standard if you care.  @cls: you're not getting a match on this template, and that error's coming from another candidate function. If you put this in a different namespace from the calling code, then it won't be found. You could add before the code that wants to use it.  @JoachimPileborg: Seeing in the loop control and separator test has a nice consistency; given C++11 I'd just simplify to . With ranged based for, what would you recommend - , or a separate / ?  374k3333 gold badges376376 silver badges576576 bronze badges  1  This would be the optimal solution. I'd like to try this, but I cannot get a python-enabled gdb to run in Eclipse (see this question: stackoverflow.com/questions/13913818/…)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  