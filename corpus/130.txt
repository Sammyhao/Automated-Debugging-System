 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm messing around with sorting data structures in C++ so I'm writing a bunch of functions to make a binary search tree class. I'm a bit lost when trying to create a copy constructor/function to copy a tree.  Now a few things happen when I try run this. First, it doesn't copy all of the nodes, and will copy a different amount each time. This is strange to me since I'm calling a recursion on every node, since I start at the root and then call it on the left and right. I tried writing out the process on paper, visually planning out how it would copy the original tree but to me it seems like a logical process and can't find where it could get lost.  I also added cout statements in the function to print out the original node's key, address, parent, and children, as well as the copy node's key, address, parent and children. The only problem I found in this test was that the copy node's parent address was always 00000000, or NULL. So apparently the piece of code  doesn't actually set the node's parent pointer to the parent.  These were the only clear issues I could find while trying to fix this. I'm not sure how else to look for the problem. If you can't see any problems in the logic of the code, does anyone have any other ideas of how to find where the problem lies?  The way you have defined creates a call-by-value parameter. Therefore the changes you're making to this variable are never seen by the caller, and what you're getting for the tree copy is junk. You need to make this a reference to the new tree pointer.  1 Answer 1  Your declaration of creates a call-by-value parameter. This means changes to this variable are never seen by the caller. You must make this a reference parameter, so the caller's pointer can be modified. Then recursively copying the subtrees is very simple:  Note the added to the second parameter type. A more common idiom is to use the function return value:  43.7k44 gold badges5353 silver badges9090 bronze badges  1  @Mardo You must pass the parent as a parameter. The initial call's parent is because the root has no parent. I've changed the code.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  