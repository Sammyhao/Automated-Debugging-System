 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  my question is that it uses queue instead of stack, so is it correct?also when i should enter graph,should it be like adjacent matrix or?please help me,this algorithm uses default values,so how can i change it?  1 Answer 1  Sure enough that uses the class from the Standard C++ Library and, as such, implements a breadth-first search algorithm. Using a C++ stack should give you the depth-first search you desire.  Goes to show you can't trust everything you see on the Internet (perhaps even including this answer). :-)  As to your second question, this posted code is indeed using an adjacency matrix. In fact, you can even be more precise and say, by inspecting the code, that it is implementing a undirected graph without parallel edges.  81.7k1414 gold badges161161 silver badges218218 bronze badges  3  so instead of queue,if i use stack,it would be correct yes?and graph i should interpret as adjacent matrix yes?  @dato I have proved that indeed this is a breadth-first search algorithm. See ideone.com/mLl23. The output shows 0 1 3 2 which is clearly a BFS. If it were a DFS it would have been 0 1 2 3. Hope it is useful to you. Try it with a stack instead and see how it goes. :-)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  