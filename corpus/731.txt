 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  's animations system has a custom that allows to define a tree (a blend tree in this case) thorough GUI.  It looks like:  It offers the possibility of creating nodes (states) and connect them (transitions).  Now, I'm developing some graph and and tree structure and I would like to write an editor extension in order to allow my game designer to populate those structures.  I want pretty most recreate exactly an like the one of Mecanim animator (figure above).  My question is: are there any available components that I can use for such a task? Is there any builtin class used for the drawing and connecting boxes and arrow? Or I need to write completely the GUI elements by my own?  37.9k2828 gold badges128128 silver badges182182 bronze badges  8  2  I don't know if this helps you much but by way of example, here is a nice post I use to do bezier lines in my editor windows. It serves as a nice example.  @Jerdak thanks for the link too! I was watching this one out of interest since I'm wanting something pretty similar to the MechanimEditor for my state machines.  Well all i see are lines, arrows and textboxes. So you have a collection of them, you need to write something that can create and store such a collection  @Jerdak: I found a simpler way to draw bezier lines in editor. If you surrond Handles.DrawBezier with Handles.BeginGUI/EndGUI you can draw into an editor window using unity functions. I'll post a snippet soon.  6 Answers 6  I was not asking "for a find a tool, library or favorite off-site resource". I would like to know how reproduce a like graph editor using API or some available components provided by the engine itself (sorry if the question wasn't clear).  Here's my answer:  No, there's isn't an available component usable as is to draw that kind of graph, but it's quite easy to write your own. Here's a snippet with a simple example using draggable GUI.Window to represent nodes and Handles.DrawBezier to draw the edges:  37.9k2828 gold badges128128 silver badges182182 bronze badges  3  thanks for your answer. Have you got what you wanted? I'm also trying to get some simple state machine graph going on thus I'm interested in your finding if you could share them :)  @vexe: no I didn't finish to implement it. I'm working on several different project and this has the lowest priority unfortunately. If you want to collaborate to implement it let me know, we could eventually doing something together.  Spectacular! Amazing how so many tutorials out there are just pure crap. I've been digging for hours, reading 200+ lines long posts, and this simple 30 lines of code solved my problem. Thanks!  You are wrong dude. Everything you see in UnityEditor must have code somewhere. Your MecanimEditor is in namespace UnityEditor.Graphs.AnimationStateMachine.  Extend GraphGUI found in UnityEditor.Graphs. This class is responsible for drawing graph.  Create new EditorWindow.  Create Graph structure. It will contains nodes and edges between nodes.  Draw Graph.  Override NodeGUI or EdgeGUI for more styling and drawing control. Copy paste code from UnityEditor.Graphs.AnimationStateMachine.GraphGUI styling done in NodeGUI and EdgeGUI.  I'll check it . Graphs api weren't exposed at the time of this question was asked. Thanks for the info.  The UnityEditor.Graphs.AnimationStateMachine namespace doesn't seem to exist (unity 5.4)  Edit: I've written a fully functioning Unity graph editor in a GitHub repo. Primarily focused on skill trees. It isn't perfect, but demonstrates what a fully functioning graph editor could look like. Source code in the following link.  You could try making an Object for the data inside of each tree objects. Then you could try using System.Drawing to create a custom control(square boxes in the picture), also use System.Drawing to create those arrows to each tree object. make sure each DataObject has ID's and information for where the arrows should be pointing. If you need help on creating custom controls i have used this tutorial on YouTube in the past.  I find a Unity UI FlowChart Asset from Unity AssetStore, UI Graph developed by Broken Machinery, and it is free to use!  I've done an interface for creating custom graphs using a TreeViewer and checkboxers. Is based on an "adjacency list" idea. If you have the checkbox of the "root" vertex checked, it makes it adjacent to the other vertex, if you just want a few vertex to be adjacent, then you select each one separetaly. I've developed this for java, but I believe it could also work for your purpose. Here's an image that I hope that clarifies my idea.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  