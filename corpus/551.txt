 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am very new to C++ and I am working on creating a program using HashTables. This is for homework. This is the first time I am using and creating HashTables, so forgive me in advance as to I don't know entirely what I am doing. The main problem I am having right now is incorporating my function. I can get the code to compile, but when I run test the program out, it crashes. The error that I am receiving is  list iterator is not decrementable  I am basing my remove function off of an insert function my professor provided us with. Just changed a few things around. Here is my class and my function.  Also, your object being local to the function -- is that just a copy/paste error into your question? That object obviously will have no contents.  3 Answers 3  Use rbegin and rend to get reverse iterators if you want to traverse list backward (if you need this, yes - sometimes it might be better, faster: depends on context):  22.5k77 gold badges4747 silver badges6060 bronze badges  13  oops, I forgot to change that around. I was trying something else. But even when I put List.begin() first, I still receive that same error  ok, awesome! i tried that and it works, but I just feel as if with this code, I am not removing anything.  @bobGlenn you should not remove from your local List, but should remove from the List member of the class.  with the code I have right now with the pop.back(), i am removing from my local list?  Since you are removing from your list by finding an exact value, it's easier to let the standard template library help you.  For C++98, create a predicate object that will check for equality of your objects:  In C++11, you can do this even easier using a lambda:  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  