 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  This function uses a pointer to pointer to represent the head of the binary tree. I came across the same method on many tutorials and websites. I wanted to know why everyone insists on using pointer to pointer and why not just 'node * tree'. I presume even pointer to head of tree would do the job just fine, and using just pointer to head of the tree the recursive calls would be as follows (please correct me if i am wrong):  or  Please correct me if my understanding is wrong. I am a newbie. Thanks.  3 Answers 3  Remember that in C arguments are passed by value, that means the value of the expression you pass as argument is copied into the function. So if you change an argument inside a function, you change only the copy and the change will not be visible to the caller (i.e. the change is lost).  To overcome that problem, you can simulate pass by reference by passing a pointer instead. And if you want to change a pointer, you have therefore pass a pointer to the pointer.  If you look in the function, you will see that it assigns to the pointer when is (i.e. there is no node). That would not work if you didn't pass a pointer to a pointer to the node.  374k3333 gold badges376376 silver badges576576 bronze badges  4  if we had passed pointer to the head i.e. node * tree, we could check for null pointer as tree != NULL , isnt it??  @CodeWithPride I added a small and simple example to my answer to show the difference.  That's because the can be empty (). In this case, you can set the outside pointer to make it point to the new root.  1. Pass by value = creates a copy of the value. any change to the value will be lost once the function terminates.  2. Pass by reference = doesn't create a copy but is pointing to the value being passed. If there are changes happen, then the value will change.  Double pointer (**) point to the address of a single pointer(*). Therefore you need to use double pointer in order to change the value (address) of the single pointer if you pass it to a function. Otherwise, theres no change.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  