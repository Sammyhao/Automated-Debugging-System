 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I want to know what are the cases in which BFS and DFS produce the same tree from a graph rooted at any node. I know one of the cases is when the graph is already a tree. Is this the only case?  Is it dependent on the way you choose the neighbors of a node? What are some ways that the order of picking the neighbors will make it the same?  1 Answer 1  First, before delving into a direct answer to the question, I want to take a slight moment to explain DFS and BFS. This is for anyone reading who may not know what "breadth first search" and "depth first search" are.  DFS: Depth-First Search is a tree-traversal algorithm that starts at a root node and explores as far along as possible for each branch before backtracking.  BFS: Breadth-First Search is a tree traversal algorithm that starts at a root node and explores all vertices at the current depth-level before moving on to explore the vertices at the next depth level. This is a top-down approach to create a tree.  Now, onto the question.  I know one of the cases is when the graph is already a tree. Is this the only case?  You are correct in saying this is one of the cases where BFS and DFS of a graph produce the same tree. To be more explicitly clear, when you state that the graph is already a tree, you're hopefully referring to a graph that has one of the three following properties:  A graph with a maximum breadth of 1  A graph that resembles a singly linked list  When you state the tree has to be the same, if isomorphic trees are regarded to as the "same" by your definition, then any graph that is already a tree (which may also be what you're referring to in your question) will produce the "same" tree for BFS and DFS. Of course, there must be no cycles within the tree, or the graph will result in different outcomes for BFS and DFS.  In all three of these instances, the DFS and BFS of the tree will be the same given that you start at the same proper root node for both traversals. These are the only cases that I know of. However, in some instances, there are other means of obtaining the same tree for DFS and BFS traversal of a given graph if you have the freedom to determine the order you can select "neighbors" of a given node. This leads to the second half of your question...  Is it dependent on the way you choose the neighbors of a node? What are some ways that the order of picking the neighbors will make it the same?  Yes, it is dependent (if this question means what I really think it means), because if you have the freedom for this, then there are instances in which the order of picking neighbors will make it the same. For example, having a tree in which there is at most only one child that also has children, you can obtain the same BFS and DFS by traversing the nodes without children first in the DFS traversal of the graph.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  