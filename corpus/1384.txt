 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  A dynamic programming problem has optimal substructure and has a solution that can be described by a recurrence relation.  A sorted list is the addition of an element to an already sorted list, so Insertion sort thus has optimal substructure. The recurrence relation could be described as  So why isn't insertion sort considered a dynamic programming algorithm? I understand how it is applied in Fibonacci numbers and in edit distance, but not really beyond that.  No, according to me, if it's computer science, not computer programming, it belongs in cs.stackexchange.com. This is a conceptual question, not a practical programming question.  This is a perfectly fine question to ask. Programming begins with algorithms; otherwise, if you're coding without understanding, then you are just a replaceable code monkey.  Perhaps because nothing that was well understood BK (ie Before Knuth) is considered worthy of the moniker Dynamic Programming.  1 Answer 1  A given problem can be solved using Dynamic Programming (DP) if the problem has following two properties.  1) overlapping sub problems (osp)  2) Optimal sub-structure (oss)  Even though insertion sort algorithm has optimal sub-structure property, it does not have overlapping sub problems property. A bit elaborated explanation is as follows..  In, Fibonacci numbers calculation case, we are clearly having the above mentioned two properties.  osp : fib(5) calculation has fib(3) as its subproblem. At the same time, fib(4) calculation has fib(3) as its subproblem. But fib(5) = fib(4) + fib(3). If we blindly calculate fib(5) with out DP technique, we end up calculating fib(3) twice (one for fib(4) and one for fib(3) itself). Here, one of the overlapping subproblems is fib(3)  oss : In the same way, if we can calculate the solution to fib(4) and fib(3) optimally, then the solution to fib(5) as well can be calculated optimally. Because fib(5) is simply a sum of fib(4) and fib(3).  Now, let us try to check whether these two properties exist in insertion sort or not. Let us say you are sorting an array of numbers {5, 2, 3, 1}.  osp : According to the recurrence that you are thinking the subproblems will be as follows..  {5, 2, 3, 1}  {5, 2, 3}  {5, 2}  {5}  If we observe closely, we can see that there are no two subproblems which are similar. That means the overlapping sub problems property does not exist.  oss : If we can sort an array of size (n-1) optimally, then we can as well sort an array of size (n) optimally. So optimal sub-structure property exist.  In summary, insertion sort algorithm does not have overlapping sub problems property. Hence it is not a DP solution.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  