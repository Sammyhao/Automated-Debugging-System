 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  This is a very basic question, I'm just not that good with Java. I have a Map and I want to get a list or something of the keys in sorted order so I can iterate over them.  4 Answers 4  Use a , which is an implementation of the interface. It presents its keys in sorted order.  If you are working with another Map implementation that isn't sorted as you like, you can pass it to the constructor of to create a new map with sorted keys.  A works with any type of key that implements the interface, putting them in their "natural" order. For keys that aren't , or whose natural ordering isn't what you need, you can implement your own and specify that in the constructor.  254k5353 gold badges378378 silver badges475475 bronze badges  4  The code I'm consuming gives me a Map object, so how do I then convert it into a TreeMap or use a TreeMap to do the sorting?  You can create the TreeMap using a constructor whose parameter is any Map. Also, congratulations erickson (I assume, since you're only 5 rep away from 10k).  You would better off sorting keys (place in a TreeSet) then calling get on the original Map. Creating a new TreeMap results in everything getting rehashed.  Steve, that's incorrect. No hashing occurs with a TreeMap; it's a red-black tree. Anyway, a TreeSet delegates to an internal TreeMap, so creating a TreeSet, iterating over its keys, and using them to perform an O(log(n)) lookup in another tree would be confusing and inefficient.  You have several options. Listed in order of preference:  Use a : This is vastly preferable if you want to iterate more than once. It keeps the keys sorted so you don't have to sort them before iterating.  There is no #2.  There is no #3, either.  The last two will get you what you want, but should only be used if you only want to iterate once and then forget the whole thing.  182k4444 gold badges281281 silver badges291291 bronze badges  5  In step #4, you could also create a TreeSet (a sorted set) instead of a list, which saves you from making an explicit call to sort().  @David: I did think of that, but for some reason I forgot that it was possible to iterate over a Set. It does require sorting every time, though.  hmm i like the #4 . why does it require more sorting than #1 ? i would have thought it was equally good  @litb: If you're dumping the map into a TreeMap every time you want to iterate over it, then you're right, they are the same.  #4 isn't as good as #1 if you need the values from the map too. Iterating over entries saves the extra lookup for the value.  You can create a sorted collection when iterating but it make more sense to have a sorted map in the first place. (As has already been suggested)  Apart from the methods mentioned in other answers, with Java 8 streams, another shorthand to get a sorted key list from a map would be -  One could actually get stuff done after as well (like using a or a ), instead of collecting it in the list and then iterating over the list.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  