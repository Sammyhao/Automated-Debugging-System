 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I tried to debug it on 2 IDEs - CLion (my personal favorite) and VS2015. However, both of those did not show the queue items (as they would if I'd use an array, for instance):  CLion  VS2015  As I continued investigating, I noticed that if I remove the upper breakpoint in CLion, it does show the queue elements:  CLion - good version  Any ideas about why does it happen, and if there's a way to see the queue elements in the "bad" cases?  4 Answers 4  Removing the upper break point and switching between 32 and 64 bit compilations won't affect this. The 32/64 bits have to do with the generated assembly code. Once the code compiles correctly, the 32 and 64 bit assembly codes won't be the same but the program itself will still retain equivalent functionality. That is, 64 bit programs can't "do more" than 32 big programs. This is an ultra watered-down definition of Turing-completeness, but the upshot here is that it doesn't matter for the purposes of what you're trying to do right now whether you set your build target to 32 or 64 bits.  The IDE that you use will have a minimal effect here though, because they use different Debuggers. Since both debuggers did the same thing in your case, I'd say we can safely chalk it up to user error (see below), but like I said in my afterword, if you will, keep working with the debugger. It's an absolutely essential skill to master. Props to you for getting started early.  As for your debug problem, here is my debug of your program. Notice the breakpoints I used. Like Jesus Christ said before me, the debug worked correctly for both of us. The usual suspect in these cases is trying to debug the release build. When you compile a debug build, the compiler does not perform as many optimizations to allow you to trace your code through the variables and see exactly what's going on. Once your code functions correctly, you can switch to the release version and your compiler will optimize away a lot of the variables for maximum performance.  If you did debug under the Debug build as you said, then I'd say just chalk it up to debugger error. If you're a C++ newbie, there's a chance you just might not be experienced enough to navigate the intricacies of the debugger. No disrespect intended, but debugging is just as much an art as it is a science, and a new developer would not be faulted for not knowing how exactly to maneuver the tool.  I found a solution for the CLion problem - simply press on the variable in the variables tab, then press on (marked in red circle bellow, hotkey: ) and you're done:  Did you compile with debug selected in the project? I can clearly see queue values.  Here is what I did. Copy pasted your code. Put a breakpoint at that place. Debug->Start with debugging  1) you are debugging Debug build (that is debug information is present and no optimization is done)  Project Properties -> C/C++ -> General -> Debug information format is set to "Program Database"  Project Properties -> Linker -> Generate Debug info is set to "/DEBUG")  2) raw structure mode is disabled  Tools -> Options -> Debugging -> Show raw structure of objects is not checked  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  