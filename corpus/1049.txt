 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I need to code a quick sort algorithm in C as homework. This is the prototype I was given:  where is the pointer to the first element of the array and , the pointer to the last element (excluded). I wrote the following code:  I am running 3 kind of tests: one on a sorted array, one on a reverse sorted one and, one on reverse sorted one. the first test works well, but the second and this ones fails. Basically meaning the functions doesn't work. I can't find any documentation on what I am supposed to do since all quick sort algorithm uses its length instead of a pointer on the last element and I couldn't adapt the ones I've found to my representation. What is going wrong here?  EDIT:  My new partition function now looks like this after the comments:  Normally, you would use the leftmost element as the pivot. If you choose to use the middle element as the pivot (to handle presorted lists better), you would swap it with the leftmost element before partitioning. It seems like you learned this at some point because I see at the end of the partitioning function, which only makes sense if the pivot were the leftmost element. Edit: in the code you linked to, the pivot is the leftmost element ().  After taking another look, your partition function has quite a few problems. You are comparing pointers instead of comparing values: should be . But better yet you should keep the pivot value in a variable, .  Thanks for your answer but this is not how I'm supposed to do it. The quick sort function must take a pointer to the first element and the last element (excluded) of the array.It is explicitly written in the question.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  