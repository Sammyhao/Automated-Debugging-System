 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  (In python 3.6) How do I output a list of the dictionary keys in which the order of the list is based on the dictionary value dependencies? For example, if I have a dictionary of software programs with values that indicate other programs upon which it is dependent:  I would return a list with each item ordered based on the programs necessary to install. So I would install 'timestmp' before 'R3'.  For a non-recursive solution, I was thinking of doing a tree with children, and identify the parent, then you could traverse the tree. But apparently, there is a recursive solution, and I cannot figure it out.  2 Answers 2  In the field of computer science, a topological sort or topological ordering of a directed graph is a linear ordering of its vertices such that for every directed edge uv from vertex u to vertex v, u comes before v in the ordering.  In your particular case the vertex of the graph are the packages and the edges are the dependencies. You can solve the problem using Kahn's algorithm (no recursion), an implementation below:  Output  Note  For the proposed solution to work it needs the reversed graph, that is what the following lines do:  Also note that the order is not unique, for instance in your example both and could be the first package to install, given that they don't have any dependencies.  Further  A discussion of Kanh's algorithm along with implementations: topological sorting.  A recursive solution can be done using (a recursive) Depth-First Search (DFS) to solve the topological sort, you can find a good discussion of a recursive DFS here.  For using DFS for solving Topological sorting see this.  54.3k66 gold badges4141 silver badges6464 bronze badges  1  This solution fails if there are no dependencies, as you can verify by setting (it returns an empty list).  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  