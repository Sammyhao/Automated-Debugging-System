 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I've created a class that contains a vector of Linked Lists. Each Linked List represents a vertice in my graph. The Nodes connected to my linked lists are considered the edges between these vertices. I'm trying to create a DFS function for my graph, but am having trouble with setting the colors of my vertices. I realize there are a lot of problems with my code, but i'm trying to solve one in particular. My DFSit() function ends up in an infinite loop because the color attribute for my list isn't actually getting set to "gray". Any idea why this would be?  44522 gold badges1111 silver badges1818 bronze badges  2  DFSit is passed a COPY of the item so changes to it are put into the copy - not put into the real one. You need to pass a reference or a pointer to the item instead.  How would I turn myvector[i] into a pointer? Would I need to set it to a pointer variable first, then pass it through?  1 Answer 1  Normaly, the proper implementation of the DFS rutine is made with a stack, but this could work also. I think that you are coloring the node and this coloring is not save because you are passing it by val and not by ref. try changing into  if the you are still having problems with you implementation you can review the DFS implementation in the link and compare it to your implementation.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  