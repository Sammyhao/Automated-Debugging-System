 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am a "bit" lost trying to print a binary tree like below in c++:  I know how to get the height of the tree and the number of nodes in each level, but I couldn't figure out how to set the right number of spaces between the root and the second level (there are 3 lines under the root for 3 levels but I believe it is not this everytime,I thought it could be 3 times the height for greater trees).  I would like to have some help to print these spaces in the rows and the number of lines between the rows.Thank you.  I'd like to print it in the level-order,but I wanto print like a mentioned in the post, with the "/" ,jumping line and so on...  4 Answers 4  Even tough it is not exactly what you asked for, printing trees horizontally is way simpler. And especially in case of large trees, I think this is the better representation form.  To be clear: I translated a java implementation reaching back to the user VasiliNovikov. This was his idea.  Here is an example of code creating a text-based representation of a binary tree. This demonstration uses a minimally useful binary tree class (BinTree), with a small footprint, just to avoid bloating the example's size.  Its text-rendering member functions are more serious, using iteration rather than recursion, as found in other parts of the class.  This does its job in three steps, first a vector of rows of string values is put together.  Then this is used to format lines of text strings representing the tree.  Then the strings are cleaned up and dumped to cout.  As an added bonus, the demo includes a "random tree" feature, for hours of nonstop entertainment.  Thank you Christopher. I think there is no easy way for this problem. I almost got a quick solution using queues but I couldn't figure out the intern distances.  I was surprised at how involved it turned out to be, but I was interested in seeing it finished because I have wanted something like this on several occasions in the past.  @ChristopherOicles. could you please mention the compilation dependencies? using -std=c++11 flag throwing a lot of warnings+errors in my windows system.  @Debashish You probably have an old version of gcc which doesn't fully support c++11, it probably lacks the library and may not support for typedefs.  Can anyone please simplify this code which consist value of "int" data type not template, also no need for generating tree from random values. I am a beginner and it is little complex for me, i just want to understand the logic. @ChristopherOicles  I wrote arbitrary tree pretty printer as a part of C++ algorithms self-education.  The approach is following.  From each tree node printable node with stringified original node value and absolute position in the line composed.  Sibling printable nodes grouped. Each sibling group contains list of nodes and pointer to parent printable node.  Sibling groups grouped to lines, each line represents original tree level.  Next, printable nodes position are calculated.  Lines iterated through skipping first one.  Siblings in the line iterated, each sibling group moved to its parent node center if the center is further then the middle of the group. It moves even further if intersected with previous siblings group. Parent node moved to the middle of the children nodes if the middle is further than parent center. Nodes following parent node are shifted if intersected with shifted parent node.  Previous step repeated for siblings group parent siblings group recursively.  For the last step lines iterated once again to be written to the provided output stream, filling with spaces offsets according to the calculated nodes positions.  Unix box-drawing symbols are used to draw lines. Not sure if they will be printed correctly in Windows cmd, maybe they should be replaced by their DOS counterparts for Windows.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  