 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Hi I've recently worked with DirectX9 and I've came across this error. Although it has nothing to do with DirectX. Here is what I have.  When I run this it gives me a runtime error which says this.  but when I take this line away the error goes away. Why does this happen and how could I fix it. Please help.  you created a single object and accessing like an array. Thats is the problem. use this for creating a array(size 3) of objects D3DVertex *TestShape = new D3DVertex[3];  1 Answer 1  That's what the problem is, you don't have an array. You have a single object.  Create an array:  Now you have 3 objects of type .  The important point to remember is that pointers are NOT arrays. The only time you will get a pointer is when the array has decayed into a pointer when you passed it as an argument to a function. Then you get a pointer to the first element in the array.  Even better would be, to use a and not worry about dealing with pointers.  You can access your vector using for unchecked access or for bounds checked access  If you want to go through the vector and look at each element:  58.8k6262 gold badges232232 silver badges398398 bronze badges  9  Okay, I'm starting to understand but if I created a vector how could I take out only the array from the vector?  Okay that tells me how to get an element from the vector but what if I wanted to return a whole array from the vector. Like what if I had more than a 1000 elements in an array and I didn't know how much I actually had (I know you how can you find out).  I am trying to make this work. D3DVertex f[]; f[0].x = ?; but obviously I need a constant for the f[] but what if i was reading from a file and i wanted to put that value in the f[]  okay so if I was to use this function 'memcpy' and i had a vector with 10 elements in it vector<D3DVertex> thisx; could I just do this memcpy(?, thisx, ?)  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  