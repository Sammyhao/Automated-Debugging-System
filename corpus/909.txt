 Longest Subsequence such that difference between adjacent elements is either A or B  Last Updated : 20 Dec, 2021  Given an array arr of size N, and two integers A and B. The task is to find the length of the longest subsequence with the difference between adjacent elements as either A or B.  Example:  Input : arr[]={ 5, 5, 5, 10, 8, 6, 12, 13 }, A=0, B=1 Output : 4 Explanation : Maximum length subsequence is {5,5,5,6}  Input : arr[] = {4, 6, 7, 8, 9, 8, 12, 14, 17, 15}, A=2, B=1 Output : 6  Approach: On taking a closer look at the problem, the problem is similar to Longest Consecutive Subsequence. The only difference between them is now we have to count for the elements with differences A or B instead of 1. Now, to solve this problem, follow the below steps:  Create a map, which will store each element as the key, and the length of the longest subsequence ending with arr[i] as the value.  Now, traverse the array arr, and for each element arr[i]:  Search for arr[i]-A, arr[i]+A, arr[i]-B, arr[i]+B in the map.  If they are present find the maximum of all and +1 in that to get the maximum length of subsequence.  Find the maximum value in the map, and return it as the answer  Below is the implementation of the above approach.  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  