 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am new to C++ and I found this code in a tutorial. I am perplexed to find double stars instead of a single star used for defining a pointer. Is this a substitute for two dimensional array? If yes how?  6 Answers 6  Yes. That is two-dimensional array: more precisely, pointer to pointer!  And you've to deallocate it once you're done with it. This is how you've to delete it:  It's good that you're experimenting with it. It would be also good if you also get familiar with and experiment with it as well.  Example of  That is, if you use , then you don't have to worry about allocation and deallocation of memory!  336k109109 gold badges640640 silver badges824824 bronze badges  4  hi nawaz, what exactly is std::vector? and how can i utilize it? can u give me a sample code? thanks for replying buddy!  @Frustrated Coder - I find that mastering the standard libraries to a language is hands down the easiest way to learn a language. You're on the right track!  Just a caution - C++ has something called multi-dimensional arrays, and this isn't one of them. A vector of vectors, and an array of pointers to arrays, can both represent a two-dimensional array, and both allow the syntax, but that isn't C++'s name for them.  means it is a pointer to a pointer. This is often used to represent a two-dimensional array. In you program -  is pointer that points 10 memory locations that can hold . And when you say, you are actually dereferencing to location. So, it holds an not an . Also, there is a overflow since the number of locations points to 10 but not 20 memory locations.  Edit 1: OP has edited the program. It's not the same as was earlier.  Now, the program is fine, with exception of returning resources back to free store.  is a pointer to pointer. So, a should hold the address of a pointer or an array that can hold address of pointers. So,  holds the beginning address of an array of pointers whose size is . Now this is still wrong.  With that correctected -  Now each pointer is pointing to 20 int locations. So, there are 10*20 elements in the array.  This diagram of a 2*3 dimensional array should give you an idea. Also, you should consider @Nawaz answer of deallocating the array, since resources are managed by programmer.  The first thing you need to know is the difference between a pointer and an array in C and C++. An array is size consecutive cells of sizeof(type) data. A pointer is a variable that contains an address. The confusion comes from the fact that a pointer is used to store the address of the first cell of a dynamically allocated array (malloc in C, new [] in C++).  So, what is the difference between and ? array is a memory area of the size of 10 ints and pi is a variable which contains the address of an int.  To declare a two dimensions array you can type : or you can declare a "pointer to pointer" such as . Don't forget that id you use the second one, you will have to allocate both the first (an array of pointer) and the second (your actual array of ints) dimensions.  To create a 2D array, you can either create an array of arrays (this results in a jagged array), or you can create a 1D array and reference it in such a way that it's like a 2D array (this second method is kind of awkward).  10.4k33 gold badges4444 silver badges8282 bronze badges  2  why is it required to do delete[] A[i] before delete[] A...what exactly is deleted when I do delete[] A[i]. Suppose i did delete[] A[1];?  @Frustrated Coder - The sample diagram I posted should answer the question. If you do only first row is deallocated and rest stay there.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  