 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  In Oracle, I would sometimes like to create constructs such as these ones  Obviously, I can declare my own types for the above. I can choose between and . For example:  In this particular case, another solution is to write things like  But I may have more complex examples where I will really need a / type. So what if my SQL is running on an unknown system where I cannot create types because I may not have the necessary grants?  So my question is: Does Oracle know "anonymous" / types that are available on any Oracle instance? Similar to Postgres / H2 / HSQLDB's simple types?  UPDATE: I am mostly running this SQL from Java, if this is relevant. No need to explain PL/SQL to me, I'm really just looking for anonymous SQL array types (i.e. "anonymous" standalone stored types). If they don't exist at all, the answer is NO  @Rene: "My SQL is running on an unknown system where I cannot create types", so I cannot use PL/SQL, as I may not be able to create the necessary types / functions... unless you mean anonymous PL/SQL blocks? How would you solve this generally, then?  3 Answers 3  Providing you're not scared of explicitly referencing the SYS schema there are a few. Here are some I use quite often (well not so much, as it chews up a lot of memory: for strings I prefer ).  However, if those aren't sufficient for your needs run this query to find some more:  Of course, this result will vary from database to database. For instance a lot of the colllections on my database are owned by XDB and not every system will have that installed. The four I listed at the the top of this answer should be available on every database since 9iR2 (and perhaps early) although they are not always documented in earlier versions.  "Note that ALL_COLL_TYPES seems to be an even better dictionary view to find appropriate types"  That's a good point. We can also filter on COLL_TYPE to winnow out the VARRAYs. That view was introduced into 10g whereas ALL_TYPES was available on 9i. As with most things Oracle, the later the version the more functionality it has.  140k1919 gold badges160160 silver badges271271 bronze badges  3  That is a quite interesting approach. Not what I had in mind, but definitely clever! :-) Note that seems to be an even better dictionary view to find appropriate types (you can filter on for instance...  accepted answer: Short of true anonymous types, I guess this is as good as it gets. Thanks!  I have added a query and its results here to document what I get when querying for ...  SQL table and varray types  An interesting solution was given by user APC here. For future readers of this question, it may be interesting to see that this query provides what I'm really interested in:  Resulting in (in Oracle 11g):  It looks as though and will be the best match for my needs.  PL/SQL indexed array types  If using Oracle 12c and PL/SQL, there's also the possibility to use any of the types, which can be unnested using the constructor. There are:  Your question is very general - basically you can use these ( / ) without an explicit in anonymous PL/SQL blocks like this:  67.8k77 gold badges106106 silver badges137137 bronze badges  7  I can see how it can be done with PL/SQL. But when calling the statement from Java, is an anonymous PL/SQL block wrapper around the actual SQL statement really the best solution? Instead of a simple SQL statement, I'd then have to prepare a call and probably register a parameter to return the results...?  @LukasEder your question is extremely general... and I don't know of any "best solution" in programming - it all depends on what you want to do... you asked whether these can be used without privilege - and that's what I answered... I don't see anything wrong with having to prepare a statement - I would even say that preparing a statement is in most cases recommended... please say what exactly you want to achieve...  The question is quite clear. I'm looking for anonymous array types. If it doesn't exist, then the answer is simply NO. You're making too many assumptions about a hypothetical problem I might have :)  PL/SQL and types cannot be used in SQL anyway (except with constructs such as ). So this is also true for SQL types?  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  