 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I wanted to make a simple linked list class and other data structures in C++ to get used to object oriented programming. After editing my old C code I had something like this (I have just included one of the functions):  Which is used like:  Which all works perfectly. The problem is that the C++ OOP-style uses methods instead of functions like . The problem is that my code works with pointer-to-pointers and even pointer-to-pointer-to-pointers (see ). If I use methods I will need to do something like:  This however makes ugly code and is prone to memory leaks. There must be a better way to do this with methods but I really can't think of anything. I tried to make methods for pointers, but that is illegal in C++. Could you guys educate me on how proper OOP-style deals classes like mine?  Why not use or and let the stdlib do the hard job?  – user529758  Jun 20 '13 at 17:56  1  A combination of getting familiar with OOP and studying data structures. I have to know what's going on under the hood :P  @MadPidgeon: A list is not complicated enough to get used to OOP. There's no need to inherit, use virtual functions, and so on. Try something more complicated. Computer game, perhaps. On other hand, you don't seem to know about "rule of three", so you should read about it.  1 Answer 1  The problem you've encountered stems from the fact that your class is really a single node in a linked list, rather than the whole list, so it doesn't make sense for it to have an method. You'll notice that this was actually the case in your non-OOP code as well - the function acts not on an object, but on an object (here just a pointer) that has a reference to an object. This suggests the solution to your problem: rename your old class to and create a new class with a pointer to a that is the head of the list and on this new class implement the  I don't understand your code. Which one is the llistnode and where do you keep the ?  Thank you so much for this answer. I really should have seen this. I have a small question though: Say I want to iterate through the list and insert nodes in the list. How do I do that? In this code I can only add nodes at the beginning. Or at least, am I not missing something?  Remember that for a linked list, in order to insert a new element at a position other than the front (or back, if the list were doubly-linked) you need a reference to the node directly before the position you would like to insert at. So, it makes sense to add an method to the node class which does this.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  