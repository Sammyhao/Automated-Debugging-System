 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm not too familiar with exception handling so could someone help me with this problem?? So for this program, incase of a non-existing key in the std::map, I want to throw something but I dont know what.  the map key if it exists will be a phone number (string), but if it doesn't exist what would it be??  What is the type of ? That's what you need to catch. Not that it really matter in your case, since it will always be equal to . I suggest you use one of the standard exception classes, perhaps making up your own based on a standard class.  Also for your information: While using exceptions have a negligible impact on performance if no exceptions are thrown, exceptions in C++ do have a sizeable impact on performance if you throw and catch one. Exceptions should only be used in exceptional cases. Failure to validate user input is usually not such an exceptional case.  I think this is a bad example of exception handling. You don't need try-catch block here at all.  What if I have fat fingers and type in a bad phone number? You're going to throw an exception for that situation? Humans typing in something wrong is not an exceptional case, as the previous comment pointed out.  Although this could be done in a much simpler way the specs for my assignment tell me to do so. I guess my professor wants me to get used to exception handling. I honestly dont know when to use it and what "exceptional cases" refers to in this context.  2 Answers 2  Rule of thumb - you always throw a derived class of , if not stated otherwise by some style guide. You can use already defined common exceptions, like . And pass error data as exception argument, that's the whole point of exceptions - propagate the error data.  And always catch by const-reference.  In your case you might simply do:  In your case you can throw an iterator, and catch like this:  I'd say that in this particular situation you don't need to throw any exceptions. The name of the function, from the reader standpoint, probably means that the only responsibility of the function is to check whether or not there's a such element in the map. Returning value by an exception is a very strange (and inefficient) way. Here I would use - it returns if such value is in the map, and otherwise.  If you really need to throw an exception in case of abscence of value, look at . It throws an exception if the key is not present.  For more info on and other methods of retrieval information from please see this.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  