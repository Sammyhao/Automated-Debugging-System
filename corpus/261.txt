 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  What is the best way to convert a JSON code as this:  in a Java Map in which one the keys are (field1, field2) and the values for those fields are (value1, value2).  Any ideas? Should I use Json-lib for that? Or better if I write my own parser?  106k3030 gold badges196196 silver badges232232 bronze badges  5  45  Moreover, if you want a typed Map (exploiting java generics), you can do : Map<String, MyPojo> typedMap = mapper.readValue(jsonStream, new TypeReference<Map<String, MyPojo>>() {});  If you work with Maven project, you will need <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> <version>2.4.4</version> </dependency>  @obe6 I guess the OP is not joking. Can you find a single "JSON" anywhere in your code snippet other than that arbitrary variable name? I'm struggling too because of the names in Jackson API.  FWTW, while @obe6's answer is technically correct, you can use shorter form too: .  With new TypeToken<Map<String, Object>> it will work also when there are arrays inside.  3,25433 gold badges3131 silver badges3636 bronze badges  2  19  This can throw NullPointerExceptions 5 different ways if you get unexpected data.  My post could be helpful for others, so imagine you have a map with a specific object in values, something like that:  To parse this JSON file with GSON library, it's easy : if your project is mavenized  Then use this snippet :  The corresponding POJO should be something like that :  Yes, but you must wrap every single ´get´ in try/catch because of JSON exceptions.  With google's Gson 2.7 (probably earlier versions too, but I tested 2.7) it's as simple as:  Which returns a Map of type and works recursively on nested objects.  2,56444 gold badges2424 silver badges3333 bronze badges  1  I get back from a simple JSON string where one of the values is an array of strings.  JSON to Map always gonna be a string/object data type. i have GSON lib from google. Gson library working with string not for complex objects you need to do something else  Underscore-java library can convert json string to hash map. I am the maintainer of the project.  If you need pure Java without any dependencies, you can use build in Nashorn API from Java 8. It is deprecated in Java 11.  JSON to Map always gonna be a string/object data type. i haved GSON lib from google.  works very well and JDK 1.5 is the min requirement.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  