 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  So i want to make a code, that creates a binary tree, that holds data, for example ints like 1,6,2,10,8 and on pop i get the biggest number, and after that it gets deleted from the tree, and on push i can insert a new element. And this should be in a template so i can easy change the data type i want to hold in the tree. Now i got the tree so far, without template it is working fine thought, i can add items, and i can print them, but when i try to put it in a template, i get the following error: use of class template requires template argument list . What could be the problem? Maybe i am doing it totally wrong. Any suggestions are welcome.  This was my first question it got fixed by avakar ty. (i will post the code at the end of my question)  I just read trough the project request , and its like, i have to make this thing i above in the first part of question described, but its like the binary tree should represent a priority queue. And that is why in the request is written that i have to use push to put a new element in the tree by priority order and with pop i will get the element with the highest priority and then that element will be deleted. So how could i use my Tree as a Priority queue, or is he already one(i think not but who knew)? I hope i could explain it.  83933 gold badges1515 silver badges3636 bronze badges  2  I'm sorry, but I'm voting to close this question. Feel free to repost any specific problem with your code or question about BSTs as priority queues.  Hmm... the C++ standard library implements a priority queue as a heap rather than a tree. I suppose a self-balancing tree can also serve the same purpose, though the tree has the extreme elements in the leaf nodes and not at the root.  2 Answers 2  If you want to use the binary tree as a priority queue, you extract the maximum element by stepping only through right child pointers. Any left child would be smaller than the current element. So you record the value of that node and then remove it -- you would still have to write a node deletion routine.  The problem with a simple BST is that it can become unbalanced and send your complexities to O(n). You can use a self-balancing BST, but it's unusual for priority queues. Instead of BSTs they are usually heaps, as Kerrek said.  The simplest heap implementation that I know personally is the binary heap. The binary heap is theoretically a type of binary tree although not stored as such. So, depending on whether you had to implement a BST or just a binary tree, it might fit your requirements.  17.5k44 gold badges4040 silver badges6969 bronze badges  2  Hmm okay ,for now i will just try to write a code to delete the largest right child, cause not sure if i am allowed to use heap. But my code so far is ok right?  It looks good to me. And deleting the largest right child should be pretty simple, because it will have at most one child of its own.  You need to also specify the type of template you want to instantiate on the right side of the assignment:  Because is not a ; one is the name of a template () and one is the name of a specific type of that template (). You can't create instances of plain templates, you have to give it the type of template you want to use all the time.  71.3k2020 gold badges172172 silver badges245245 bronze badges  4  uh yes i forgot to use the fixed code, that was my first problem ty, thought i fix it here right now to...  @Toma no it won't be closed yet, only one person has voted to close it and it takes 5. Don't accept my answer if it doesn't answer your question. Make sure to indicate the line your error is occurring on.  There is no error right now, i would just like to know, how do i get the highest "number" out of my tree and then delete it, and if i "push" in a new "number" how do i get it, in priority order.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  