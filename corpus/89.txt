 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I am looking for implementing BFS (Breadth-First Search) of binary tree in Python using Stack (not Queue!).  I created Stack() class to work with. I tried to combine recursion and stack pushing but I'm out of ideas.  Queue implementation is very easy but it's important for me to have a Stack() implementation.  1 Answer 1  Algorithmically, a BFS is tied to queue operations and DFS is tied to stack operations.  If you only have stacks though, you can form something like a queue out of two stacks.  Stacks implement a FILO (first-in,last-out) order, whereas queues implement FIFO (first-in, first out).  If you put three numbers, 1,2,3 in a stack, and pull them out, you come up with 3,2,1.  If you did the same thing with a queue, they would come out as 1,2,3.  Now suppose we put 1,2,3 in stack A, pulled them out as 3,2,1, and put them in stack B. Taking them out of stack B would yield them as 1,2,3, which means that going through two stacks resembles going through a queue.  Now this argument by itself works if you have the whole sequence and input everything all at once and then take it all out. But for BFS/DFSsearches this is not true, you input some things, then take them out before you input more.  You can still make a BFS work by only moving things from stack A to stack B if stack B is totally empty, and at that point transferring the entirety of stack A into B. B being empty ensures things that are put into stack B are all processed before the things being collected in stack A. Putting the entirety of A into B ensures all nodes at the same distance from the center node are kept in the same stack (either A or B) at any given time. Every transfer of content from stack A to B represents being done processing a BFS level at a particular distance from the start node, and inner layers are guaranteed to process before outer layers, which is what a BFS is.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  