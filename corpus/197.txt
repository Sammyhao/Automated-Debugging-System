 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I'm trying to understand how to create a dynamic array of pointers in C++. I understand that returns a pointer to the allocated block of memory and is an array of pointers to . But why to you assign it to a ? I'm struggling to understand that.  1 Answer 1  According to the C++ Standard (4.2 Array-to-pointer conversion)  1 An lvalue or rvalue of type “array of N T” or “array of unknown bound of T” can be converted to a prvalue of type “pointer to T”. The result is a pointer to the first element of the array.  So for example if you have an array like this  then in this declaration  the array designator used as the initializer is implicitly converted to pointer to its first element.  So in general if you have array  then in expressions with rare exceptions it is converted to pointer to its first element of the type .  In this declaration  the initializer is an array elements of which has the type . You can introduce a typedef or an alias declaration  or  So you can write  that is the pointer points to the first element of the dynamically allocated array. As the elements of the array has the type then the type of the pointer to an element of the array is .  That is the operator new returns pointer to the first element of the dynamically allocated array.  248k1818 gold badges161161 silver badges285285 bronze badges  2  1  While closely related, an array to pointer conversion doesn't happen in the code in the question. The type of the new-expression is already a pointer rather than an array.  @user2079303 I described the general principle to make the understanding more clear.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  