 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Given a structure array (in C) I am attempting to print out the results in groups of gender and in sub order by numerical order. For example:  3 Answers 3  You'll need to implement a sorting function that compares the structs as you require  And then use qsort from the standard library.  Inside the compare function you may want to check for id being equal, then you can sort by name (also using ) however you like.  Edit: Just compiled and fixed this up. Here's a little test program  Here is a sort of off question but say i define a function. How would I pass the conents of employee info to that function?  Use your favourite sorting algorithm on the struct array. When comparing two elements of the array to decide which is "greater", compare their genders; if the genders are the same, compare their numbers. (You may want to define a separate function to do this comparison, to make things clearer.) Afterwards, print the sorted array in order using the desired formatting. Keep track of when the gender switches from male to female so you can put in an extra three newlines, as in your example.  Edit: to borrow shamelessly from kallikak, you can just pass your comparison function to qsort, but have it return 1 if one struct is "greater", -1 if it is "less" and (if necessary) 0 if it is the same (using the procedure I outlined above). Take a look at How to write a compare function for qsort from stdlib? for help on writing a custom compare function.  24.6k2929 gold badges129129 silver badges195195 bronze badges  2  Thank you both for the response. I was wondering how to also check for gender while using a sorting algorithm. For example say I am using quicksort if right is < left and left is male then switch?  See the compare method in my example. You can check any of the fields in your struct while making your decision on ordering.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  