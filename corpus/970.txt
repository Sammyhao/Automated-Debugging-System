 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  I get an OutOfMemoryError: Java heap space adding an array of sorted elements to array implementation of a binary search tree. I can add arrays of random Integers fine but when I try adding a sorted array I run into this problem. The root of tree is being set to the smallest or largest element of the sorted array, so when you add the rest of the elements I end up with a extremely unbalanced tree which eats up my memory. Any help on this is much appreciated.  Exception in thread "main" java.lang.OutOfMemoryError: Java heap space at bst.ArrayBinarySearchTree.resize(ArrayBinarySearchTree.java:386) at bst.ArrayBinarySearchTree.addElement(ArrayBinarySearchTree.java:26) at bst.Experiment.main(Experiment.java:90)  I would suggest taking a heap dump and analyse it. There is no reason I can think of why a tree would have more nodes (and use more memory) depending on whether the elements were adding in a particular order. It might not be an optimal arrangement but the memory used should be the same.  The trouble is not with the tree being unbalanced. (An unbalanced binary tree shouldn't use any more memory than a balanced one. It will just slow down some operations.) I suspect that inserting sorted elements is exercising part of your code that is being missed in other cases.  i edited to include my addElement and resize methods. thanks for the comments too.  1 Answer 1  well, you will get an unbalanced tree if you dont have balancing in your tree, such as AVL or red black trees. If you are just building a binary search tree without balancing, it s possible that you get a out of memory exception.  I would recommend you to try it with smaller array, to see if you still get a outofmemory exception. if yes, you have a flaw in your code.  I have a binary search tree in c#, take a look at it. Usually you want to use Nodes instead of using an array to represent a binary search tree. As far as i see, you are using a technique which is usually used for heap data structure for heap sort.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  