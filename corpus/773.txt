 your communities  Find centralized, trusted content and collaborate around the technologies you use most.  Connect and share knowledge within a single location that is structured and easy to search.  Question: Write C functions to perform the following operations on the Binary Search Tree:  Deletetion of a given integer from Binary Search Tree. Inorder traversal without recursion. Preorder traversal without recursion. ( Use of global pointer is not allowed)  My Code:  I have done deletion, but couldn't figure out how to do inorder and pre order using iterative loops, if anyone could help out please help me.  The issue is how to keep track of where you are in the traversal, since you can't use recursion to do it for you. Can you identify, as precisely as possible, what you need to keep track of?  when you can modify the definition of a tree node, you can add a pointer to the parent node and use this to traverse back.  The title and question are not the same. Is in order traversal part of this assignment?  2 Answers 2  The reason recursions is so natural for performing depth-first searches is because you can easily return/backtrack to an earlier state and explore different branches. The compiler achieves this by using a stack of states consisting of parameters and local variables. Replacing recursion can therefore be achieved by using a stack.  Non-recursive in order traversal can be performed by modifying and later restoring the links using a method like Morris Traversal. Assuming this is a homework assignment, I assume you are supposed to attempt to implement this yourself before looking up an existing algorithm such as Morris Traversal. So at this point, the hint of modifying the links may be enough to allow you to implement a solution.  By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy.  