 Length of longest subarray with smaller elements on immediate left for each Array element  Given an array arr[] of length N, the task is to find the length of the longest subarray with smaller elements on the immediate left for each element in the given array.  Example:  Input: arr[] = { 2, 1, 7, 6, 7 } Output: 0 0 2 0 1 Explanation: Index 0 (2): No substring is present to the immediate left having all smaller elements. So, length=0 Index 1 (1): No substring is present to the immediate left having all smaller elements. So, length=0 Index 2 (7): Substring {2, 1} is present to the immediate left having all smaller elements. So, length=2 Index 3 (6): No substring is present to the immediate left having all smaller elements. So, length=0 Index 4 (2): Substring {6} is present to the immediate left having all smaller elements. So, length=1  Approach: For every element travel to its left until the element to the left is greater or the array ends to find the length of the longest subarray with smaller elements on the immediate left. Follow the below steps, to solve this problem:  Traverse each element in array arr[].  For each element run another loop in the left direction.  Count all the elements smaller than the current element until a greater element comes or the array ends.  Print the answer according to the above observation.  Below is the implementation of the above approach:  Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here.  We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !  